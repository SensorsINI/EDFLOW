-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity XYTSStreamToRawStrea is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    streamOut_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    streamOut_V_V_full_n : IN STD_LOGIC;
    streamOut_V_V_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    xStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    xStreamIn_V_V_TVALID : IN STD_LOGIC;
    xStreamIn_V_V_TREADY : OUT STD_LOGIC;
    yStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    yStreamIn_V_V_TVALID : IN STD_LOGIC;
    yStreamIn_V_V_TREADY : OUT STD_LOGIC;
    tsStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    tsStreamIn_V_V_TVALID : IN STD_LOGIC;
    tsStreamIn_V_V_TREADY : OUT STD_LOGIC;
    polStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    polStreamIn_V_V_TVALID : IN STD_LOGIC;
    polStreamIn_V_V_TREADY : OUT STD_LOGIC;
    custDataStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    custDataStreamIn_V_V_TVALID : IN STD_LOGIC;
    custDataStreamIn_V_V_TREADY : OUT STD_LOGIC;
    tsReg_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    tsReg_V_ap_vld : OUT STD_LOGIC;
    glLastTSReg_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    glLastTSReg_V_ap_vld : OUT STD_LOGIC;
    yReg_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    yReg_V_ap_vld : OUT STD_LOGIC;
    glLastYReg_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    glLastYReg_V_ap_vld : OUT STD_LOGIC;
    tsDiffFlgReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    tsDiffFlgReg_V_ap_vld : OUT STD_LOGIC;
    yDiffFlgReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    yDiffFlgReg_V_ap_vld : OUT STD_LOGIC;
    nonMonTSDiffFlgReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    nonMonTSDiffFlgReg_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of XYTSStreamToRawStrea is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv16_7001 : STD_LOGIC_VECTOR (15 downto 0) := "0111000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal internal_ap_ready : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal tmp_3_reg_354 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal xStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal xStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal xStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal xStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal xStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal xStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal xStreamIn_V_V_0_sel : STD_LOGIC;
    signal xStreamIn_V_V_0_load_A : STD_LOGIC;
    signal xStreamIn_V_V_0_load_B : STD_LOGIC;
    signal xStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal xStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal yStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal yStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal yStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal yStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal yStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal yStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal yStreamIn_V_V_0_sel : STD_LOGIC;
    signal yStreamIn_V_V_0_load_A : STD_LOGIC;
    signal yStreamIn_V_V_0_load_B : STD_LOGIC;
    signal yStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal yStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal tsStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal tsStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal tsStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal tsStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal tsStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal tsStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal tsStreamIn_V_V_0_sel : STD_LOGIC;
    signal tsStreamIn_V_V_0_load_A : STD_LOGIC;
    signal tsStreamIn_V_V_0_load_B : STD_LOGIC;
    signal tsStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tsStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal polStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal polStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal polStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal polStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal polStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal polStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal polStreamIn_V_V_0_sel : STD_LOGIC;
    signal polStreamIn_V_V_0_load_A : STD_LOGIC;
    signal polStreamIn_V_V_0_load_B : STD_LOGIC;
    signal polStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal polStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal custDataStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal custDataStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal custDataStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal custDataStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal glLastTS_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal glLastY_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal xStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal yStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal tsStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal polStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal custDataStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal streamOut_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_4_reg_363 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_1_fu_225_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_1_reg_334 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_predicate_op58_write_state5 : BOOLEAN;
    signal ap_predicate_op59_write_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_2_fu_229_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2_reg_339 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_fu_233_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_reg_344 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_237_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_reg_349 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_p_0102_1_reg_176 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_s_reg_191 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_s_reg_191 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_055_1_reg_208 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_055_1_reg_208 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op46_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tsRaw_V_fu_304_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal p_Result_1_fu_313_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_2_fu_329_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ult_fu_252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_291_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_321_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= real_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    custDataStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                custDataStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((custDataStreamIn_V_V_0_state = ap_const_lv2_2) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_3) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_0) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((custDataStreamIn_V_V_0_state = ap_const_lv2_1) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_3) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_0) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((custDataStreamIn_V_V_0_vld_in = ap_const_logic_0) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((custDataStreamIn_V_V_0_ack_out = ap_const_logic_0) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (custDataStreamIn_V_V_0_state = ap_const_lv2_3)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_1) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_2) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    polStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                polStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((polStreamIn_V_V_0_ack_out = ap_const_logic_1) and (polStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        polStreamIn_V_V_0_sel_rd <= not(polStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    polStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                polStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((polStreamIn_V_V_0_ack_in = ap_const_logic_1) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        polStreamIn_V_V_0_sel_wr <= not(polStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    polStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                polStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((polStreamIn_V_V_0_state = ap_const_lv2_2) and (polStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((polStreamIn_V_V_0_state = ap_const_lv2_3) and (polStreamIn_V_V_0_vld_in = ap_const_logic_0) and (polStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    polStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((polStreamIn_V_V_0_state = ap_const_lv2_1) and (polStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((polStreamIn_V_V_0_state = ap_const_lv2_3) and (polStreamIn_V_V_0_ack_out = ap_const_logic_0) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    polStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((polStreamIn_V_V_0_vld_in = ap_const_logic_0) and (polStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((polStreamIn_V_V_0_ack_out = ap_const_logic_0) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (polStreamIn_V_V_0_state = ap_const_lv2_3)) or ((polStreamIn_V_V_0_state = ap_const_lv2_1) and (polStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((polStreamIn_V_V_0_state = ap_const_lv2_2) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    polStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    polStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    tsStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tsStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((tsStreamIn_V_V_0_ack_out = ap_const_logic_1) and (tsStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        tsStreamIn_V_V_0_sel_rd <= not(tsStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    tsStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tsStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((tsStreamIn_V_V_0_ack_in = ap_const_logic_1) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        tsStreamIn_V_V_0_sel_wr <= not(tsStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    tsStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tsStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((tsStreamIn_V_V_0_state = ap_const_lv2_2) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_3) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_0) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((tsStreamIn_V_V_0_state = ap_const_lv2_1) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_3) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_0) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((tsStreamIn_V_V_0_vld_in = ap_const_logic_0) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((tsStreamIn_V_V_0_ack_out = ap_const_logic_0) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (tsStreamIn_V_V_0_state = ap_const_lv2_3)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_1) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_2) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    xStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                xStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((xStreamIn_V_V_0_ack_out = ap_const_logic_1) and (xStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        xStreamIn_V_V_0_sel_rd <= not(xStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    xStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                xStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((xStreamIn_V_V_0_ack_in = ap_const_logic_1) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        xStreamIn_V_V_0_sel_wr <= not(xStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    xStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                xStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((xStreamIn_V_V_0_state = ap_const_lv2_2) and (xStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((xStreamIn_V_V_0_state = ap_const_lv2_3) and (xStreamIn_V_V_0_vld_in = ap_const_logic_0) and (xStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    xStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((xStreamIn_V_V_0_state = ap_const_lv2_3) and (xStreamIn_V_V_0_ack_out = ap_const_logic_0) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1)) or ((xStreamIn_V_V_0_state = ap_const_lv2_1) and (xStreamIn_V_V_0_ack_out = ap_const_logic_0)))) then 
                    xStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif ((((xStreamIn_V_V_0_state = ap_const_lv2_2) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1)) or (not(((xStreamIn_V_V_0_vld_in = ap_const_logic_0) and (xStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((xStreamIn_V_V_0_ack_out = ap_const_logic_0) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (xStreamIn_V_V_0_state = ap_const_lv2_3)) or ((xStreamIn_V_V_0_state = ap_const_lv2_1) and (xStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    xStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    xStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    yStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                yStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((yStreamIn_V_V_0_ack_out = ap_const_logic_1) and (yStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        yStreamIn_V_V_0_sel_rd <= not(yStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    yStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                yStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((yStreamIn_V_V_0_ack_in = ap_const_logic_1) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        yStreamIn_V_V_0_sel_wr <= not(yStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    yStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                yStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((yStreamIn_V_V_0_state = ap_const_lv2_2) and (yStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((yStreamIn_V_V_0_state = ap_const_lv2_3) and (yStreamIn_V_V_0_vld_in = ap_const_logic_0) and (yStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    yStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((yStreamIn_V_V_0_state = ap_const_lv2_1) and (yStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((yStreamIn_V_V_0_state = ap_const_lv2_3) and (yStreamIn_V_V_0_ack_out = ap_const_logic_0) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    yStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((yStreamIn_V_V_0_vld_in = ap_const_logic_0) and (yStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((yStreamIn_V_V_0_ack_out = ap_const_logic_0) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (yStreamIn_V_V_0_state = ap_const_lv2_3)) or ((yStreamIn_V_V_0_state = ap_const_lv2_1) and (yStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((yStreamIn_V_V_0_state = ap_const_lv2_2) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    yStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    yStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_p_0102_1_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_3_fu_246_p2 = ap_const_lv1_1) and (tmp_4_fu_268_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_4_fu_268_p2 = ap_const_lv1_1) and (tmp_3_fu_246_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_p_0102_1_reg_176 <= ap_const_lv1_0;
            elsif (((tmp_3_fu_246_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_p_0102_1_reg_176 <= rev1_fu_258_p2;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_p_055_1_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_fu_246_p2 = ap_const_lv1_1) and (tmp_4_fu_268_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_p_055_1_reg_208 <= ap_const_lv1_1;
            elsif ((((tmp_4_fu_268_p2 = ap_const_lv1_1) and (tmp_3_fu_246_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_3_fu_246_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_p_055_1_reg_208 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_p_s_reg_191_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_3_fu_246_p2 = ap_const_lv1_1) and (tmp_4_fu_268_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_4_fu_268_p2 = ap_const_lv1_1) and (tmp_3_fu_246_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_p_s_reg_191 <= ap_const_lv1_0;
            elsif (((tmp_3_fu_246_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_p_s_reg_191 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_p_055_1_reg_208 <= ap_phi_reg_pp0_iter0_p_055_1_reg_208;
                ap_phi_reg_pp0_iter1_p_s_reg_191 <= ap_phi_reg_pp0_iter0_p_s_reg_191;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                glLastTS_V <= tsStreamIn_V_V_0_data_out;
                glLastY_V <= yStreamIn_V_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                polStreamIn_V_V_0_payload_A <= polStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                polStreamIn_V_V_0_payload_B <= polStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_2_reg_339 <= tmp_2_fu_229_p1;
                tmp_3_reg_354 <= tmp_3_fu_246_p2;
                tmp_6_reg_344 <= tmp_6_fu_233_p1;
                tmp_7_reg_349 <= tmp_7_fu_237_p1;
                tmp_V_1_reg_334 <= tmp_V_1_fu_225_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_fu_246_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_4_reg_363 <= tmp_4_fu_268_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tsStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                tsStreamIn_V_V_0_payload_A <= tsStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tsStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                tsStreamIn_V_V_0_payload_B <= tsStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((xStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                xStreamIn_V_V_0_payload_A <= xStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((xStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                xStreamIn_V_V_0_payload_B <= xStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((yStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                yStreamIn_V_V_0_payload_A <= yStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((yStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                yStreamIn_V_V_0_payload_B <= yStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((real_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_full_n, tmp_3_reg_354, ap_predicate_op46_write_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op46_write_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_full_n, tmp_3_reg_354, ap_predicate_op46_write_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op46_write_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_done_reg, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_full_n, tmp_3_reg_354, ap_predicate_op46_write_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op46_write_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_full_n, tmp_3_reg_354, xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out, ap_predicate_op58_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op58_write_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_full_n, tmp_3_reg_354, xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out, ap_predicate_op58_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op58_write_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_full_n, tmp_3_reg_354, xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out, ap_predicate_op58_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op58_write_state5 = ap_const_boolean_1)))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter0, streamOut_V_V_full_n, tmp_3_reg_354)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_done_reg = ap_const_logic_1) or ((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter0, streamOut_V_V_full_n, tmp_3_reg_354)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_done_reg = ap_const_logic_1) or ((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter0, streamOut_V_V_full_n, tmp_3_reg_354)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_done_reg = ap_const_logic_1) or ((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(streamOut_V_V_full_n, tmp_3_reg_354)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(streamOut_V_V_full_n, tmp_3_reg_354, ap_predicate_op46_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op46_write_state4 = ap_const_boolean_1)));
    end process;


    ap_block_state5_pp0_stage1_iter1_assign_proc : process(streamOut_V_V_full_n, tmp_3_reg_354, ap_predicate_op58_write_state5, ap_predicate_op59_write_state5)
    begin
                ap_block_state5_pp0_stage1_iter1 <= (((tmp_3_reg_354 = ap_const_lv1_0) and (streamOut_V_V_full_n = ap_const_logic_0)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((streamOut_V_V_full_n = ap_const_logic_0) and (ap_predicate_op58_write_state5 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= real_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op46_write_state4_assign_proc : process(tmp_3_reg_354, tmp_4_reg_363)
    begin
                ap_predicate_op46_write_state4 <= ((tmp_4_reg_363 = ap_const_lv1_0) and (tmp_3_reg_354 = ap_const_lv1_1));
    end process;


    ap_predicate_op58_write_state5_assign_proc : process(tmp_3_reg_354, tmp_4_reg_363)
    begin
                ap_predicate_op58_write_state5 <= ((tmp_4_reg_363 = ap_const_lv1_0) and (tmp_3_reg_354 = ap_const_lv1_1));
    end process;


    ap_predicate_op59_write_state5_assign_proc : process(tmp_3_reg_354, tmp_4_reg_363)
    begin
                ap_predicate_op59_write_state5 <= ((tmp_4_reg_363 = ap_const_lv1_1) and (tmp_3_reg_354 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    custDataStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            custDataStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            custDataStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    custDataStreamIn_V_V_0_vld_in <= custDataStreamIn_V_V_TVALID;
    custDataStreamIn_V_V_0_vld_out <= custDataStreamIn_V_V_0_state(0);

    custDataStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, custDataStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            custDataStreamIn_V_V_TDATA_blk_n <= custDataStreamIn_V_V_0_state(0);
        else 
            custDataStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    custDataStreamIn_V_V_TREADY <= custDataStreamIn_V_V_0_state(1);
    glLastTSReg_V <= glLastTS_V;

    glLastTSReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glLastTSReg_V_ap_vld <= ap_const_logic_1;
        else 
            glLastTSReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    glLastYReg_V <= glLastY_V;

    glLastYReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glLastYReg_V_ap_vld <= ap_const_logic_1;
        else 
            glLastYReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    nonMonTSDiffFlgReg_V <= ap_phi_reg_pp0_iter0_p_0102_1_reg_176;

    nonMonTSDiffFlgReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            nonMonTSDiffFlgReg_V_ap_vld <= ap_const_logic_1;
        else 
            nonMonTSDiffFlgReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_313_p3 <= (ap_const_lv4_1 & tmp_6_reg_344);
    p_Result_2_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_321_p4),16));
    p_Result_s_fu_291_p3 <= (ap_const_lv1_1 & tmp_2_reg_339);
    polStreamIn_V_V_0_ack_in <= polStreamIn_V_V_0_state(1);

    polStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            polStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            polStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    polStreamIn_V_V_0_data_out_assign_proc : process(polStreamIn_V_V_0_payload_A, polStreamIn_V_V_0_payload_B, polStreamIn_V_V_0_sel)
    begin
        if ((polStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            polStreamIn_V_V_0_data_out <= polStreamIn_V_V_0_payload_B;
        else 
            polStreamIn_V_V_0_data_out <= polStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    polStreamIn_V_V_0_load_A <= (polStreamIn_V_V_0_state_cmp_full and not(polStreamIn_V_V_0_sel_wr));
    polStreamIn_V_V_0_load_B <= (polStreamIn_V_V_0_state_cmp_full and polStreamIn_V_V_0_sel_wr);
    polStreamIn_V_V_0_sel <= polStreamIn_V_V_0_sel_rd;
    polStreamIn_V_V_0_state_cmp_full <= '0' when (polStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    polStreamIn_V_V_0_vld_in <= polStreamIn_V_V_TVALID;
    polStreamIn_V_V_0_vld_out <= polStreamIn_V_V_0_state(0);

    polStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, polStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            polStreamIn_V_V_TDATA_blk_n <= polStreamIn_V_V_0_state(0);
        else 
            polStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    polStreamIn_V_V_TREADY <= polStreamIn_V_V_0_state(1);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    rev1_fu_258_p2 <= (ult_fu_252_p2 xor ap_const_lv1_1);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    streamOut_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, streamOut_V_V_full_n, tmp_3_reg_354, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage0, tmp_4_reg_363)
    begin
        if ((((tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((tmp_4_reg_363 = ap_const_lv1_1) and (tmp_3_reg_354 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_4_reg_363 = ap_const_lv1_0) and (tmp_3_reg_354 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_4_reg_363 = ap_const_lv1_0) and (tmp_3_reg_354 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            streamOut_V_V_blk_n <= streamOut_V_V_full_n;
        else 
            streamOut_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    streamOut_V_V_din_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_3_reg_354, ap_CS_fsm_pp0_stage1, ap_predicate_op58_write_state5, ap_predicate_op59_write_state5, ap_predicate_op46_write_state4, tsRaw_V_fu_304_p3, ap_block_pp0_stage2_01001, p_Result_1_fu_313_p3, ap_block_pp0_stage0_01001, p_Result_2_fu_329_p1, ap_block_pp0_stage1_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op58_write_state5 = ap_const_boolean_1)))) then 
            streamOut_V_V_din <= p_Result_2_fu_329_p1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (tmp_3_reg_354 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op46_write_state4 = ap_const_boolean_1)))) then 
            streamOut_V_V_din <= p_Result_1_fu_313_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            streamOut_V_V_din <= tsRaw_V_fu_304_p3;
        else 
            streamOut_V_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    streamOut_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_3_reg_354, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_predicate_op58_write_state5, ap_predicate_op59_write_state5, ap_block_pp0_stage1_11001, ap_predicate_op46_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op59_write_state5 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op58_write_state5 = ap_const_boolean_1)) or ((tmp_3_reg_354 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op46_write_state4 = ap_const_boolean_1)))) then 
            streamOut_V_V_write <= ap_const_logic_1;
        else 
            streamOut_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_229_p1 <= tsStreamIn_V_V_0_data_out(15 - 1 downto 0);
    tmp_3_fu_246_p2 <= "1" when (tsStreamIn_V_V_0_data_out = glLastTS_V) else "0";
    tmp_4_fu_268_p2 <= "1" when (yStreamIn_V_V_0_data_out = glLastY_V) else "0";
    tmp_5_fu_298_p2 <= "1" when (p_Result_s_fu_291_p3 = ap_const_lv16_8000) else "0";
    tmp_6_fu_233_p1 <= yStreamIn_V_V_0_data_out(12 - 1 downto 0);
    tmp_7_fu_237_p1 <= xStreamIn_V_V_0_data_out(12 - 1 downto 0);
    tmp_V_1_fu_225_p1 <= polStreamIn_V_V_0_data_out(1 - 1 downto 0);
    tmp_fu_321_p4 <= ((ap_const_lv1_1 & tmp_V_1_reg_334) & tmp_7_reg_349);
    tsDiffFlgReg_V <= ap_phi_reg_pp0_iter1_p_s_reg_191;

    tsDiffFlgReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            tsDiffFlgReg_V_ap_vld <= ap_const_logic_1;
        else 
            tsDiffFlgReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tsRaw_V_fu_304_p3 <= 
        ap_const_lv16_7001 when (tmp_5_fu_298_p2(0) = '1') else 
        p_Result_s_fu_291_p3;
    tsReg_V <= tsStreamIn_V_V_0_data_out;

    tsReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tsReg_V_ap_vld <= ap_const_logic_1;
        else 
            tsReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tsStreamIn_V_V_0_ack_in <= tsStreamIn_V_V_0_state(1);

    tsStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tsStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            tsStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    tsStreamIn_V_V_0_data_out_assign_proc : process(tsStreamIn_V_V_0_payload_A, tsStreamIn_V_V_0_payload_B, tsStreamIn_V_V_0_sel)
    begin
        if ((tsStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            tsStreamIn_V_V_0_data_out <= tsStreamIn_V_V_0_payload_B;
        else 
            tsStreamIn_V_V_0_data_out <= tsStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    tsStreamIn_V_V_0_load_A <= (tsStreamIn_V_V_0_state_cmp_full and not(tsStreamIn_V_V_0_sel_wr));
    tsStreamIn_V_V_0_load_B <= (tsStreamIn_V_V_0_state_cmp_full and tsStreamIn_V_V_0_sel_wr);
    tsStreamIn_V_V_0_sel <= tsStreamIn_V_V_0_sel_rd;
    tsStreamIn_V_V_0_state_cmp_full <= '0' when (tsStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    tsStreamIn_V_V_0_vld_in <= tsStreamIn_V_V_TVALID;
    tsStreamIn_V_V_0_vld_out <= tsStreamIn_V_V_0_state(0);

    tsStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, tsStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tsStreamIn_V_V_TDATA_blk_n <= tsStreamIn_V_V_0_state(0);
        else 
            tsStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tsStreamIn_V_V_TREADY <= tsStreamIn_V_V_0_state(1);
    ult_fu_252_p2 <= "1" when (unsigned(glLastTS_V) < unsigned(tsStreamIn_V_V_0_data_out)) else "0";
    xStreamIn_V_V_0_ack_in <= xStreamIn_V_V_0_state(1);

    xStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            xStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            xStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    xStreamIn_V_V_0_data_out_assign_proc : process(xStreamIn_V_V_0_payload_A, xStreamIn_V_V_0_payload_B, xStreamIn_V_V_0_sel)
    begin
        if ((xStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            xStreamIn_V_V_0_data_out <= xStreamIn_V_V_0_payload_B;
        else 
            xStreamIn_V_V_0_data_out <= xStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    xStreamIn_V_V_0_load_A <= (xStreamIn_V_V_0_state_cmp_full and not(xStreamIn_V_V_0_sel_wr));
    xStreamIn_V_V_0_load_B <= (xStreamIn_V_V_0_state_cmp_full and xStreamIn_V_V_0_sel_wr);
    xStreamIn_V_V_0_sel <= xStreamIn_V_V_0_sel_rd;
    xStreamIn_V_V_0_state_cmp_full <= '0' when (xStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    xStreamIn_V_V_0_vld_in <= xStreamIn_V_V_TVALID;
    xStreamIn_V_V_0_vld_out <= xStreamIn_V_V_0_state(0);

    xStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, xStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            xStreamIn_V_V_TDATA_blk_n <= xStreamIn_V_V_0_state(0);
        else 
            xStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    xStreamIn_V_V_TREADY <= xStreamIn_V_V_0_state(1);
    yDiffFlgReg_V <= ap_phi_reg_pp0_iter1_p_055_1_reg_208;

    yDiffFlgReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            yDiffFlgReg_V_ap_vld <= ap_const_logic_1;
        else 
            yDiffFlgReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    yReg_V <= yStreamIn_V_V_0_data_out;

    yReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            yReg_V_ap_vld <= ap_const_logic_1;
        else 
            yReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    yStreamIn_V_V_0_ack_in <= yStreamIn_V_V_0_state(1);

    yStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            yStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            yStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    yStreamIn_V_V_0_data_out_assign_proc : process(yStreamIn_V_V_0_payload_A, yStreamIn_V_V_0_payload_B, yStreamIn_V_V_0_sel)
    begin
        if ((yStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            yStreamIn_V_V_0_data_out <= yStreamIn_V_V_0_payload_B;
        else 
            yStreamIn_V_V_0_data_out <= yStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    yStreamIn_V_V_0_load_A <= (yStreamIn_V_V_0_state_cmp_full and not(yStreamIn_V_V_0_sel_wr));
    yStreamIn_V_V_0_load_B <= (yStreamIn_V_V_0_state_cmp_full and yStreamIn_V_V_0_sel_wr);
    yStreamIn_V_V_0_sel <= yStreamIn_V_V_0_sel_rd;
    yStreamIn_V_V_0_state_cmp_full <= '0' when (yStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    yStreamIn_V_V_0_vld_in <= yStreamIn_V_V_TVALID;
    yStreamIn_V_V_0_vld_out <= yStreamIn_V_V_0_state(0);

    yStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, yStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            yStreamIn_V_V_TDATA_blk_n <= yStreamIn_V_V_0_state(0);
        else 
            yStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    yStreamIn_V_V_TREADY <= yStreamIn_V_V_0_state(1);
end behav;

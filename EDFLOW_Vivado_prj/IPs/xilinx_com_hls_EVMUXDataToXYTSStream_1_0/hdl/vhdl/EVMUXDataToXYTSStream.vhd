-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EVMUXDataToXYTSStream is
generic (
    C_S_AXI_CONFIG_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONFIG_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tsStreamOut_V_V_TREADY : IN STD_LOGIC;
    yStreamOut_V_V_TREADY : IN STD_LOGIC;
    xStreamOut_V_V_TREADY : IN STD_LOGIC;
    polStreamOut_V_V_TREADY : IN STD_LOGIC;
    eventFIFOIn_V : IN STD_LOGIC_VECTOR (15 downto 0);
    eventFIFODataValid_V : IN STD_LOGIC_VECTOR (0 downto 0);
    dataReg_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    dataReg_V_ap_vld : OUT STD_LOGIC;
    xRegReg_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    xRegReg_V_ap_vld : OUT STD_LOGIC;
    yRegReg_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    yRegReg_V_ap_vld : OUT STD_LOGIC;
    tsRegReg_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    tsRegReg_V_ap_vld : OUT STD_LOGIC;
    polRegReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    polRegReg_V_ap_vld : OUT STD_LOGIC;
    tsWrapRegReg_V : OUT STD_LOGIC_VECTOR (47 downto 0);
    tsWrapRegReg_V_ap_vld : OUT STD_LOGIC;
    xStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    xStreamOut_V_V_TVALID : OUT STD_LOGIC;
    yStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    yStreamOut_V_V_TVALID : OUT STD_LOGIC;
    tsStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    tsStreamOut_V_V_TVALID : OUT STD_LOGIC;
    polStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    polStreamOut_V_V_TVALID : OUT STD_LOGIC;
    s_axi_config_AWVALID : IN STD_LOGIC;
    s_axi_config_AWREADY : OUT STD_LOGIC;
    s_axi_config_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_config_WVALID : IN STD_LOGIC;
    s_axi_config_WREADY : OUT STD_LOGIC;
    s_axi_config_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_config_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH/8-1 downto 0);
    s_axi_config_ARVALID : IN STD_LOGIC;
    s_axi_config_ARREADY : OUT STD_LOGIC;
    s_axi_config_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_config_RVALID : OUT STD_LOGIC;
    s_axi_config_RREADY : IN STD_LOGIC;
    s_axi_config_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_config_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_config_BVALID : OUT STD_LOGIC;
    s_axi_config_BREADY : IN STD_LOGIC;
    s_axi_config_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of EVMUXDataToXYTSStream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "EVMUXDataToXYTSStream,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z100ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=6.289000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=909,HLS_SYN_LUT=819}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tsStreamOut_V_V_1_ack_in : STD_LOGIC;
    signal eventFIFODataValid_V_1_read_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op37_write_state1 : BOOLEAN;
    signal yStreamOut_V_V_1_ack_in : STD_LOGIC;
    signal xStreamOut_V_V_1_ack_in : STD_LOGIC;
    signal polStreamOut_V_V_1_ack_in : STD_LOGIC;
    signal ap_block_state1_io : BOOLEAN;
    signal status_rowNum_1_ack_in : STD_LOGIC;
    signal status_colNum_1_ack_in : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal eventFIFODataValid_V_1_reg_564 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_618 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_622 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op82_write_state2 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal status_rowNum_1_data_reg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal status_rowNum_1_vld_reg : STD_LOGIC := '0';
    signal status_rowNum_1_vld_in : STD_LOGIC;
    signal status_colNum_1_data_reg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal status_colNum_1_vld_reg : STD_LOGIC := '0';
    signal status_colNum_1_vld_in : STD_LOGIC;
    signal xStreamOut_V_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamOut_V_V_1_vld_in : STD_LOGIC;
    signal xStreamOut_V_V_1_vld_out : STD_LOGIC;
    signal xStreamOut_V_V_1_ack_out : STD_LOGIC;
    signal xStreamOut_V_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamOut_V_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamOut_V_V_1_sel_rd : STD_LOGIC := '0';
    signal xStreamOut_V_V_1_sel_wr : STD_LOGIC := '0';
    signal xStreamOut_V_V_1_sel : STD_LOGIC;
    signal xStreamOut_V_V_1_load_A : STD_LOGIC;
    signal xStreamOut_V_V_1_load_B : STD_LOGIC;
    signal xStreamOut_V_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal xStreamOut_V_V_1_state_cmp_full : STD_LOGIC;
    signal yStreamOut_V_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamOut_V_V_1_vld_in : STD_LOGIC;
    signal yStreamOut_V_V_1_vld_out : STD_LOGIC;
    signal yStreamOut_V_V_1_ack_out : STD_LOGIC;
    signal yStreamOut_V_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamOut_V_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamOut_V_V_1_sel_rd : STD_LOGIC := '0';
    signal yStreamOut_V_V_1_sel_wr : STD_LOGIC := '0';
    signal yStreamOut_V_V_1_sel : STD_LOGIC;
    signal yStreamOut_V_V_1_load_A : STD_LOGIC;
    signal yStreamOut_V_V_1_load_B : STD_LOGIC;
    signal yStreamOut_V_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal yStreamOut_V_V_1_state_cmp_full : STD_LOGIC;
    signal tsStreamOut_V_V_1_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamOut_V_V_1_vld_in : STD_LOGIC;
    signal tsStreamOut_V_V_1_vld_out : STD_LOGIC;
    signal tsStreamOut_V_V_1_ack_out : STD_LOGIC;
    signal tsStreamOut_V_V_1_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamOut_V_V_1_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamOut_V_V_1_sel_rd : STD_LOGIC := '0';
    signal tsStreamOut_V_V_1_sel_wr : STD_LOGIC := '0';
    signal tsStreamOut_V_V_1_sel : STD_LOGIC;
    signal tsStreamOut_V_V_1_load_A : STD_LOGIC;
    signal tsStreamOut_V_V_1_load_B : STD_LOGIC;
    signal tsStreamOut_V_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tsStreamOut_V_V_1_state_cmp_full : STD_LOGIC;
    signal polStreamOut_V_V_1_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamOut_V_V_1_vld_in : STD_LOGIC;
    signal polStreamOut_V_V_1_vld_out : STD_LOGIC;
    signal polStreamOut_V_V_1_ack_out : STD_LOGIC;
    signal polStreamOut_V_V_1_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamOut_V_V_1_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamOut_V_V_1_sel_rd : STD_LOGIC := '0';
    signal polStreamOut_V_V_1_sel_wr : STD_LOGIC := '0';
    signal polStreamOut_V_V_1_sel : STD_LOGIC;
    signal polStreamOut_V_V_1_load_A : STD_LOGIC;
    signal polStreamOut_V_V_1_load_B : STD_LOGIC;
    signal polStreamOut_V_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal polStreamOut_V_V_1_state_cmp_full : STD_LOGIC;
    signal tsWrap_V : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    signal ts_V : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    signal y_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal statusStatRowNum : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal statusStatColNum : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal x_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal pol_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal xStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal yStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal tsStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal polStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal tmp_V_fu_340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_1_fu_349_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_436_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_3_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_452_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_3_cast_fu_490_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_495_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_526_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_statusStatRowNum_loc_2_phi_fu_224_p12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_statusStatRowNum_loc_2_reg_220 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_505_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_statusStatColNum_loc_3_phi_fu_244_p12 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_statusStatColNum_loc_3_reg_240 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_477_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_tsWrap_V_loc_4_reg_260 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter1_tsWrap_V_loc_4_reg_260 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter0_ts_V_loc_1_reg_278 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter1_ts_V_loc_1_reg_278 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter0_y_V_loc_2_reg_295 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter1_y_V_loc_2_reg_295 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_p_s_reg_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_s_reg_312 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_448_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_V_3_fu_463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_tsRegReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_xRegReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_yRegReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_polRegReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_tsWrapRegReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_dataReg_V_dummy_ack : STD_LOGIC := '0';
    signal p_Result_1_fu_380_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_10_cast_fu_390_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_0164_0_off_fu_400_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_406_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_13_fu_428_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_432_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_8_fu_522_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_6_fu_518_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component EVMUXDataToXYTSStream_config_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        status_rowNum : IN STD_LOGIC_VECTOR (63 downto 0);
        status_rowNum_ap_vld : IN STD_LOGIC;
        status_colNum : IN STD_LOGIC_VECTOR (63 downto 0);
        status_colNum_ap_vld : IN STD_LOGIC );
    end component;



begin
    EVMUXDataToXYTSStream_config_s_axi_U : component EVMUXDataToXYTSStream_config_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONFIG_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONFIG_DATA_WIDTH)
    port map (
        AWVALID => s_axi_config_AWVALID,
        AWREADY => s_axi_config_AWREADY,
        AWADDR => s_axi_config_AWADDR,
        WVALID => s_axi_config_WVALID,
        WREADY => s_axi_config_WREADY,
        WDATA => s_axi_config_WDATA,
        WSTRB => s_axi_config_WSTRB,
        ARVALID => s_axi_config_ARVALID,
        ARREADY => s_axi_config_ARREADY,
        ARADDR => s_axi_config_ARADDR,
        RVALID => s_axi_config_RVALID,
        RREADY => s_axi_config_RREADY,
        RDATA => s_axi_config_RDATA,
        RRESP => s_axi_config_RRESP,
        BVALID => s_axi_config_BVALID,
        BREADY => s_axi_config_BREADY,
        BRESP => s_axi_config_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        status_rowNum => status_rowNum_1_data_reg,
        status_rowNum_ap_vld => status_rowNum_1_vld_reg,
        status_colNum => status_colNum_1_data_reg,
        status_colNum_ap_vld => status_colNum_1_vld_reg);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_dataReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_dataReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_dataReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_dataReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_polRegReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_polRegReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_polRegReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_polRegReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_tsRegReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_tsRegReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_tsRegReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_tsRegReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_tsWrapRegReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_tsWrapRegReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_tsWrapRegReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_tsWrapRegReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_xRegReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_xRegReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_xRegReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_xRegReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_yRegReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_yRegReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_yRegReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_yRegReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    polStreamOut_V_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStreamOut_V_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((polStreamOut_V_V_1_ack_out = ap_const_logic_1) and (polStreamOut_V_V_1_vld_out = ap_const_logic_1))) then 
                                        polStreamOut_V_V_1_sel_rd <= not(polStreamOut_V_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    polStreamOut_V_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStreamOut_V_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((polStreamOut_V_V_1_ack_in = ap_const_logic_1) and (polStreamOut_V_V_1_vld_in = ap_const_logic_1))) then 
                                        polStreamOut_V_V_1_sel_wr <= not(polStreamOut_V_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    polStreamOut_V_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStreamOut_V_V_1_state <= ap_const_lv2_0;
            else
                if ((((polStreamOut_V_V_1_vld_in = ap_const_logic_0) and (polStreamOut_V_V_1_state = ap_const_lv2_2)) or ((polStreamOut_V_V_1_vld_in = ap_const_logic_0) and (polStreamOut_V_V_1_state = ap_const_lv2_3) and (polStreamOut_V_V_1_ack_out = ap_const_logic_1)))) then 
                    polStreamOut_V_V_1_state <= ap_const_lv2_2;
                elsif ((((polStreamOut_V_V_1_ack_out = ap_const_logic_0) and (polStreamOut_V_V_1_state = ap_const_lv2_1)) or ((polStreamOut_V_V_1_ack_out = ap_const_logic_0) and (polStreamOut_V_V_1_state = ap_const_lv2_3) and (polStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    polStreamOut_V_V_1_state <= ap_const_lv2_1;
                elsif (((not(((polStreamOut_V_V_1_vld_in = ap_const_logic_0) and (polStreamOut_V_V_1_ack_out = ap_const_logic_1))) and not(((polStreamOut_V_V_1_ack_out = ap_const_logic_0) and (polStreamOut_V_V_1_vld_in = ap_const_logic_1))) and (polStreamOut_V_V_1_state = ap_const_lv2_3)) or ((polStreamOut_V_V_1_state = ap_const_lv2_1) and (polStreamOut_V_V_1_ack_out = ap_const_logic_1)) or ((polStreamOut_V_V_1_state = ap_const_lv2_2) and (polStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    polStreamOut_V_V_1_state <= ap_const_lv2_3;
                else 
                    polStreamOut_V_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    tsStreamOut_V_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                tsStreamOut_V_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((tsStreamOut_V_V_1_ack_out = ap_const_logic_1) and (tsStreamOut_V_V_1_vld_out = ap_const_logic_1))) then 
                                        tsStreamOut_V_V_1_sel_rd <= not(tsStreamOut_V_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    tsStreamOut_V_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                tsStreamOut_V_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((tsStreamOut_V_V_1_ack_in = ap_const_logic_1) and (tsStreamOut_V_V_1_vld_in = ap_const_logic_1))) then 
                                        tsStreamOut_V_V_1_sel_wr <= not(tsStreamOut_V_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    tsStreamOut_V_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                tsStreamOut_V_V_1_state <= ap_const_lv2_0;
            else
                if ((((tsStreamOut_V_V_1_vld_in = ap_const_logic_0) and (tsStreamOut_V_V_1_state = ap_const_lv2_2)) or ((tsStreamOut_V_V_1_vld_in = ap_const_logic_0) and (tsStreamOut_V_V_1_state = ap_const_lv2_3) and (tsStreamOut_V_V_1_ack_out = ap_const_logic_1)))) then 
                    tsStreamOut_V_V_1_state <= ap_const_lv2_2;
                elsif ((((tsStreamOut_V_V_1_ack_out = ap_const_logic_0) and (tsStreamOut_V_V_1_state = ap_const_lv2_1)) or ((tsStreamOut_V_V_1_ack_out = ap_const_logic_0) and (tsStreamOut_V_V_1_state = ap_const_lv2_3) and (tsStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    tsStreamOut_V_V_1_state <= ap_const_lv2_1;
                elsif (((not(((tsStreamOut_V_V_1_vld_in = ap_const_logic_0) and (tsStreamOut_V_V_1_ack_out = ap_const_logic_1))) and not(((tsStreamOut_V_V_1_ack_out = ap_const_logic_0) and (tsStreamOut_V_V_1_vld_in = ap_const_logic_1))) and (tsStreamOut_V_V_1_state = ap_const_lv2_3)) or ((tsStreamOut_V_V_1_state = ap_const_lv2_1) and (tsStreamOut_V_V_1_ack_out = ap_const_logic_1)) or ((tsStreamOut_V_V_1_state = ap_const_lv2_2) and (tsStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    tsStreamOut_V_V_1_state <= ap_const_lv2_3;
                else 
                    tsStreamOut_V_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    xStreamOut_V_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                xStreamOut_V_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((xStreamOut_V_V_1_ack_out = ap_const_logic_1) and (xStreamOut_V_V_1_vld_out = ap_const_logic_1))) then 
                                        xStreamOut_V_V_1_sel_rd <= not(xStreamOut_V_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    xStreamOut_V_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                xStreamOut_V_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((xStreamOut_V_V_1_ack_in = ap_const_logic_1) and (xStreamOut_V_V_1_vld_in = ap_const_logic_1))) then 
                                        xStreamOut_V_V_1_sel_wr <= not(xStreamOut_V_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    xStreamOut_V_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                xStreamOut_V_V_1_state <= ap_const_lv2_0;
            else
                if ((((xStreamOut_V_V_1_vld_in = ap_const_logic_0) and (xStreamOut_V_V_1_state = ap_const_lv2_2)) or ((xStreamOut_V_V_1_vld_in = ap_const_logic_0) and (xStreamOut_V_V_1_state = ap_const_lv2_3) and (xStreamOut_V_V_1_ack_out = ap_const_logic_1)))) then 
                    xStreamOut_V_V_1_state <= ap_const_lv2_2;
                elsif ((((xStreamOut_V_V_1_ack_out = ap_const_logic_0) and (xStreamOut_V_V_1_state = ap_const_lv2_1)) or ((xStreamOut_V_V_1_ack_out = ap_const_logic_0) and (xStreamOut_V_V_1_state = ap_const_lv2_3) and (xStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    xStreamOut_V_V_1_state <= ap_const_lv2_1;
                elsif (((not(((xStreamOut_V_V_1_vld_in = ap_const_logic_0) and (xStreamOut_V_V_1_ack_out = ap_const_logic_1))) and not(((xStreamOut_V_V_1_ack_out = ap_const_logic_0) and (xStreamOut_V_V_1_vld_in = ap_const_logic_1))) and (xStreamOut_V_V_1_state = ap_const_lv2_3)) or ((xStreamOut_V_V_1_state = ap_const_lv2_1) and (xStreamOut_V_V_1_ack_out = ap_const_logic_1)) or ((xStreamOut_V_V_1_state = ap_const_lv2_2) and (xStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    xStreamOut_V_V_1_state <= ap_const_lv2_3;
                else 
                    xStreamOut_V_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    yStreamOut_V_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                yStreamOut_V_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((yStreamOut_V_V_1_ack_out = ap_const_logic_1) and (yStreamOut_V_V_1_vld_out = ap_const_logic_1))) then 
                                        yStreamOut_V_V_1_sel_rd <= not(yStreamOut_V_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    yStreamOut_V_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                yStreamOut_V_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((yStreamOut_V_V_1_ack_in = ap_const_logic_1) and (yStreamOut_V_V_1_vld_in = ap_const_logic_1))) then 
                                        yStreamOut_V_V_1_sel_wr <= not(yStreamOut_V_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    yStreamOut_V_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                yStreamOut_V_V_1_state <= ap_const_lv2_0;
            else
                if ((((yStreamOut_V_V_1_vld_in = ap_const_logic_0) and (yStreamOut_V_V_1_state = ap_const_lv2_2)) or ((yStreamOut_V_V_1_vld_in = ap_const_logic_0) and (yStreamOut_V_V_1_state = ap_const_lv2_3) and (yStreamOut_V_V_1_ack_out = ap_const_logic_1)))) then 
                    yStreamOut_V_V_1_state <= ap_const_lv2_2;
                elsif ((((yStreamOut_V_V_1_ack_out = ap_const_logic_0) and (yStreamOut_V_V_1_state = ap_const_lv2_1)) or ((yStreamOut_V_V_1_ack_out = ap_const_logic_0) and (yStreamOut_V_V_1_state = ap_const_lv2_3) and (yStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    yStreamOut_V_V_1_state <= ap_const_lv2_1;
                elsif (((not(((yStreamOut_V_V_1_vld_in = ap_const_logic_0) and (yStreamOut_V_V_1_ack_out = ap_const_logic_1))) and not(((yStreamOut_V_V_1_ack_out = ap_const_logic_0) and (yStreamOut_V_V_1_vld_in = ap_const_logic_1))) and (yStreamOut_V_V_1_state = ap_const_lv2_3)) or ((yStreamOut_V_V_1_state = ap_const_lv2_1) and (yStreamOut_V_V_1_ack_out = ap_const_logic_1)) or ((yStreamOut_V_V_1_state = ap_const_lv2_2) and (yStreamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    yStreamOut_V_V_1_state <= ap_const_lv2_3;
                else 
                    yStreamOut_V_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_s_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_fu_422_p2 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_3_fu_422_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_fu_372_p3 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_p_s_reg_312 <= eventFIFOIn_V;
            elsif (((eventFIFODataValid_V_1_read_fu_124_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_p_s_reg_312 <= ap_const_lv16_0;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_p_s_reg_312 <= ap_phi_reg_pp0_iter0_p_s_reg_312;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tsWrap_V_loc_4_reg_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_3_fu_422_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_tsWrap_V_loc_4_reg_260 <= tmp_5_fu_436_p2;
            elsif ((((tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_fu_422_p2 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_fu_372_p3 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((eventFIFODataValid_V_1_read_fu_124_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_tsWrap_V_loc_4_reg_260 <= tsWrap_V;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_tsWrap_V_loc_4_reg_260 <= ap_phi_reg_pp0_iter0_tsWrap_V_loc_4_reg_260;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_ts_V_loc_1_reg_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_372_p3 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_ts_V_loc_1_reg_278 <= tmp_1_fu_526_p3;
            elsif ((((tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_fu_422_p2 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_3_fu_422_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((eventFIFODataValid_V_1_read_fu_124_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_ts_V_loc_1_reg_278 <= ts_V;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_ts_V_loc_1_reg_278 <= ap_phi_reg_pp0_iter0_ts_V_loc_1_reg_278;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_y_V_loc_2_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_y_V_loc_2_reg_295 <= tmp_9_fu_495_p1;
            elsif ((((tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_3_fu_422_p2 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_3_fu_422_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_fu_372_p3 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((eventFIFODataValid_V_1_read_fu_124_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_y_V_loc_2_reg_295 <= y_V;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_y_V_loc_2_reg_295 <= ap_phi_reg_pp0_iter0_y_V_loc_2_reg_295;
            end if; 
        end if;
    end process;

    status_colNum_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (status_colNum_1_vld_reg = ap_const_logic_0) and (status_colNum_1_vld_in = ap_const_logic_1))) then 
                status_colNum_1_vld_reg <= ap_const_logic_1;
            elsif (((status_colNum_1_vld_in = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (status_colNum_1_vld_reg = ap_const_logic_1))) then 
                status_colNum_1_vld_reg <= ap_const_logic_0;
            end if; 
        end if;
    end process;

    status_rowNum_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (status_rowNum_1_vld_reg = ap_const_logic_0) and (status_rowNum_1_vld_in = ap_const_logic_1))) then 
                status_rowNum_1_vld_reg <= ap_const_logic_1;
            elsif (((status_rowNum_1_vld_in = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (status_rowNum_1_vld_reg = ap_const_logic_1))) then 
                status_rowNum_1_vld_reg <= ap_const_logic_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                eventFIFODataValid_V_1_reg_564 <= eventFIFODataValid_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_reg_622 <= icmp_fu_416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStreamOut_V_V_1_load_A = ap_const_logic_1)) then
                polStreamOut_V_V_1_payload_A <= tmp_V_3_cast_fu_490_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStreamOut_V_V_1_load_B = ap_const_logic_1)) then
                polStreamOut_V_V_1_payload_B <= tmp_V_3_cast_fu_490_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pol_V <= eventFIFOIn_V(12 downto 12);
                statusStatColNum <= tmp_s_fu_477_p2;
                x_V <= tmp_11_fu_448_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                statusStatRowNum <= tmp_7_fu_505_p2;
                y_V <= tmp_9_fu_495_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (status_colNum_1_vld_reg = ap_const_logic_0) and (status_colNum_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (status_colNum_1_vld_in = ap_const_logic_1) and (status_colNum_1_vld_reg = ap_const_logic_1)))) then
                status_colNum_1_data_reg <= ap_phi_mux_statusStatColNum_loc_3_phi_fu_244_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (status_rowNum_1_vld_reg = ap_const_logic_0) and (status_rowNum_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (status_rowNum_1_vld_in = ap_const_logic_1) and (status_rowNum_1_vld_reg = ap_const_logic_1)))) then
                status_rowNum_1_data_reg <= ap_phi_mux_statusStatRowNum_loc_2_phi_fu_224_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_reg_618 <= tmp_2_fu_394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((eventFIFODataValid_V = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_614 <= eventFIFOIn_V(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tsStreamOut_V_V_1_load_A = ap_const_logic_1)) then
                tsStreamOut_V_V_1_payload_A <= tmp_V_fu_340_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tsStreamOut_V_V_1_load_B = ap_const_logic_1)) then
                tsStreamOut_V_V_1_payload_B <= tmp_V_fu_340_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_3_fu_422_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tsWrap_V <= tmp_5_fu_436_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_372_p3 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ts_V <= tmp_1_fu_526_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((xStreamOut_V_V_1_load_A = ap_const_logic_1)) then
                xStreamOut_V_V_1_payload_A <= p_Result_s_fu_452_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((xStreamOut_V_V_1_load_B = ap_const_logic_1)) then
                xStreamOut_V_V_1_payload_B <= p_Result_s_fu_452_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((yStreamOut_V_V_1_load_A = ap_const_logic_1)) then
                yStreamOut_V_V_1_payload_A <= tmp_V_1_fu_349_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((yStreamOut_V_V_1_load_B = ap_const_logic_1)) then
                yStreamOut_V_V_1_payload_B <= tmp_V_1_fu_349_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, tsStreamOut_V_V_1_ack_in, yStreamOut_V_V_1_ack_in, xStreamOut_V_V_1_ack_in, polStreamOut_V_V_1_ack_in, status_rowNum_1_ack_in, status_colNum_1_ack_in)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((status_colNum_1_ack_in = ap_const_logic_0) or (status_rowNum_1_ack_in = ap_const_logic_0) or (polStreamOut_V_V_1_ack_in = ap_const_logic_0) or (xStreamOut_V_V_1_ack_in = ap_const_logic_0) or (yStreamOut_V_V_1_ack_in = ap_const_logic_0) or (tsStreamOut_V_V_1_ack_in = ap_const_logic_0))) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, tsStreamOut_V_V_1_ack_in, yStreamOut_V_V_1_ack_in, xStreamOut_V_V_1_ack_in, polStreamOut_V_V_1_ack_in, ap_block_state1_io, status_rowNum_1_ack_in, status_colNum_1_ack_in, ap_block_state2_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((status_colNum_1_ack_in = ap_const_logic_0) or (status_rowNum_1_ack_in = ap_const_logic_0) or (polStreamOut_V_V_1_ack_in = ap_const_logic_0) or (xStreamOut_V_V_1_ack_in = ap_const_logic_0) or (yStreamOut_V_V_1_ack_in = ap_const_logic_0) or (tsStreamOut_V_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, tsStreamOut_V_V_1_ack_in, yStreamOut_V_V_1_ack_in, xStreamOut_V_V_1_ack_in, polStreamOut_V_V_1_ack_in, ap_block_state1_io, status_rowNum_1_ack_in, status_colNum_1_ack_in, ap_block_state2_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((status_colNum_1_ack_in = ap_const_logic_0) or (status_rowNum_1_ack_in = ap_const_logic_0) or (polStreamOut_V_V_1_ack_in = ap_const_logic_0) or (xStreamOut_V_V_1_ack_in = ap_const_logic_0) or (yStreamOut_V_V_1_ack_in = ap_const_logic_0) or (tsStreamOut_V_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_io))));
    end process;


    ap_block_state1_io_assign_proc : process(tsStreamOut_V_V_1_ack_in, ap_predicate_op37_write_state1, yStreamOut_V_V_1_ack_in, xStreamOut_V_V_1_ack_in, polStreamOut_V_V_1_ack_in)
    begin
                ap_block_state1_io <= (((polStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)) or ((xStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)) or ((yStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)) or ((tsStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state2_io_assign_proc : process(tsStreamOut_V_V_1_ack_in, yStreamOut_V_V_1_ack_in, xStreamOut_V_V_1_ack_in, polStreamOut_V_V_1_ack_in, ap_predicate_op82_write_state2)
    begin
                ap_block_state2_io <= (((polStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)) or ((xStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)) or ((yStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)) or ((tsStreamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(tsStreamOut_V_V_1_ack_in, yStreamOut_V_V_1_ack_in, xStreamOut_V_V_1_ack_in, polStreamOut_V_V_1_ack_in, status_rowNum_1_ack_in, status_colNum_1_ack_in)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((status_colNum_1_ack_in = ap_const_logic_0) or (status_rowNum_1_ack_in = ap_const_logic_0) or (polStreamOut_V_V_1_ack_in = ap_const_logic_0) or (xStreamOut_V_V_1_ack_in = ap_const_logic_0) or (yStreamOut_V_V_1_ack_in = ap_const_logic_0) or (tsStreamOut_V_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_statusStatColNum_loc_3_phi_fu_244_p12_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, eventFIFODataValid_V_1_read_fu_124_p2, tmp_fu_372_p3, tmp_2_fu_394_p2, icmp_fu_416_p2, eventFIFODataValid_V, statusStatColNum, ap_block_pp0_stage0, tmp_3_fu_422_p2, ap_phi_reg_pp0_iter0_statusStatColNum_loc_3_reg_240, tmp_s_fu_477_p2)
    begin
        if (((tmp_2_fu_394_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_statusStatColNum_loc_3_phi_fu_244_p12 <= tmp_s_fu_477_p2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (eventFIFODataValid_V_1_read_fu_124_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_3_fu_422_p2 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_3_fu_422_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_phi_mux_statusStatColNum_loc_3_phi_fu_244_p12 <= statusStatColNum;
        else 
            ap_phi_mux_statusStatColNum_loc_3_phi_fu_244_p12 <= ap_phi_reg_pp0_iter0_statusStatColNum_loc_3_reg_240;
        end if; 
    end process;


    ap_phi_mux_statusStatRowNum_loc_2_phi_fu_224_p12_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, eventFIFODataValid_V_1_read_fu_124_p2, tmp_fu_372_p3, tmp_2_fu_394_p2, icmp_fu_416_p2, eventFIFODataValid_V, statusStatRowNum, ap_block_pp0_stage0, tmp_3_fu_422_p2, ap_phi_reg_pp0_iter0_statusStatRowNum_loc_2_reg_220, tmp_7_fu_505_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_statusStatRowNum_loc_2_phi_fu_224_p12 <= tmp_7_fu_505_p2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (eventFIFODataValid_V_1_read_fu_124_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_2_fu_394_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_3_fu_422_p2 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_fu_416_p2 = ap_const_lv1_0) and (tmp_2_fu_394_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (tmp_3_fu_422_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_fu_372_p3 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_phi_mux_statusStatRowNum_loc_2_phi_fu_224_p12 <= statusStatRowNum;
        else 
            ap_phi_mux_statusStatRowNum_loc_2_phi_fu_224_p12 <= ap_phi_reg_pp0_iter0_statusStatRowNum_loc_2_reg_220;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_s_reg_312 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_statusStatColNum_loc_3_reg_240 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_statusStatRowNum_loc_2_reg_220 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tsWrap_V_loc_4_reg_260 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_ts_V_loc_1_reg_278 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_y_V_loc_2_reg_295 <= "XXXXXXXXXXXX";

    ap_predicate_op37_write_state1_assign_proc : process(tmp_fu_372_p3, tmp_2_fu_394_p2, icmp_fu_416_p2, eventFIFODataValid_V)
    begin
                ap_predicate_op37_write_state1 <= ((tmp_2_fu_394_p2 = ap_const_lv1_0) and (tmp_fu_372_p3 = ap_const_lv1_0) and (icmp_fu_416_p2 = ap_const_lv1_1) and (eventFIFODataValid_V = ap_const_lv1_1));
    end process;


    ap_predicate_op82_write_state2_assign_proc : process(eventFIFODataValid_V_1_reg_564, tmp_reg_614, tmp_2_reg_618, icmp_reg_622)
    begin
                ap_predicate_op82_write_state2 <= ((tmp_2_reg_618 = ap_const_lv1_0) and (tmp_reg_614 = ap_const_lv1_0) and (icmp_reg_622 = ap_const_lv1_1) and (eventFIFODataValid_V_1_reg_564 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    dataReg_V <= ap_phi_reg_pp0_iter1_p_s_reg_312;

    dataReg_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001, ap_reg_ioackin_dataReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_dataReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataReg_V_ap_vld <= ap_const_logic_1;
        else 
            dataReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    eventFIFODataValid_V_1_read_fu_124_p2 <= eventFIFODataValid_V;
    icmp_fu_416_p2 <= "1" when (tmp_10_fu_406_p4 = ap_const_lv3_0) else "0";
    p_0164_0_off_fu_400_p2 <= std_logic_vector(unsigned(p_Result_10_cast_fu_390_p1) + unsigned(ap_const_lv4_E));
    p_Result_10_cast_fu_390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_380_p4),4));
    p_Result_1_fu_380_p4 <= eventFIFOIn_V(14 downto 12);
    p_Result_s_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_448_p1),16));
    polRegReg_V <= pol_V;

    polRegReg_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001, ap_reg_ioackin_polRegReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_polRegReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            polRegReg_V_ap_vld <= ap_const_logic_1;
        else 
            polRegReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    polStreamOut_V_V_1_ack_in <= polStreamOut_V_V_1_state(1);
    polStreamOut_V_V_1_ack_out <= polStreamOut_V_V_TREADY;

    polStreamOut_V_V_1_data_out_assign_proc : process(polStreamOut_V_V_1_payload_A, polStreamOut_V_V_1_payload_B, polStreamOut_V_V_1_sel)
    begin
        if ((polStreamOut_V_V_1_sel = ap_const_logic_1)) then 
            polStreamOut_V_V_1_data_out <= polStreamOut_V_V_1_payload_B;
        else 
            polStreamOut_V_V_1_data_out <= polStreamOut_V_V_1_payload_A;
        end if; 
    end process;

    polStreamOut_V_V_1_load_A <= (polStreamOut_V_V_1_state_cmp_full and not(polStreamOut_V_V_1_sel_wr));
    polStreamOut_V_V_1_load_B <= (polStreamOut_V_V_1_state_cmp_full and polStreamOut_V_V_1_sel_wr);
    polStreamOut_V_V_1_sel <= polStreamOut_V_V_1_sel_rd;
    polStreamOut_V_V_1_state_cmp_full <= '0' when (polStreamOut_V_V_1_state = ap_const_lv2_1) else '1';

    polStreamOut_V_V_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op37_write_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            polStreamOut_V_V_1_vld_in <= ap_const_logic_1;
        else 
            polStreamOut_V_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    polStreamOut_V_V_1_vld_out <= polStreamOut_V_V_1_state(0);
    polStreamOut_V_V_TDATA <= polStreamOut_V_V_1_data_out;

    polStreamOut_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op37_write_state1, ap_predicate_op82_write_state2, polStreamOut_V_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)))) then 
            polStreamOut_V_V_TDATA_blk_n <= polStreamOut_V_V_1_state(1);
        else 
            polStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    polStreamOut_V_V_TVALID <= polStreamOut_V_V_1_state(0);

    status_colNum_1_ack_in_assign_proc : process(status_colNum_1_vld_reg)
    begin
        if (((status_colNum_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (status_colNum_1_vld_reg = ap_const_logic_1)))) then 
            status_colNum_1_ack_in <= ap_const_logic_1;
        else 
            status_colNum_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    status_colNum_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            status_colNum_1_vld_in <= ap_const_logic_1;
        else 
            status_colNum_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;


    status_rowNum_1_ack_in_assign_proc : process(status_rowNum_1_vld_reg)
    begin
        if (((status_rowNum_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (status_rowNum_1_vld_reg = ap_const_logic_1)))) then 
            status_rowNum_1_ack_in <= ap_const_logic_1;
        else 
            status_rowNum_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    status_rowNum_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            status_rowNum_1_vld_in <= ap_const_logic_1;
        else 
            status_rowNum_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_406_p4 <= p_0164_0_off_fu_400_p2(3 downto 1);
    tmp_11_fu_448_p1 <= eventFIFOIn_V(12 - 1 downto 0);
    tmp_13_fu_428_p1 <= eventFIFOIn_V(12 - 1 downto 0);
    tmp_1_fu_526_p3 <= (tmp_8_fu_522_p1 & tmp_6_fu_518_p1);
    tmp_2_fu_394_p2 <= "1" when (p_Result_1_fu_380_p4 = ap_const_lv3_1) else "0";
    tmp_3_fu_422_p2 <= "1" when (p_Result_1_fu_380_p4 = ap_const_lv3_7) else "0";
    tmp_4_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_428_p1),48));
    tmp_5_fu_436_p2 <= std_logic_vector(unsigned(tmp_4_fu_432_p1) + unsigned(tsWrap_V));
    tmp_6_fu_518_p1 <= eventFIFOIn_V(15 - 1 downto 0);
    tmp_7_fu_505_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(statusStatRowNum));
    tmp_8_fu_522_p1 <= tsWrap_V(33 - 1 downto 0);
    tmp_9_fu_495_p1 <= eventFIFOIn_V(12 - 1 downto 0);
    tmp_V_1_fu_349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V),16));
    tmp_V_3_cast_fu_490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_3_fu_463_p3),8));
    tmp_V_3_fu_463_p3 <= eventFIFOIn_V(12 downto 12);
    tmp_V_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ts_V),64));
    tmp_fu_372_p3 <= eventFIFOIn_V(15 downto 15);
    tmp_s_fu_477_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(statusStatColNum));
    tsRegReg_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter1_ts_V_loc_1_reg_278),64));

    tsRegReg_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001, ap_reg_ioackin_tsRegReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_tsRegReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tsRegReg_V_ap_vld <= ap_const_logic_1;
        else 
            tsRegReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tsStreamOut_V_V_1_ack_in <= tsStreamOut_V_V_1_state(1);
    tsStreamOut_V_V_1_ack_out <= tsStreamOut_V_V_TREADY;

    tsStreamOut_V_V_1_data_out_assign_proc : process(tsStreamOut_V_V_1_payload_A, tsStreamOut_V_V_1_payload_B, tsStreamOut_V_V_1_sel)
    begin
        if ((tsStreamOut_V_V_1_sel = ap_const_logic_1)) then 
            tsStreamOut_V_V_1_data_out <= tsStreamOut_V_V_1_payload_B;
        else 
            tsStreamOut_V_V_1_data_out <= tsStreamOut_V_V_1_payload_A;
        end if; 
    end process;

    tsStreamOut_V_V_1_load_A <= (tsStreamOut_V_V_1_state_cmp_full and not(tsStreamOut_V_V_1_sel_wr));
    tsStreamOut_V_V_1_load_B <= (tsStreamOut_V_V_1_state_cmp_full and tsStreamOut_V_V_1_sel_wr);
    tsStreamOut_V_V_1_sel <= tsStreamOut_V_V_1_sel_rd;
    tsStreamOut_V_V_1_state_cmp_full <= '0' when (tsStreamOut_V_V_1_state = ap_const_lv2_1) else '1';

    tsStreamOut_V_V_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op37_write_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tsStreamOut_V_V_1_vld_in <= ap_const_logic_1;
        else 
            tsStreamOut_V_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    tsStreamOut_V_V_1_vld_out <= tsStreamOut_V_V_1_state(0);
    tsStreamOut_V_V_TDATA <= tsStreamOut_V_V_1_data_out;

    tsStreamOut_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op37_write_state1, ap_predicate_op82_write_state2, tsStreamOut_V_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)))) then 
            tsStreamOut_V_V_TDATA_blk_n <= tsStreamOut_V_V_1_state(1);
        else 
            tsStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tsStreamOut_V_V_TVALID <= tsStreamOut_V_V_1_state(0);
    tsWrapRegReg_V <= ap_phi_reg_pp0_iter1_tsWrap_V_loc_4_reg_260;

    tsWrapRegReg_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001, ap_reg_ioackin_tsWrapRegReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_tsWrapRegReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tsWrapRegReg_V_ap_vld <= ap_const_logic_1;
        else 
            tsWrapRegReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xRegReg_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_V),16));

    xRegReg_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001, ap_reg_ioackin_xRegReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_xRegReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xRegReg_V_ap_vld <= ap_const_logic_1;
        else 
            xRegReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xStreamOut_V_V_1_ack_in <= xStreamOut_V_V_1_state(1);
    xStreamOut_V_V_1_ack_out <= xStreamOut_V_V_TREADY;

    xStreamOut_V_V_1_data_out_assign_proc : process(xStreamOut_V_V_1_payload_A, xStreamOut_V_V_1_payload_B, xStreamOut_V_V_1_sel)
    begin
        if ((xStreamOut_V_V_1_sel = ap_const_logic_1)) then 
            xStreamOut_V_V_1_data_out <= xStreamOut_V_V_1_payload_B;
        else 
            xStreamOut_V_V_1_data_out <= xStreamOut_V_V_1_payload_A;
        end if; 
    end process;

    xStreamOut_V_V_1_load_A <= (xStreamOut_V_V_1_state_cmp_full and not(xStreamOut_V_V_1_sel_wr));
    xStreamOut_V_V_1_load_B <= (xStreamOut_V_V_1_state_cmp_full and xStreamOut_V_V_1_sel_wr);
    xStreamOut_V_V_1_sel <= xStreamOut_V_V_1_sel_rd;
    xStreamOut_V_V_1_state_cmp_full <= '0' when (xStreamOut_V_V_1_state = ap_const_lv2_1) else '1';

    xStreamOut_V_V_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op37_write_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            xStreamOut_V_V_1_vld_in <= ap_const_logic_1;
        else 
            xStreamOut_V_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    xStreamOut_V_V_1_vld_out <= xStreamOut_V_V_1_state(0);
    xStreamOut_V_V_TDATA <= xStreamOut_V_V_1_data_out;

    xStreamOut_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op37_write_state1, ap_predicate_op82_write_state2, xStreamOut_V_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)))) then 
            xStreamOut_V_V_TDATA_blk_n <= xStreamOut_V_V_1_state(1);
        else 
            xStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    xStreamOut_V_V_TVALID <= xStreamOut_V_V_1_state(0);
    yRegReg_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter1_y_V_loc_2_reg_295),16));

    yRegReg_V_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001, ap_reg_ioackin_yRegReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_yRegReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            yRegReg_V_ap_vld <= ap_const_logic_1;
        else 
            yRegReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    yStreamOut_V_V_1_ack_in <= yStreamOut_V_V_1_state(1);
    yStreamOut_V_V_1_ack_out <= yStreamOut_V_V_TREADY;

    yStreamOut_V_V_1_data_out_assign_proc : process(yStreamOut_V_V_1_payload_A, yStreamOut_V_V_1_payload_B, yStreamOut_V_V_1_sel)
    begin
        if ((yStreamOut_V_V_1_sel = ap_const_logic_1)) then 
            yStreamOut_V_V_1_data_out <= yStreamOut_V_V_1_payload_B;
        else 
            yStreamOut_V_V_1_data_out <= yStreamOut_V_V_1_payload_A;
        end if; 
    end process;

    yStreamOut_V_V_1_load_A <= (yStreamOut_V_V_1_state_cmp_full and not(yStreamOut_V_V_1_sel_wr));
    yStreamOut_V_V_1_load_B <= (yStreamOut_V_V_1_state_cmp_full and yStreamOut_V_V_1_sel_wr);
    yStreamOut_V_V_1_sel <= yStreamOut_V_V_1_sel_rd;
    yStreamOut_V_V_1_state_cmp_full <= '0' when (yStreamOut_V_V_1_state = ap_const_lv2_1) else '1';

    yStreamOut_V_V_1_vld_in_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op37_write_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            yStreamOut_V_V_1_vld_in <= ap_const_logic_1;
        else 
            yStreamOut_V_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    yStreamOut_V_V_1_vld_out <= yStreamOut_V_V_1_state(0);
    yStreamOut_V_V_TDATA <= yStreamOut_V_V_1_data_out;

    yStreamOut_V_V_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op37_write_state1, ap_predicate_op82_write_state2, yStreamOut_V_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op37_write_state1 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op82_write_state2 = ap_const_boolean_1)))) then 
            yStreamOut_V_V_TDATA_blk_n <= yStreamOut_V_V_1_state(1);
        else 
            yStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    yStreamOut_V_V_TVALID <= yStreamOut_V_V_1_state(0);
end behav;

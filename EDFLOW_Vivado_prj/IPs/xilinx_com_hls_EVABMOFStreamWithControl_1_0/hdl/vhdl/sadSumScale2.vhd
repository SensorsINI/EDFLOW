-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sadSumScale2 is
port (
    ap_ready : OUT STD_LOGIC;
    sum_0_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
    sum_1_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
    sum_2_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
    sum_3_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
    sum_4_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
    sum_5_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
    sum_6_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (6 downto 0) );
end;


architecture behav of sadSumScale2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_5_fu_72_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_64_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_cast_fu_76_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_0_V_write_assig_fu_82_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_102_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_6_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_1_cast_fu_106_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_1_V_write_assig_fu_112_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_0_V_write_assig_1_fu_90_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_1_V_write_assig_1_fu_120_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_1_fu_124_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_9_fu_142_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_134_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_2_cast_fu_146_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_2_V_write_assig_fu_152_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_172_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_10_fu_164_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_3_cast_fu_176_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_3_V_write_assig_fu_182_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_2_V_write_assig_1_fu_160_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_3_V_write_assig_1_fu_190_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_194_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_cast_fu_200_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_1_cast4_fu_130_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_3_fu_204_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_13_fu_222_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_12_fu_214_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_4_cast_fu_226_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_4_V_write_assig_fu_232_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_252_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_14_fu_244_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_5_cast_fu_256_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_5_V_write_assig_fu_262_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_282_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_274_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_V_6_cast_fu_286_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_6_V_write_assig_fu_292_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_V_3_cast3_fu_210_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_3_4_cast_cast_fu_240_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum_5_V_write_assig_1_fu_270_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_6_V_write_assig_1_fu_300_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp2_fu_310_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp2_cast_fu_316_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp1_fu_304_p2 : STD_LOGIC_VECTOR (6 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(tmp2_cast_fu_316_p1) + unsigned(tmp1_fu_304_p2));
    sum_0_V_write_assig_1_fu_90_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_0_V_write_assig_fu_82_p3),5));
    sum_0_V_write_assig_fu_82_p3 <= 
        sum_V_cast_fu_76_p2 when (tmp_4_fu_64_p3(0) = '1') else 
        tmp_5_fu_72_p1;
    sum_1_V_write_assig_1_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_1_V_write_assig_fu_112_p3),5));
    sum_1_V_write_assig_fu_112_p3 <= 
        sum_V_1_cast_fu_106_p2 when (tmp_6_fu_94_p3(0) = '1') else 
        tmp_7_fu_102_p1;
    sum_2_V_write_assig_1_fu_160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_2_V_write_assig_fu_152_p3),5));
    sum_2_V_write_assig_fu_152_p3 <= 
        sum_V_2_cast_fu_146_p2 when (tmp_8_fu_134_p3(0) = '1') else 
        tmp_9_fu_142_p1;
    sum_3_V_write_assig_1_fu_190_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_3_V_write_assig_fu_182_p3),5));
    sum_3_V_write_assig_fu_182_p3 <= 
        sum_V_3_cast_fu_176_p2 when (tmp_10_fu_164_p3(0) = '1') else 
        tmp_11_fu_172_p1;
    sum_4_V_write_assig_fu_232_p3 <= 
        sum_V_4_cast_fu_226_p2 when (tmp_12_fu_214_p3(0) = '1') else 
        tmp_13_fu_222_p1;
    sum_5_V_write_assig_1_fu_270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_5_V_write_assig_fu_262_p3),5));
    sum_5_V_write_assig_fu_262_p3 <= 
        sum_V_5_cast_fu_256_p2 when (tmp_14_fu_244_p3(0) = '1') else 
        tmp_15_fu_252_p1;
    sum_6_V_write_assig_1_fu_300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_6_V_write_assig_fu_292_p3),5));
    sum_6_V_write_assig_fu_292_p3 <= 
        sum_V_6_cast_fu_286_p2 when (tmp_16_fu_274_p3(0) = '1') else 
        tmp_17_fu_282_p1;
    sum_V_1_cast_fu_106_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_7_fu_102_p1));
    sum_V_2_cast_fu_146_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_9_fu_142_p1));
    sum_V_3_cast_fu_176_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_11_fu_172_p1));
    sum_V_4_cast_fu_226_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_13_fu_222_p1));
    sum_V_5_cast_fu_256_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_15_fu_252_p1));
    sum_V_6_cast_fu_286_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_17_fu_282_p1));
    sum_V_cast_fu_76_p2 <= std_logic_vector(unsigned(ap_const_lv4_0) - unsigned(tmp_5_fu_72_p1));
    tmp1_fu_304_p2 <= std_logic_vector(unsigned(tmp_V_3_cast3_fu_210_p1) + unsigned(tmp_3_4_cast_cast_fu_240_p1));
    tmp2_cast_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp2_fu_310_p2),7));
    tmp2_fu_310_p2 <= std_logic_vector(unsigned(sum_5_V_write_assig_1_fu_270_p1) + unsigned(sum_6_V_write_assig_1_fu_300_p1));
    tmp_10_fu_164_p3 <= sum_3_V_read(4 downto 4);
    tmp_11_fu_172_p1 <= sum_3_V_read(4 - 1 downto 0);
    tmp_12_fu_214_p3 <= sum_4_V_read(4 downto 4);
    tmp_13_fu_222_p1 <= sum_4_V_read(4 - 1 downto 0);
    tmp_14_fu_244_p3 <= sum_5_V_read(4 downto 4);
    tmp_15_fu_252_p1 <= sum_5_V_read(4 - 1 downto 0);
    tmp_16_fu_274_p3 <= sum_6_V_read(4 downto 4);
    tmp_17_fu_282_p1 <= sum_6_V_read(4 - 1 downto 0);
    tmp_3_4_cast_cast_fu_240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_4_V_write_assig_fu_232_p3),7));
    tmp_4_fu_64_p3 <= sum_0_V_read(4 downto 4);
    tmp_5_fu_72_p1 <= sum_0_V_read(4 - 1 downto 0);
    tmp_6_fu_94_p3 <= sum_1_V_read(4 downto 4);
    tmp_7_fu_102_p1 <= sum_1_V_read(4 - 1 downto 0);
    tmp_8_fu_134_p3 <= sum_2_V_read(4 downto 4);
    tmp_9_fu_142_p1 <= sum_2_V_read(4 - 1 downto 0);
    tmp_V_1_cast4_fu_130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_1_fu_124_p2),6));
    tmp_V_1_fu_124_p2 <= std_logic_vector(unsigned(sum_0_V_write_assig_1_fu_90_p1) + unsigned(sum_1_V_write_assig_1_fu_120_p1));
    tmp_V_3_cast3_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_3_fu_204_p2),7));
    tmp_V_3_fu_204_p2 <= std_logic_vector(unsigned(tmp_cast_fu_200_p1) + unsigned(tmp_V_1_cast4_fu_130_p1));
    tmp_cast_fu_200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_194_p2),6));
    tmp_fu_194_p2 <= std_logic_vector(unsigned(sum_2_V_write_assig_1_fu_160_p1) + unsigned(sum_3_V_write_assig_1_fu_190_p1));
end behav;

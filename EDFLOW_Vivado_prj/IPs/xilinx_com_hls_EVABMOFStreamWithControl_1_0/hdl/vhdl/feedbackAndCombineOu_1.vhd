-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity feedbackAndCombineOu_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    packetEventDataStream_V_V_dout : IN STD_LOGIC_VECTOR (95 downto 0);
    packetEventDataStream_V_V_empty_n : IN STD_LOGIC;
    packetEventDataStream_V_V_read : OUT STD_LOGIC;
    miniSumStreamScale0_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
    miniSumStreamScale0_V_V_empty_n : IN STD_LOGIC;
    miniSumStreamScale0_V_V_read : OUT STD_LOGIC;
    OFRetStreamScale0_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    OFRetStreamScale0_V_V_empty_n : IN STD_LOGIC;
    OFRetStreamScale0_V_V_read : OUT STD_LOGIC;
    miniSumStreamScale1_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
    miniSumStreamScale1_V_V_empty_n : IN STD_LOGIC;
    miniSumStreamScale1_V_V_read : OUT STD_LOGIC;
    OFRetStreamScale1_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    OFRetStreamScale1_V_V_empty_n : IN STD_LOGIC;
    OFRetStreamScale1_V_V_read : OUT STD_LOGIC;
    miniSumStreamScale2_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
    miniSumStreamScale2_V_V_empty_n : IN STD_LOGIC;
    miniSumStreamScale2_V_V_read : OUT STD_LOGIC;
    OFRetStreamScale2_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    OFRetStreamScale2_V_V_empty_n : IN STD_LOGIC;
    OFRetStreamScale2_V_V_read : OUT STD_LOGIC;
    xStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    xStreamOut_V_V_TVALID : OUT STD_LOGIC;
    xStreamOut_V_V_TREADY : IN STD_LOGIC;
    yStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    yStreamOut_V_V_TVALID : OUT STD_LOGIC;
    yStreamOut_V_V_TREADY : IN STD_LOGIC;
    polStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    polStreamOut_V_V_TVALID : OUT STD_LOGIC;
    polStreamOut_V_V_TREADY : IN STD_LOGIC;
    tsStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    tsStreamOut_V_V_TVALID : OUT STD_LOGIC;
    tsStreamOut_V_V_TREADY : IN STD_LOGIC;
    custDataStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    custDataStreamOut_V_V_TVALID : OUT STD_LOGIC;
    custDataStreamOut_V_V_TREADY : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (0 downto 0);
    OFHistRadiusSum_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
    OFHistRadiusSum_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    OFHistRadiusSum_V_o_ap_vld : OUT STD_LOGIC;
    OFHistCntSum_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
    OFHistCntSum_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    OFHistCntSum_V_o_ap_vld : OUT STD_LOGIC;
    glAverageTargetValue_i : IN STD_LOGIC_VECTOR (15 downto 0);
    glAverageTargetValue_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    glAverageTargetValue_o_ap_vld : OUT STD_LOGIC;
    areaEventThr_i : IN STD_LOGIC_VECTOR (15 downto 0);
    areaEventThr_o : OUT STD_LOGIC_VECTOR (15 downto 0);
    areaEventThr_o_ap_vld : OUT STD_LOGIC;
    glOFHistCntSum_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    glOFHistCntSum_V_ap_vld : OUT STD_LOGIC;
    glOFHistRadiusSum_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    glOFHistRadiusSum_V_ap_vld : OUT STD_LOGIC;
    areaEventThrBak : OUT STD_LOGIC_VECTOR (15 downto 0);
    areaEventThrBak_ap_vld : OUT STD_LOGIC;
    glAverageTargetValue_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    glAverageTargetValue_1_ap_vld : OUT STD_LOGIC );
end;


architecture behav of feedbackAndCombineOu_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_7A : STD_LOGIC_VECTOR (6 downto 0) := "1111010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_7FFA : STD_LOGIC_VECTOR (14 downto 0) := "111111111111010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv15_6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000110";
    constant ap_const_lv15_55 : STD_LOGIC_VECTOR (14 downto 0) := "000000001010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv15_40 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_const_lv16_FFF7 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111110111";
    constant ap_const_lv16_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001001";
    constant ap_const_lv16_AC : STD_LOGIC_VECTOR (15 downto 0) := "0000000010101100";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv16_81 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000001";
    constant ap_const_lv18_3FFF1 : STD_LOGIC_VECTOR (17 downto 0) := "111111111111110001";
    constant ap_const_lv18_F : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001111";
    constant ap_const_lv18_159 : STD_LOGIC_VECTOR (17 downto 0) := "000000000101011001";
    constant ap_const_lv18_103 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000011";
    constant ap_const_lv15_5BE : STD_LOGIC_VECTOR (14 downto 0) := "000010110111110";
    constant ap_const_lv15_13CE : STD_LOGIC_VECTOR (14 downto 0) := "001001111001110";
    constant ap_const_lv15_493E : STD_LOGIC_VECTOR (14 downto 0) := "100100100111110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv16_7F7F : STD_LOGIC_VECTOR (15 downto 0) := "0111111101111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv11_39C : STD_LOGIC_VECTOR (10 downto 0) := "01110011100";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv14_2B : STD_LOGIC_VECTOR (13 downto 0) := "00000000101011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal packetEventDataStream_V_V_blk_n : STD_LOGIC;
    signal miniSumStreamScale0_V_V_blk_n : STD_LOGIC;
    signal OFRetStreamScale0_V_V_blk_n : STD_LOGIC;
    signal miniSumStreamScale1_V_V_blk_n : STD_LOGIC;
    signal OFRetStreamScale1_V_V_blk_n : STD_LOGIC;
    signal miniSumStreamScale2_V_V_blk_n : STD_LOGIC;
    signal OFRetStreamScale2_V_V_blk_n : STD_LOGIC;
    signal xStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal yStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal polStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal tsStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal custDataStreamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal tmp_V_189_reg_1140 : STD_LOGIC_VECTOR (95 downto 0);
    signal y_V_reg_1147 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_V_fu_403_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_V_reg_1153 : STD_LOGIC_VECTOR (15 downto 0);
    signal pol_V_reg_1159 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_425_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_reg_1164 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_reg_1169 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_V_179_reg_1174 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_180_reg_1179 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_V_190_reg_1184 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_182_reg_1189 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_V_191_reg_1194 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_63_fu_453_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_63_reg_1199 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_64_fu_481_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_64_reg_1204 : STD_LOGIC_VECTOR (4 downto 0);
    signal xInitOffsetScale0_V_fu_513_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal xInitOffsetScale0_V_reg_1209 : STD_LOGIC_VECTOR (6 downto 0);
    signal yInitOffsetScale0_V_fu_551_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal yInitOffsetScale0_V_reg_1214 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_cond13_i_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond13_i_reg_1219 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1116_i_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1116_i_reg_1238 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Val2_73_fu_1031_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_73_reg_1243 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal xOFRet_V_fu_1040_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal xOFRet_V_reg_1248 : STD_LOGIC_VECTOR (7 downto 0);
    signal yOFRet_V_reg_1253 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1138_i_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1138_i_reg_1258 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_ap_start : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_ap_done : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_ap_idle : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_ap_ready : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o_ap_vld : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o_ap_vld : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o_ap_vld : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_areaEventThr_o : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_areaEventThr_o_ap_vld : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_glOFHistCntSum_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_glOFHistCntSum_V_ap_vld : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_glOFHistRadiusSum_V : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_glOFHistRadiusSum_V_ap_vld : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_areaEventThrBak : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_areaEventThrBak_ap_vld : STD_LOGIC;
    signal grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_1_ap_vld : STD_LOGIC;
    signal ap_phi_mux_tmp_V_105_load_phi_fu_308_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_cond14_i_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_72_reg_315 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_103_load_reg_326 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_cond_fu_696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_1_reg_337 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_2_reg_348 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_cond_i_fu_794_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_101_load_reg_359 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_feedbackWithoutOFHis_fu_370_ap_start_reg : STD_LOGIC := '0';
    signal ap_reg_ioackin_xStreamOut_V_V_TREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_xStreamOut_V_V_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_yStreamOut_V_V_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_polStreamOut_V_V_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_tsStreamOut_V_V_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_custDataStreamOut_V_V_TREADY : STD_LOGIC;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_reg_ioackin_yStreamOut_V_V_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_polStreamOut_V_V_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_tsStreamOut_V_V_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_custDataStreamOut_V_V_TREADY : STD_LOGIC := '0';
    signal p_Result_i_fu_415_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_2544_fu_437_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1098_i_fu_441_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1098_cast10_i_fu_449_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_271_fu_459_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1100_i_fu_469_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1100_cast9_i_fu_477_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2545_fu_487_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4269_cast_i_fu_491_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp5_i_fu_495_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_272_fu_501_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp9_i_cast_fu_509_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_7_i_fu_519_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4271_cast_i_fu_529_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp103_i_fu_533_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_273_fu_539_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp11_i_cast_fu_547_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_274_fu_557_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_cast_i_fu_567_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal addconv_i_fu_571_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_173_i_fu_585_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2546_fu_577_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1103_i_fu_591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_275_fu_603_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal lhs_V_12_cast_i_fu_612_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal addconv1_i_fu_616_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_176_i_fu_630_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_2547_fu_622_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1106_i_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_s_fu_648_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_cast8_i_fu_661_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_657_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_664_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_4_i_fu_670_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_57_fu_684_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2548_fu_676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1108_i_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_58_fu_702_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal rhs_V_3_cast7_i_fu_715_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_59_fu_711_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp5_fu_718_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_7_i_fu_724_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_60_fu_738_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2549_fu_730_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1111_i_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_756_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_fu_759_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_61_fu_762_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal addconv6_i_fu_768_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal addconv7_i_fu_782_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_2550_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1113_i_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_3_fu_800_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal rhs_V_3_fu_803_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_62_fu_806_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal addconv8_i_fu_812_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal addconv9_i_fu_826_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_2551_fu_818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1115_i_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2552_fu_862_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Result_13_i_fu_870_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2553_fu_884_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1125_i_fu_888_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_2554_fu_900_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1126_i_fu_904_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1125_cast_i_fu_896_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1126_cast_i_cast_fu_912_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1123_cast_i_cast_fu_866_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp10_fu_922_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp10_cast_fu_928_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp9_fu_916_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xOFTmpRet_V_fu_932_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_276_fu_942_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1129_i_fu_952_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_277_fu_964_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1130_i_fu_974_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1129_cast_i_fu_960_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1130_cast_i_cast_fu_982_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1124_cast_i_cast_fu_880_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp12_fu_992_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp12_cast_fu_998_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp11_fu_986_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal yOFTmpRet_V_fu_1002_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xOFTmpRet_V_cast_i_fu_938_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1008_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_1117_i_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1118_i_fu_856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp13_fu_1020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_25_fu_1016_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1135_cast_i_cast_fu_1063_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp14_fu_1066_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1119_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_164_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4274_i_cast_fu_1079_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_2556_fu_1076_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4275_i_fu_1090_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_26_fu_1098_p5 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1119_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1119_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_1119_p20 : STD_LOGIC_VECTOR (13 downto 0);

    component feedbackWithoutOFHis IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        OFRet_V : IN STD_LOGIC_VECTOR (15 downto 0);
        rotateFlg_V : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        OFHistRadiusSum_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
        OFHistRadiusSum_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        OFHistRadiusSum_V_o_ap_vld : OUT STD_LOGIC;
        OFHistCntSum_V_i : IN STD_LOGIC_VECTOR (15 downto 0);
        OFHistCntSum_V_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        OFHistCntSum_V_o_ap_vld : OUT STD_LOGIC;
        glAverageTargetValue_i : IN STD_LOGIC_VECTOR (15 downto 0);
        glAverageTargetValue_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        glAverageTargetValue_o_ap_vld : OUT STD_LOGIC;
        areaEventThr_i : IN STD_LOGIC_VECTOR (15 downto 0);
        areaEventThr_o : OUT STD_LOGIC_VECTOR (15 downto 0);
        areaEventThr_o_ap_vld : OUT STD_LOGIC;
        glOFHistCntSum_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        glOFHistCntSum_V_ap_vld : OUT STD_LOGIC;
        glOFHistRadiusSum_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        glOFHistRadiusSum_V_ap_vld : OUT STD_LOGIC;
        areaEventThrBak : OUT STD_LOGIC_VECTOR (15 downto 0);
        areaEventThrBak_ap_vld : OUT STD_LOGIC;
        glAverageTargetValue_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        glAverageTargetValue_1_ap_vld : OUT STD_LOGIC );
    end component;


    component EVABMOFStreamWith1iI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;



begin
    grp_feedbackWithoutOFHis_fu_370 : component feedbackWithoutOFHis
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_feedbackWithoutOFHis_fu_370_ap_start,
        ap_done => grp_feedbackWithoutOFHis_fu_370_ap_done,
        ap_idle => grp_feedbackWithoutOFHis_fu_370_ap_idle,
        ap_ready => grp_feedbackWithoutOFHis_fu_370_ap_ready,
        OFRet_V => p_Val2_73_reg_1243,
        rotateFlg_V => p_read1,
        p_read => p_read,
        OFHistRadiusSum_V_i => OFHistRadiusSum_V_i,
        OFHistRadiusSum_V_o => grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o,
        OFHistRadiusSum_V_o_ap_vld => grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o_ap_vld,
        OFHistCntSum_V_i => OFHistCntSum_V_i,
        OFHistCntSum_V_o => grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o,
        OFHistCntSum_V_o_ap_vld => grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o_ap_vld,
        glAverageTargetValue_i => glAverageTargetValue_i,
        glAverageTargetValue_o => grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o,
        glAverageTargetValue_o_ap_vld => grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o_ap_vld,
        areaEventThr_i => areaEventThr_i,
        areaEventThr_o => grp_feedbackWithoutOFHis_fu_370_areaEventThr_o,
        areaEventThr_o_ap_vld => grp_feedbackWithoutOFHis_fu_370_areaEventThr_o_ap_vld,
        glOFHistCntSum_V => grp_feedbackWithoutOFHis_fu_370_glOFHistCntSum_V,
        glOFHistCntSum_V_ap_vld => grp_feedbackWithoutOFHis_fu_370_glOFHistCntSum_V_ap_vld,
        glOFHistRadiusSum_V => grp_feedbackWithoutOFHis_fu_370_glOFHistRadiusSum_V,
        glOFHistRadiusSum_V_ap_vld => grp_feedbackWithoutOFHis_fu_370_glOFHistRadiusSum_V_ap_vld,
        areaEventThrBak => grp_feedbackWithoutOFHis_fu_370_areaEventThrBak,
        areaEventThrBak_ap_vld => grp_feedbackWithoutOFHis_fu_370_areaEventThrBak_ap_vld,
        glAverageTargetValue_1 => grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_1,
        glAverageTargetValue_1_ap_vld => grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_1_ap_vld);

    EVABMOFStreamWith1iI_U645 : component EVABMOFStreamWith1iI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 14)
    port map (
        din0 => grp_fu_1119_p0,
        din1 => xOFRet_V_reg_1248,
        din2 => grp_fu_1119_p2,
        dout => grp_fu_1119_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ioackin_custDataStreamOut_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_custDataStreamOut_V_V_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if (not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io)))) then 
                        ap_reg_ioackin_custDataStreamOut_V_V_TREADY <= ap_const_logic_0;
                    elsif (((custDataStreamOut_V_V_TREADY = ap_const_logic_1) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
                        ap_reg_ioackin_custDataStreamOut_V_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_polStreamOut_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_polStreamOut_V_V_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if (not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io)))) then 
                        ap_reg_ioackin_polStreamOut_V_V_TREADY <= ap_const_logic_0;
                    elsif (((polStreamOut_V_V_TREADY = ap_const_logic_1) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
                        ap_reg_ioackin_polStreamOut_V_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_tsStreamOut_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_tsStreamOut_V_V_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if (not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io)))) then 
                        ap_reg_ioackin_tsStreamOut_V_V_TREADY <= ap_const_logic_0;
                    elsif (((tsStreamOut_V_V_TREADY = ap_const_logic_1) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
                        ap_reg_ioackin_tsStreamOut_V_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_xStreamOut_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_xStreamOut_V_V_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if (not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io)))) then 
                        ap_reg_ioackin_xStreamOut_V_V_TREADY <= ap_const_logic_0;
                    elsif (((xStreamOut_V_V_TREADY = ap_const_logic_1) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
                        ap_reg_ioackin_xStreamOut_V_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_yStreamOut_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_yStreamOut_V_V_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if (not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io)))) then 
                        ap_reg_ioackin_yStreamOut_V_V_TREADY <= ap_const_logic_0;
                    elsif (((yStreamOut_V_V_TREADY = ap_const_logic_1) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
                        ap_reg_ioackin_yStreamOut_V_V_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    grp_feedbackWithoutOFHis_fu_370_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_feedbackWithoutOFHis_fu_370_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_feedbackWithoutOFHis_fu_370_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feedbackWithoutOFHis_fu_370_ap_ready = ap_const_logic_1)) then 
                    grp_feedbackWithoutOFHis_fu_370_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_Val2_1_reg_337_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if (((or_cond1_fu_750_p2 = ap_const_lv1_0) and (or_cond_fu_696_p2 = ap_const_lv1_0))) then 
                    p_Val2_1_reg_337 <= tmp_V_190_reg_1184;
                elsif (((or_cond1_fu_750_p2 = ap_const_lv1_1) or (or_cond_fu_696_p2 = ap_const_lv1_1))) then 
                    p_Val2_1_reg_337 <= ap_const_lv6_3F;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_2_reg_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if (((or_cond1_i_fu_838_p2 = ap_const_lv1_0) and (or_cond_i_fu_794_p2 = ap_const_lv1_0))) then 
                    p_Val2_2_reg_348 <= tmp_V_179_reg_1174;
                elsif (((or_cond1_i_fu_838_p2 = ap_const_lv1_1) or (or_cond_i_fu_794_p2 = ap_const_lv1_1))) then 
                    p_Val2_2_reg_348 <= ap_const_lv6_3F;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_72_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if (((or_cond14_i_fu_642_p2 = ap_const_lv1_0) and (or_cond13_i_reg_1219 = ap_const_lv1_0))) then 
                    p_Val2_72_reg_315 <= tmp_V_191_reg_1194;
                elsif (((or_cond14_i_fu_642_p2 = ap_const_lv1_1) or (or_cond13_i_reg_1219 = ap_const_lv1_1))) then 
                    p_Val2_72_reg_315 <= ap_const_lv6_3F;
                end if;
            end if; 
        end if;
    end process;

    tmp_V_101_load_reg_359_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if (((or_cond1_i_fu_838_p2 = ap_const_lv1_0) and (or_cond_i_fu_794_p2 = ap_const_lv1_0))) then 
                    tmp_V_101_load_reg_359 <= tmp_V_reg_1169;
                elsif (((or_cond1_i_fu_838_p2 = ap_const_lv1_1) or (or_cond_i_fu_794_p2 = ap_const_lv1_1))) then 
                    tmp_V_101_load_reg_359 <= ap_const_lv15_7FFF;
                end if;
            end if; 
        end if;
    end process;

    tmp_V_103_load_reg_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                if (((or_cond1_fu_750_p2 = ap_const_lv1_0) and (or_cond_fu_696_p2 = ap_const_lv1_0))) then 
                    tmp_V_103_load_reg_326 <= tmp_V_180_reg_1179;
                elsif (((or_cond1_fu_750_p2 = ap_const_lv1_1) or (or_cond_fu_696_p2 = ap_const_lv1_1))) then 
                    tmp_V_103_load_reg_326 <= ap_const_lv15_7FFF;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                or_cond13_i_reg_1219 <= or_cond13_i_fu_597_p2;
                p_Result_s_reg_1164 <= p_Result_s_fu_425_p5;
                pol_V_reg_1159 <= packetEventDataStream_V_V_dout(32 downto 32);
                    r_V_63_reg_1199(4 downto 1) <= r_V_63_fu_453_p2(4 downto 1);
                    r_V_64_reg_1204(4 downto 1) <= r_V_64_fu_481_p2(4 downto 1);
                tmp_V_179_reg_1174 <= OFRetStreamScale0_V_V_dout;
                tmp_V_180_reg_1179 <= miniSumStreamScale1_V_V_dout;
                tmp_V_182_reg_1189 <= miniSumStreamScale2_V_V_dout;
                tmp_V_189_reg_1140 <= packetEventDataStream_V_V_dout;
                tmp_V_190_reg_1184 <= OFRetStreamScale1_V_V_dout;
                tmp_V_191_reg_1194 <= OFRetStreamScale2_V_V_dout;
                tmp_V_reg_1169 <= miniSumStreamScale0_V_V_dout;
                    xInitOffsetScale0_V_reg_1209(6 downto 1) <= xInitOffsetScale0_V_fu_513_p2(6 downto 1);
                x_V_reg_1153 <= x_V_fu_403_p1;
                    yInitOffsetScale0_V_reg_1214(6 downto 1) <= yInitOffsetScale0_V_fu_551_p2(6 downto 1);
                y_V_reg_1147 <= packetEventDataStream_V_V_dout(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                p_Val2_73_reg_1243 <= p_Val2_73_fu_1031_p3;
                tmp_1138_i_reg_1258 <= tmp_1138_i_fu_1054_p2;
                xOFRet_V_reg_1248 <= xOFRet_V_fu_1040_p1;
                yOFRet_V_reg_1253 <= p_Val2_73_fu_1031_p3(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                tmp_1116_i_reg_1238 <= tmp_1116_i_fu_844_p2;
            end if;
        end if;
    end process;
    r_V_63_reg_1199(0) <= '0';
    r_V_64_reg_1204(0) <= '0';
    xInitOffsetScale0_V_reg_1209(0) <= '0';
    yInitOffsetScale0_V_reg_1214(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n, ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_block_state4_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if ((not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    OFHistCntSum_V_o_assign_proc : process(OFHistCntSum_V_i, ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o, grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o_ap_vld)
    begin
        if (((grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            OFHistCntSum_V_o <= grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o;
        else 
            OFHistCntSum_V_o <= OFHistCntSum_V_i;
        end if; 
    end process;

    OFHistCntSum_V_o_ap_vld <= grp_feedbackWithoutOFHis_fu_370_OFHistCntSum_V_o_ap_vld;

    OFHistRadiusSum_V_o_assign_proc : process(OFHistRadiusSum_V_i, ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o, grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o_ap_vld)
    begin
        if (((grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            OFHistRadiusSum_V_o <= grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o;
        else 
            OFHistRadiusSum_V_o <= OFHistRadiusSum_V_i;
        end if; 
    end process;

    OFHistRadiusSum_V_o_ap_vld <= grp_feedbackWithoutOFHis_fu_370_OFHistRadiusSum_V_o_ap_vld;

    OFRetStreamScale0_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, OFRetStreamScale0_V_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OFRetStreamScale0_V_V_blk_n <= OFRetStreamScale0_V_V_empty_n;
        else 
            OFRetStreamScale0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OFRetStreamScale0_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OFRetStreamScale0_V_V_read <= ap_const_logic_1;
        else 
            OFRetStreamScale0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    OFRetStreamScale1_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, OFRetStreamScale1_V_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OFRetStreamScale1_V_V_blk_n <= OFRetStreamScale1_V_V_empty_n;
        else 
            OFRetStreamScale1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OFRetStreamScale1_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OFRetStreamScale1_V_V_read <= ap_const_logic_1;
        else 
            OFRetStreamScale1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    OFRetStreamScale2_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, OFRetStreamScale2_V_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OFRetStreamScale2_V_V_blk_n <= OFRetStreamScale2_V_V_empty_n;
        else 
            OFRetStreamScale2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OFRetStreamScale2_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            OFRetStreamScale2_V_V_read <= ap_const_logic_1;
        else 
            OFRetStreamScale2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    addconv1_i_fu_616_p2 <= std_logic_vector(unsigned(lhs_V_12_cast_i_fu_612_p1) + unsigned(ap_const_lv15_7FFA));
    addconv6_i_fu_768_p2 <= std_logic_vector(unsigned(r_V_61_fu_762_p2) + unsigned(ap_const_lv18_3FFF1));
    addconv7_i_fu_782_p2 <= std_logic_vector(unsigned(r_V_61_fu_762_p2) + unsigned(ap_const_lv18_F));
    addconv8_i_fu_812_p2 <= std_logic_vector(unsigned(r_V_62_fu_806_p2) + unsigned(ap_const_lv18_3FFF1));
    addconv9_i_fu_826_p2 <= std_logic_vector(unsigned(r_V_62_fu_806_p2) + unsigned(ap_const_lv18_F));
    addconv_i_fu_571_p2 <= std_logic_vector(signed(ap_const_lv15_7FFA) + signed(lhs_V_cast_i_fu_567_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_state1_assign_proc : process(ap_start, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state4_io_assign_proc : process(ap_sig_ioackin_xStreamOut_V_V_TREADY, ap_sig_ioackin_yStreamOut_V_V_TREADY, ap_sig_ioackin_polStreamOut_V_V_TREADY, ap_sig_ioackin_tsStreamOut_V_V_TREADY, ap_sig_ioackin_custDataStreamOut_V_V_TREADY)
    begin
                ap_block_state4_io <= ((ap_sig_ioackin_custDataStreamOut_V_V_TREADY = ap_const_logic_0) or (ap_sig_ioackin_tsStreamOut_V_V_TREADY = ap_const_logic_0) or (ap_sig_ioackin_polStreamOut_V_V_TREADY = ap_const_logic_0) or (ap_sig_ioackin_yStreamOut_V_V_TREADY = ap_const_logic_0) or (ap_sig_ioackin_xStreamOut_V_V_TREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_block_state4_io)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_tmp_V_105_load_phi_fu_308_p4_assign_proc : process(tmp_V_182_reg_1189, or_cond13_i_reg_1219, ap_CS_fsm_state2, or_cond14_i_fu_642_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if (((or_cond14_i_fu_642_p2 = ap_const_lv1_0) and (or_cond13_i_reg_1219 = ap_const_lv1_0))) then 
                ap_phi_mux_tmp_V_105_load_phi_fu_308_p4 <= tmp_V_182_reg_1189;
            elsif (((or_cond14_i_fu_642_p2 = ap_const_lv1_1) or (or_cond13_i_reg_1219 = ap_const_lv1_1))) then 
                ap_phi_mux_tmp_V_105_load_phi_fu_308_p4 <= ap_const_lv15_7FFF;
            else 
                ap_phi_mux_tmp_V_105_load_phi_fu_308_p4 <= "XXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_tmp_V_105_load_phi_fu_308_p4 <= "XXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_block_state4_io)
    begin
        if ((not(((grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state4_io))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_custDataStreamOut_V_V_TREADY_assign_proc : process(custDataStreamOut_V_V_TREADY, ap_reg_ioackin_custDataStreamOut_V_V_TREADY)
    begin
        if ((ap_reg_ioackin_custDataStreamOut_V_V_TREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_custDataStreamOut_V_V_TREADY <= custDataStreamOut_V_V_TREADY;
        else 
            ap_sig_ioackin_custDataStreamOut_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_polStreamOut_V_V_TREADY_assign_proc : process(polStreamOut_V_V_TREADY, ap_reg_ioackin_polStreamOut_V_V_TREADY)
    begin
        if ((ap_reg_ioackin_polStreamOut_V_V_TREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_polStreamOut_V_V_TREADY <= polStreamOut_V_V_TREADY;
        else 
            ap_sig_ioackin_polStreamOut_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_tsStreamOut_V_V_TREADY_assign_proc : process(tsStreamOut_V_V_TREADY, ap_reg_ioackin_tsStreamOut_V_V_TREADY)
    begin
        if ((ap_reg_ioackin_tsStreamOut_V_V_TREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_tsStreamOut_V_V_TREADY <= tsStreamOut_V_V_TREADY;
        else 
            ap_sig_ioackin_tsStreamOut_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_xStreamOut_V_V_TREADY_assign_proc : process(xStreamOut_V_V_TREADY, ap_reg_ioackin_xStreamOut_V_V_TREADY)
    begin
        if ((ap_reg_ioackin_xStreamOut_V_V_TREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_xStreamOut_V_V_TREADY <= xStreamOut_V_V_TREADY;
        else 
            ap_sig_ioackin_xStreamOut_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_yStreamOut_V_V_TREADY_assign_proc : process(yStreamOut_V_V_TREADY, ap_reg_ioackin_yStreamOut_V_V_TREADY)
    begin
        if ((ap_reg_ioackin_yStreamOut_V_V_TREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_yStreamOut_V_V_TREADY <= yStreamOut_V_V_TREADY;
        else 
            ap_sig_ioackin_yStreamOut_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    areaEventThrBak <= grp_feedbackWithoutOFHis_fu_370_areaEventThrBak;
    areaEventThrBak_ap_vld <= grp_feedbackWithoutOFHis_fu_370_areaEventThrBak_ap_vld;

    areaEventThr_o_assign_proc : process(areaEventThr_i, ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_areaEventThr_o, grp_feedbackWithoutOFHis_fu_370_areaEventThr_o_ap_vld)
    begin
        if (((grp_feedbackWithoutOFHis_fu_370_areaEventThr_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            areaEventThr_o <= grp_feedbackWithoutOFHis_fu_370_areaEventThr_o;
        else 
            areaEventThr_o <= areaEventThr_i;
        end if; 
    end process;

    areaEventThr_o_ap_vld <= grp_feedbackWithoutOFHis_fu_370_areaEventThr_o_ap_vld;
    custDataStreamOut_V_V_TDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_26_fu_1098_p5),24));

    custDataStreamOut_V_V_TDATA_blk_n_assign_proc : process(custDataStreamOut_V_V_TREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            custDataStreamOut_V_V_TDATA_blk_n <= custDataStreamOut_V_V_TREADY;
        else 
            custDataStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    custDataStreamOut_V_V_TVALID_assign_proc : process(ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_reg_ioackin_custDataStreamOut_V_V_TREADY)
    begin
        if (((ap_reg_ioackin_custDataStreamOut_V_V_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
            custDataStreamOut_V_V_TVALID <= ap_const_logic_1;
        else 
            custDataStreamOut_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    glAverageTargetValue_1 <= grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_1;
    glAverageTargetValue_1_ap_vld <= grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_1_ap_vld;

    glAverageTargetValue_o_assign_proc : process(glAverageTargetValue_i, ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o, grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o_ap_vld)
    begin
        if (((grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            glAverageTargetValue_o <= grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o;
        else 
            glAverageTargetValue_o <= glAverageTargetValue_i;
        end if; 
    end process;

    glAverageTargetValue_o_ap_vld <= grp_feedbackWithoutOFHis_fu_370_glAverageTargetValue_o_ap_vld;
    glOFHistCntSum_V <= grp_feedbackWithoutOFHis_fu_370_glOFHistCntSum_V;
    glOFHistCntSum_V_ap_vld <= grp_feedbackWithoutOFHis_fu_370_glOFHistCntSum_V_ap_vld;
    glOFHistRadiusSum_V <= grp_feedbackWithoutOFHis_fu_370_glOFHistRadiusSum_V;
    glOFHistRadiusSum_V_ap_vld <= grp_feedbackWithoutOFHis_fu_370_glOFHistRadiusSum_V_ap_vld;
    grp_feedbackWithoutOFHis_fu_370_ap_start <= grp_feedbackWithoutOFHis_fu_370_ap_start_reg;
    grp_fu_1119_p0 <= ap_const_lv14_2B(7 - 1 downto 0);
    grp_fu_1119_p2 <= grp_fu_1119_p20(11 - 1 downto 0);
    grp_fu_1119_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp14_fu_1066_p2),14));
    lhs_V_12_cast_i_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_275_fu_603_p4),15));
    lhs_V_3_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_V_reg_1147),18));
    lhs_V_cast_i_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_274_fu_557_p4),15));
    lhs_V_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_V_reg_1153),18));

    miniSumStreamScale0_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, miniSumStreamScale0_V_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            miniSumStreamScale0_V_V_blk_n <= miniSumStreamScale0_V_V_empty_n;
        else 
            miniSumStreamScale0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    miniSumStreamScale0_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            miniSumStreamScale0_V_V_read <= ap_const_logic_1;
        else 
            miniSumStreamScale0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    miniSumStreamScale1_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, miniSumStreamScale1_V_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            miniSumStreamScale1_V_V_blk_n <= miniSumStreamScale1_V_V_empty_n;
        else 
            miniSumStreamScale1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    miniSumStreamScale1_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            miniSumStreamScale1_V_V_read <= ap_const_logic_1;
        else 
            miniSumStreamScale1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    miniSumStreamScale2_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, miniSumStreamScale2_V_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            miniSumStreamScale2_V_V_blk_n <= miniSumStreamScale2_V_V_empty_n;
        else 
            miniSumStreamScale2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    miniSumStreamScale2_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            miniSumStreamScale2_V_V_read <= ap_const_logic_1;
        else 
            miniSumStreamScale2_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    or_cond13_i_fu_597_p2 <= (tmp_2546_fu_577_p3 or tmp_1103_i_fu_591_p2);
    or_cond14_i_fu_642_p2 <= (tmp_2547_fu_622_p3 or tmp_1106_i_fu_636_p2);
    or_cond1_fu_750_p2 <= (tmp_2549_fu_730_p3 or tmp_1111_i_fu_744_p2);
    or_cond1_i_fu_838_p2 <= (tmp_2551_fu_818_p3 or tmp_1115_i_fu_832_p2);
    or_cond_fu_696_p2 <= (tmp_2548_fu_676_p3 or tmp_1108_i_fu_690_p2);
    or_cond_i_fu_794_p2 <= (tmp_2550_fu_774_p3 or tmp_1113_i_fu_788_p2);
    p_Result_13_i_fu_870_p4 <= p_Val2_2_reg_348(5 downto 3);
        p_Result_25_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_s_fu_1008_p3),16));

    p_Result_26_fu_1098_p5 <= (ap_const_lv17_0(16 downto 11) & tmp_4275_i_fu_1090_p3);
    p_Result_7_i_fu_519_p4 <= OFRetStreamScale1_V_V_dout(5 downto 3);
    p_Result_i_fu_415_p4 <= packetEventDataStream_V_V_dout(95 downto 33);
    p_Result_s_fu_425_p5 <= (ap_const_lv64_0(63 downto 63) & p_Result_i_fu_415_p4);
    p_Val2_73_fu_1031_p3 <= 
        p_Result_25_fu_1016_p1 when (sel_tmp6_fu_1026_p2(0) = '1') else 
        ap_const_lv16_7F7F;

    packetEventDataStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            packetEventDataStream_V_V_blk_n <= packetEventDataStream_V_V_empty_n;
        else 
            packetEventDataStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    packetEventDataStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_state1, packetEventDataStream_V_V_empty_n, miniSumStreamScale0_V_V_empty_n, OFRetStreamScale0_V_V_empty_n, miniSumStreamScale1_V_V_empty_n, OFRetStreamScale1_V_V_empty_n, miniSumStreamScale2_V_V_empty_n, OFRetStreamScale2_V_V_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale2_V_V_empty_n) or (miniSumStreamScale2_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale1_V_V_empty_n) or (miniSumStreamScale1_V_V_empty_n = ap_const_logic_0) or (ap_const_logic_0 = OFRetStreamScale0_V_V_empty_n) or (miniSumStreamScale0_V_V_empty_n = ap_const_logic_0) or (packetEventDataStream_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            packetEventDataStream_V_V_read <= ap_const_logic_1;
        else 
            packetEventDataStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    polStreamOut_V_V_TDATA <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pol_V_reg_1159),8));

    polStreamOut_V_V_TDATA_blk_n_assign_proc : process(polStreamOut_V_V_TREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            polStreamOut_V_V_TDATA_blk_n <= polStreamOut_V_V_TREADY;
        else 
            polStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    polStreamOut_V_V_TVALID_assign_proc : process(ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_reg_ioackin_polStreamOut_V_V_TREADY)
    begin
        if (((ap_reg_ioackin_polStreamOut_V_V_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
            polStreamOut_V_V_TVALID <= ap_const_logic_1;
        else 
            polStreamOut_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    r_V_173_i_fu_585_p2 <= std_logic_vector(unsigned(ap_const_lv15_6) + unsigned(lhs_V_cast_i_fu_567_p1));
    r_V_176_i_fu_630_p2 <= std_logic_vector(unsigned(lhs_V_12_cast_i_fu_612_p1) + unsigned(ap_const_lv15_6));
    r_V_4_i_fu_670_p2 <= std_logic_vector(unsigned(tmp_fu_664_p2) + unsigned(ap_const_lv16_FFF7));
    r_V_57_fu_684_p2 <= std_logic_vector(unsigned(tmp_fu_664_p2) + unsigned(ap_const_lv16_9));
    r_V_58_fu_702_p4 <= tmp_V_189_reg_1140(31 downto 17);
    r_V_59_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_58_fu_702_p4),16));
    r_V_60_fu_738_p2 <= std_logic_vector(unsigned(tmp5_fu_718_p2) + unsigned(ap_const_lv16_9));
    r_V_61_fu_762_p2 <= std_logic_vector(unsigned(lhs_V_fu_756_p1) + unsigned(rhs_V_fu_759_p1));
    r_V_62_fu_806_p2 <= std_logic_vector(unsigned(lhs_V_3_fu_800_p1) + unsigned(rhs_V_3_fu_803_p1));
    r_V_63_fu_453_p2 <= std_logic_vector(signed(ap_const_lv5_1A) + signed(tmp_1098_cast10_i_fu_449_p1));
    r_V_64_fu_481_p2 <= std_logic_vector(signed(ap_const_lv5_1A) + signed(tmp_1100_cast9_i_fu_477_p1));
    r_V_7_i_fu_724_p2 <= std_logic_vector(unsigned(tmp5_fu_718_p2) + unsigned(ap_const_lv16_FFF7));
    r_V_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_s_fu_648_p4),16));
    r_V_s_fu_648_p4 <= tmp_V_189_reg_1140(15 downto 1);
        rhs_V_3_cast7_i_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_64_reg_1204),16));

        rhs_V_3_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(yInitOffsetScale0_V_reg_1214),18));

        rhs_V_cast8_i_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_63_reg_1199),16));

        rhs_V_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xInitOffsetScale0_V_reg_1209),18));

    sel_tmp6_fu_1026_p2 <= (tmp_1116_i_reg_1238 and tmp13_fu_1020_p2);
    tmp103_i_fu_533_p2 <= std_logic_vector(unsigned(tmp_4271_cast_i_fu_529_p1) + unsigned(r_V_64_fu_481_p2));
    tmp10_cast_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp10_fu_922_p2),6));
    tmp10_fu_922_p2 <= std_logic_vector(unsigned(tmp_1126_cast_i_cast_fu_912_p1) + unsigned(tmp_1123_cast_i_cast_fu_866_p1));
    tmp11_fu_986_p2 <= std_logic_vector(signed(ap_const_lv6_2B) + signed(tmp_1129_cast_i_fu_960_p1));
        tmp11_i_cast_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_273_fu_539_p3),7));

    tmp12_cast_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp12_fu_992_p2),6));
    tmp12_fu_992_p2 <= std_logic_vector(unsigned(tmp_1130_cast_i_cast_fu_982_p1) + unsigned(tmp_1124_cast_i_cast_fu_880_p1));
    tmp13_fu_1020_p2 <= (tmp_1118_i_fu_856_p2 and tmp_1117_i_fu_850_p2);
    tmp14_fu_1066_p2 <= std_logic_vector(unsigned(ap_const_lv11_39C) + unsigned(tmp_1135_cast_i_cast_fu_1063_p1));
    tmp5_fu_718_p2 <= std_logic_vector(signed(rhs_V_3_cast7_i_fu_715_p1) + signed(r_V_59_fu_711_p1));
    tmp5_i_fu_495_p2 <= std_logic_vector(unsigned(tmp_4269_cast_i_fu_491_p1) + unsigned(r_V_63_fu_453_p2));
    tmp9_fu_916_p2 <= std_logic_vector(signed(ap_const_lv6_2B) + signed(tmp_1125_cast_i_fu_896_p1));
        tmp9_i_cast_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_272_fu_501_p3),7));

    tmp_1098_cast10_i_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1098_i_fu_441_p3),5));
    tmp_1098_i_fu_441_p3 <= (tmp_2544_fu_437_p1 & ap_const_lv1_0);
    tmp_1100_cast9_i_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1100_i_fu_469_p3),5));
    tmp_1100_i_fu_469_p3 <= (tmp_271_fu_459_p4 & ap_const_lv1_0);
    tmp_1103_i_fu_591_p2 <= "1" when (unsigned(r_V_173_i_fu_585_p2) > unsigned(ap_const_lv15_55)) else "0";
    tmp_1106_i_fu_636_p2 <= "1" when (unsigned(r_V_176_i_fu_630_p2) > unsigned(ap_const_lv15_40)) else "0";
    tmp_1108_i_fu_690_p2 <= "1" when (unsigned(r_V_57_fu_684_p2) > unsigned(ap_const_lv16_AC)) else "0";
    tmp_1111_i_fu_744_p2 <= "1" when (unsigned(r_V_60_fu_738_p2) > unsigned(ap_const_lv16_81)) else "0";
    tmp_1113_i_fu_788_p2 <= "1" when (signed(addconv7_i_fu_782_p2) > signed(ap_const_lv18_159)) else "0";
    tmp_1115_i_fu_832_p2 <= "1" when (signed(addconv9_i_fu_826_p2) > signed(ap_const_lv18_103)) else "0";
    tmp_1116_i_fu_844_p2 <= "1" when (unsigned(ap_phi_mux_tmp_V_105_load_phi_fu_308_p4) < unsigned(ap_const_lv15_5BE)) else "0";
    tmp_1117_i_fu_850_p2 <= "1" when (unsigned(tmp_V_103_load_reg_326) < unsigned(ap_const_lv15_13CE)) else "0";
    tmp_1118_i_fu_856_p2 <= "1" when (unsigned(tmp_V_101_load_reg_359) < unsigned(ap_const_lv15_493E)) else "0";
    tmp_1123_cast_i_cast_fu_866_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2552_fu_862_p1),5));
    tmp_1124_cast_i_cast_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_13_i_fu_870_p4),5));
    tmp_1125_cast_i_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1125_i_fu_888_p3),6));
    tmp_1125_i_fu_888_p3 <= (tmp_2553_fu_884_p1 & ap_const_lv2_0);
    tmp_1126_cast_i_cast_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1126_i_fu_904_p3),5));
    tmp_1126_i_fu_904_p3 <= (tmp_2554_fu_900_p1 & ap_const_lv1_0);
    tmp_1129_cast_i_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1129_i_fu_952_p3),6));
    tmp_1129_i_fu_952_p3 <= (tmp_276_fu_942_p4 & ap_const_lv2_0);
    tmp_1130_cast_i_cast_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1130_i_fu_974_p3),5));
    tmp_1130_i_fu_974_p3 <= (tmp_277_fu_964_p4 & ap_const_lv1_0);
        tmp_1135_cast_i_cast_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(yOFRet_V_reg_1253),11));

    tmp_1138_i_fu_1054_p2 <= "1" when (p_Val2_73_fu_1031_p3 = ap_const_lv16_7F7F) else "0";
    tmp_164_fu_1086_p2 <= (tmp_1138_i_reg_1258 or p_read1);
    tmp_2544_fu_437_p1 <= OFRetStreamScale2_V_V_dout(3 - 1 downto 0);
    tmp_2545_fu_487_p1 <= OFRetStreamScale1_V_V_dout(3 - 1 downto 0);
    tmp_2546_fu_577_p3 <= addconv_i_fu_571_p2(14 downto 14);
    tmp_2547_fu_622_p3 <= addconv1_i_fu_616_p2(14 downto 14);
    tmp_2548_fu_676_p3 <= r_V_4_i_fu_670_p2(15 downto 15);
    tmp_2549_fu_730_p3 <= r_V_7_i_fu_724_p2(15 downto 15);
    tmp_2550_fu_774_p3 <= addconv6_i_fu_768_p2(17 downto 17);
    tmp_2551_fu_818_p3 <= addconv8_i_fu_812_p2(17 downto 17);
    tmp_2552_fu_862_p1 <= p_Val2_2_reg_348(3 - 1 downto 0);
    tmp_2553_fu_884_p1 <= p_Val2_72_reg_315(3 - 1 downto 0);
    tmp_2554_fu_900_p1 <= p_Val2_1_reg_337(3 - 1 downto 0);
    tmp_2556_fu_1076_p1 <= grp_fu_1119_p3(11 - 1 downto 0);
    tmp_271_fu_459_p4 <= OFRetStreamScale2_V_V_dout(5 downto 3);
    tmp_272_fu_501_p3 <= (tmp5_i_fu_495_p2 & ap_const_lv1_0);
    tmp_273_fu_539_p3 <= (tmp103_i_fu_533_p2 & ap_const_lv1_0);
    tmp_274_fu_557_p4 <= packetEventDataStream_V_V_dout(15 downto 2);
    tmp_275_fu_603_p4 <= tmp_V_189_reg_1140(31 downto 18);
    tmp_276_fu_942_p4 <= p_Val2_72_reg_315(5 downto 3);
    tmp_277_fu_964_p4 <= p_Val2_1_reg_337(5 downto 3);
    tmp_4269_cast_i_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2545_fu_487_p1),5));
    tmp_4271_cast_i_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_i_fu_519_p4),5));
    tmp_4274_i_cast_fu_1079_p3 <= 
        ap_const_lv11_7FE when (p_read1(0) = '1') else 
        ap_const_lv11_7FF;
    tmp_4275_i_fu_1090_p3 <= 
        tmp_4274_i_cast_fu_1079_p3 when (tmp_164_fu_1086_p2(0) = '1') else 
        tmp_2556_fu_1076_p1;
    tmp_fu_664_p2 <= std_logic_vector(signed(rhs_V_cast8_i_fu_661_p1) + signed(r_V_fu_657_p1));
    tmp_s_fu_1008_p3 <= (yOFTmpRet_V_fu_1002_p2 & xOFTmpRet_V_cast_i_fu_938_p1);
    tsStreamOut_V_V_TDATA <= p_Result_s_reg_1164;

    tsStreamOut_V_V_TDATA_blk_n_assign_proc : process(tsStreamOut_V_V_TREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            tsStreamOut_V_V_TDATA_blk_n <= tsStreamOut_V_V_TREADY;
        else 
            tsStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tsStreamOut_V_V_TVALID_assign_proc : process(ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_reg_ioackin_tsStreamOut_V_V_TREADY)
    begin
        if (((ap_reg_ioackin_tsStreamOut_V_V_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
            tsStreamOut_V_V_TVALID <= ap_const_logic_1;
        else 
            tsStreamOut_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    xInitOffsetScale0_V_fu_513_p2 <= std_logic_vector(signed(ap_const_lv7_7A) + signed(tmp9_i_cast_fu_509_p1));
    xOFRet_V_fu_1040_p1 <= p_Val2_73_fu_1031_p3(8 - 1 downto 0);
        xOFTmpRet_V_cast_i_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xOFTmpRet_V_fu_932_p2),8));

    xOFTmpRet_V_fu_932_p2 <= std_logic_vector(unsigned(tmp10_cast_fu_928_p1) + unsigned(tmp9_fu_916_p2));
    xStreamOut_V_V_TDATA <= x_V_reg_1153;

    xStreamOut_V_V_TDATA_blk_n_assign_proc : process(xStreamOut_V_V_TREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            xStreamOut_V_V_TDATA_blk_n <= xStreamOut_V_V_TREADY;
        else 
            xStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    xStreamOut_V_V_TVALID_assign_proc : process(ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_reg_ioackin_xStreamOut_V_V_TREADY)
    begin
        if (((ap_reg_ioackin_xStreamOut_V_V_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
            xStreamOut_V_V_TVALID <= ap_const_logic_1;
        else 
            xStreamOut_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    x_V_fu_403_p1 <= packetEventDataStream_V_V_dout(16 - 1 downto 0);
    yInitOffsetScale0_V_fu_551_p2 <= std_logic_vector(signed(ap_const_lv7_7A) + signed(tmp11_i_cast_fu_547_p1));
    yOFTmpRet_V_fu_1002_p2 <= std_logic_vector(unsigned(tmp12_cast_fu_998_p1) + unsigned(tmp11_fu_986_p2));
    yStreamOut_V_V_TDATA <= y_V_reg_1147;

    yStreamOut_V_V_TDATA_blk_n_assign_proc : process(yStreamOut_V_V_TREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            yStreamOut_V_V_TDATA_blk_n <= yStreamOut_V_V_TREADY;
        else 
            yStreamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    yStreamOut_V_V_TVALID_assign_proc : process(ap_CS_fsm_state4, grp_feedbackWithoutOFHis_fu_370_ap_done, ap_reg_ioackin_yStreamOut_V_V_TREADY)
    begin
        if (((ap_reg_ioackin_yStreamOut_V_V_TREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4) and (grp_feedbackWithoutOFHis_fu_370_ap_done = ap_const_logic_1))) then 
            yStreamOut_V_V_TVALID <= ap_const_logic_1;
        else 
            yStreamOut_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

end behav;

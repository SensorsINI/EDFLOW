// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module colSADSumScale2 (
        ap_clk,
        ap_rst,
        t1Col_3_V_read,
        t1Col_4_V_read,
        t1Col_5_V_read,
        t1Col_6_V_read,
        t1Col_7_V_read,
        t1Col_8_V_read,
        t1Col_9_V_read,
        t2Col_0_V_read,
        t2Col_1_V_read,
        t2Col_2_V_read,
        t2Col_3_V_read,
        t2Col_4_V_read,
        t2Col_5_V_read,
        t2Col_6_V_read,
        t2Col_7_V_read,
        t2Col_8_V_read,
        t2Col_9_V_read,
        t2Col_10_V_read,
        t2Col_11_V_read,
        t2Col_12_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [3:0] t1Col_3_V_read;
input  [3:0] t1Col_4_V_read;
input  [3:0] t1Col_5_V_read;
input  [3:0] t1Col_6_V_read;
input  [3:0] t1Col_7_V_read;
input  [3:0] t1Col_8_V_read;
input  [3:0] t1Col_9_V_read;
input  [3:0] t2Col_0_V_read;
input  [3:0] t2Col_1_V_read;
input  [3:0] t2Col_2_V_read;
input  [3:0] t2Col_3_V_read;
input  [3:0] t2Col_4_V_read;
input  [3:0] t2Col_5_V_read;
input  [3:0] t2Col_6_V_read;
input  [3:0] t2Col_7_V_read;
input  [3:0] t2Col_8_V_read;
input  [3:0] t2Col_9_V_read;
input  [3:0] t2Col_10_V_read;
input  [3:0] t2Col_11_V_read;
input  [3:0] t2Col_12_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
input   ap_ce;

wire   [6:0] grp_sadScale2_fu_176_ap_return;
reg    grp_sadScale2_fu_176_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call21;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call21;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] grp_sadScale2_fu_208_ap_return;
reg    grp_sadScale2_fu_208_ap_ce;
wire   [6:0] grp_sadScale2_fu_240_ap_return;
reg    grp_sadScale2_fu_240_ap_ce;
wire   [6:0] grp_sadScale2_fu_272_ap_return;
reg    grp_sadScale2_fu_272_ap_ce;
wire   [6:0] grp_sadScale2_fu_304_ap_return;
reg    grp_sadScale2_fu_304_ap_ce;
wire   [6:0] grp_sadScale2_fu_336_ap_return;
reg    grp_sadScale2_fu_336_ap_ce;
wire   [6:0] grp_sadScale2_fu_368_ap_return;
reg    grp_sadScale2_fu_368_ap_ce;
wire    ap_block_pp0_stage0;
wire   [15:0] retVal_0_write_assi_1_fu_400_p1;
wire   [15:0] retVal_1_write_assi_1_fu_404_p1;
wire   [15:0] retVal_2_write_assi_1_fu_408_p1;
wire   [15:0] retVal_3_write_assi_1_fu_412_p1;
wire   [15:0] retVal_4_write_assi_1_fu_416_p1;
wire   [15:0] retVal_5_write_assi_1_fu_420_p1;
wire   [15:0] retVal_6_write_assi_1_fu_424_p1;

sadScale2 grp_sadScale2_fu_176(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .refBlock_0_V_read(t1Col_3_V_read),
    .refBlock_1_V_read(t1Col_4_V_read),
    .refBlock_2_V_read(t1Col_5_V_read),
    .refBlock_3_V_read(t1Col_6_V_read),
    .refBlock_4_V_read(t1Col_7_V_read),
    .refBlock_5_V_read(t1Col_8_V_read),
    .refBlock_6_V_read(t1Col_9_V_read),
    .targetBlocks_0_V_re(t2Col_0_V_read),
    .targetBlocks_1_V_re(t2Col_1_V_read),
    .targetBlocks_2_V_re(t2Col_2_V_read),
    .targetBlocks_3_V_re(t2Col_3_V_read),
    .targetBlocks_4_V_re(t2Col_4_V_read),
    .targetBlocks_5_V_re(t2Col_5_V_read),
    .targetBlocks_6_V_re(t2Col_6_V_read),
    .ap_return(grp_sadScale2_fu_176_ap_return),
    .ap_ce(grp_sadScale2_fu_176_ap_ce)
);

sadScale2 grp_sadScale2_fu_208(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .refBlock_0_V_read(t1Col_3_V_read),
    .refBlock_1_V_read(t1Col_4_V_read),
    .refBlock_2_V_read(t1Col_5_V_read),
    .refBlock_3_V_read(t1Col_6_V_read),
    .refBlock_4_V_read(t1Col_7_V_read),
    .refBlock_5_V_read(t1Col_8_V_read),
    .refBlock_6_V_read(t1Col_9_V_read),
    .targetBlocks_0_V_re(t2Col_1_V_read),
    .targetBlocks_1_V_re(t2Col_2_V_read),
    .targetBlocks_2_V_re(t2Col_3_V_read),
    .targetBlocks_3_V_re(t2Col_4_V_read),
    .targetBlocks_4_V_re(t2Col_5_V_read),
    .targetBlocks_5_V_re(t2Col_6_V_read),
    .targetBlocks_6_V_re(t2Col_7_V_read),
    .ap_return(grp_sadScale2_fu_208_ap_return),
    .ap_ce(grp_sadScale2_fu_208_ap_ce)
);

sadScale2 grp_sadScale2_fu_240(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .refBlock_0_V_read(t1Col_3_V_read),
    .refBlock_1_V_read(t1Col_4_V_read),
    .refBlock_2_V_read(t1Col_5_V_read),
    .refBlock_3_V_read(t1Col_6_V_read),
    .refBlock_4_V_read(t1Col_7_V_read),
    .refBlock_5_V_read(t1Col_8_V_read),
    .refBlock_6_V_read(t1Col_9_V_read),
    .targetBlocks_0_V_re(t2Col_2_V_read),
    .targetBlocks_1_V_re(t2Col_3_V_read),
    .targetBlocks_2_V_re(t2Col_4_V_read),
    .targetBlocks_3_V_re(t2Col_5_V_read),
    .targetBlocks_4_V_re(t2Col_6_V_read),
    .targetBlocks_5_V_re(t2Col_7_V_read),
    .targetBlocks_6_V_re(t2Col_8_V_read),
    .ap_return(grp_sadScale2_fu_240_ap_return),
    .ap_ce(grp_sadScale2_fu_240_ap_ce)
);

sadScale2 grp_sadScale2_fu_272(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .refBlock_0_V_read(t1Col_3_V_read),
    .refBlock_1_V_read(t1Col_4_V_read),
    .refBlock_2_V_read(t1Col_5_V_read),
    .refBlock_3_V_read(t1Col_6_V_read),
    .refBlock_4_V_read(t1Col_7_V_read),
    .refBlock_5_V_read(t1Col_8_V_read),
    .refBlock_6_V_read(t1Col_9_V_read),
    .targetBlocks_0_V_re(t2Col_3_V_read),
    .targetBlocks_1_V_re(t2Col_4_V_read),
    .targetBlocks_2_V_re(t2Col_5_V_read),
    .targetBlocks_3_V_re(t2Col_6_V_read),
    .targetBlocks_4_V_re(t2Col_7_V_read),
    .targetBlocks_5_V_re(t2Col_8_V_read),
    .targetBlocks_6_V_re(t2Col_9_V_read),
    .ap_return(grp_sadScale2_fu_272_ap_return),
    .ap_ce(grp_sadScale2_fu_272_ap_ce)
);

sadScale2 grp_sadScale2_fu_304(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .refBlock_0_V_read(t1Col_3_V_read),
    .refBlock_1_V_read(t1Col_4_V_read),
    .refBlock_2_V_read(t1Col_5_V_read),
    .refBlock_3_V_read(t1Col_6_V_read),
    .refBlock_4_V_read(t1Col_7_V_read),
    .refBlock_5_V_read(t1Col_8_V_read),
    .refBlock_6_V_read(t1Col_9_V_read),
    .targetBlocks_0_V_re(t2Col_4_V_read),
    .targetBlocks_1_V_re(t2Col_5_V_read),
    .targetBlocks_2_V_re(t2Col_6_V_read),
    .targetBlocks_3_V_re(t2Col_7_V_read),
    .targetBlocks_4_V_re(t2Col_8_V_read),
    .targetBlocks_5_V_re(t2Col_9_V_read),
    .targetBlocks_6_V_re(t2Col_10_V_read),
    .ap_return(grp_sadScale2_fu_304_ap_return),
    .ap_ce(grp_sadScale2_fu_304_ap_ce)
);

sadScale2 grp_sadScale2_fu_336(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .refBlock_0_V_read(t1Col_3_V_read),
    .refBlock_1_V_read(t1Col_4_V_read),
    .refBlock_2_V_read(t1Col_5_V_read),
    .refBlock_3_V_read(t1Col_6_V_read),
    .refBlock_4_V_read(t1Col_7_V_read),
    .refBlock_5_V_read(t1Col_8_V_read),
    .refBlock_6_V_read(t1Col_9_V_read),
    .targetBlocks_0_V_re(t2Col_5_V_read),
    .targetBlocks_1_V_re(t2Col_6_V_read),
    .targetBlocks_2_V_re(t2Col_7_V_read),
    .targetBlocks_3_V_re(t2Col_8_V_read),
    .targetBlocks_4_V_re(t2Col_9_V_read),
    .targetBlocks_5_V_re(t2Col_10_V_read),
    .targetBlocks_6_V_re(t2Col_11_V_read),
    .ap_return(grp_sadScale2_fu_336_ap_return),
    .ap_ce(grp_sadScale2_fu_336_ap_ce)
);

sadScale2 grp_sadScale2_fu_368(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .refBlock_0_V_read(t1Col_3_V_read),
    .refBlock_1_V_read(t1Col_4_V_read),
    .refBlock_2_V_read(t1Col_5_V_read),
    .refBlock_3_V_read(t1Col_6_V_read),
    .refBlock_4_V_read(t1Col_7_V_read),
    .refBlock_5_V_read(t1Col_8_V_read),
    .refBlock_6_V_read(t1Col_9_V_read),
    .targetBlocks_0_V_re(t2Col_6_V_read),
    .targetBlocks_1_V_re(t2Col_7_V_read),
    .targetBlocks_2_V_re(t2Col_8_V_read),
    .targetBlocks_3_V_re(t2Col_9_V_read),
    .targetBlocks_4_V_re(t2Col_10_V_read),
    .targetBlocks_5_V_re(t2Col_11_V_read),
    .targetBlocks_6_V_re(t2Col_12_V_read),
    .ap_return(grp_sadScale2_fu_368_ap_return),
    .ap_ce(grp_sadScale2_fu_368_ap_ce)
);

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadScale2_fu_176_ap_ce = 1'b1;
    end else begin
        grp_sadScale2_fu_176_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadScale2_fu_208_ap_ce = 1'b1;
    end else begin
        grp_sadScale2_fu_208_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadScale2_fu_240_ap_ce = 1'b1;
    end else begin
        grp_sadScale2_fu_240_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadScale2_fu_272_ap_ce = 1'b1;
    end else begin
        grp_sadScale2_fu_272_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadScale2_fu_304_ap_ce = 1'b1;
    end else begin
        grp_sadScale2_fu_304_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadScale2_fu_336_ap_ce = 1'b1;
    end else begin
        grp_sadScale2_fu_336_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadScale2_fu_368_ap_ce = 1'b1;
    end else begin
        grp_sadScale2_fu_368_ap_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_return_0 = retVal_0_write_assi_1_fu_400_p1;

assign ap_return_1 = retVal_1_write_assi_1_fu_404_p1;

assign ap_return_2 = retVal_2_write_assi_1_fu_408_p1;

assign ap_return_3 = retVal_3_write_assi_1_fu_412_p1;

assign ap_return_4 = retVal_4_write_assi_1_fu_416_p1;

assign ap_return_5 = retVal_5_write_assi_1_fu_420_p1;

assign ap_return_6 = retVal_6_write_assi_1_fu_424_p1;

assign retVal_0_write_assi_1_fu_400_p1 = grp_sadScale2_fu_176_ap_return;

assign retVal_1_write_assi_1_fu_404_p1 = grp_sadScale2_fu_208_ap_return;

assign retVal_2_write_assi_1_fu_408_p1 = grp_sadScale2_fu_240_ap_return;

assign retVal_3_write_assi_1_fu_412_p1 = grp_sadScale2_fu_272_ap_return;

assign retVal_4_write_assi_1_fu_416_p1 = grp_sadScale2_fu_304_ap_return;

assign retVal_5_write_assi_1_fu_420_p1 = grp_sadScale2_fu_336_ap_return;

assign retVal_6_write_assi_1_fu_424_p1 = grp_sadScale2_fu_368_ap_return;

endmodule //colSADSumScale2

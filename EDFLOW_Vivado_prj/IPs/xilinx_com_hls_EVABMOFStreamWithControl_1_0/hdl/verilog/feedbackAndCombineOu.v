// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module feedbackAndCombineOu (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        select_V,
        packetEventDataStream_V_V_dout,
        packetEventDataStream_V_V_empty_n,
        packetEventDataStream_V_V_read,
        miniSumStreamScale0_V_V_dout,
        miniSumStreamScale0_V_V_empty_n,
        miniSumStreamScale0_V_V_read,
        OFRetStreamScale0_V_V_dout,
        OFRetStreamScale0_V_V_empty_n,
        OFRetStreamScale0_V_V_read,
        miniSumStreamScale1_V_V_dout,
        miniSumStreamScale1_V_V_empty_n,
        miniSumStreamScale1_V_V_read,
        OFRetStreamScale1_V_V_dout,
        OFRetStreamScale1_V_V_empty_n,
        OFRetStreamScale1_V_V_read,
        miniSumStreamScale2_V_V_dout,
        miniSumStreamScale2_V_V_empty_n,
        miniSumStreamScale2_V_V_read,
        OFRetStreamScale2_V_V_dout,
        OFRetStreamScale2_V_V_empty_n,
        OFRetStreamScale2_V_V_read,
        xStreamOut_V_V_TDATA,
        xStreamOut_V_V_TVALID,
        xStreamOut_V_V_TREADY,
        yStreamOut_V_V_TDATA,
        yStreamOut_V_V_TVALID,
        yStreamOut_V_V_TREADY,
        polStreamOut_V_V_TDATA,
        polStreamOut_V_V_TVALID,
        polStreamOut_V_V_TREADY,
        tsStreamOut_V_V_TDATA,
        tsStreamOut_V_V_TVALID,
        tsStreamOut_V_V_TREADY,
        custDataStreamOut_V_V_TDATA,
        custDataStreamOut_V_V_TVALID,
        custDataStreamOut_V_V_TREADY,
        p_read,
        p_read1,
        glOFHistCntSum_V,
        glOFHistCntSum_V_ap_vld,
        glOFHistRadiusSum_V,
        glOFHistRadiusSum_V_ap_vld,
        areaEventThrBak,
        areaEventThrBak_ap_vld,
        glAverageTargetValue_1,
        glAverageTargetValue_1_ap_vld
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;
parameter    ap_const_lv64_0 = 64'd0;
parameter    ap_const_lv17_0 = 17'd0;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] select_V;
input  [95:0] packetEventDataStream_V_V_dout;
input   packetEventDataStream_V_V_empty_n;
output   packetEventDataStream_V_V_read;
input  [14:0] miniSumStreamScale0_V_V_dout;
input   miniSumStreamScale0_V_V_empty_n;
output   miniSumStreamScale0_V_V_read;
input  [5:0] OFRetStreamScale0_V_V_dout;
input   OFRetStreamScale0_V_V_empty_n;
output   OFRetStreamScale0_V_V_read;
input  [14:0] miniSumStreamScale1_V_V_dout;
input   miniSumStreamScale1_V_V_empty_n;
output   miniSumStreamScale1_V_V_read;
input  [5:0] OFRetStreamScale1_V_V_dout;
input   OFRetStreamScale1_V_V_empty_n;
output   OFRetStreamScale1_V_V_read;
input  [14:0] miniSumStreamScale2_V_V_dout;
input   miniSumStreamScale2_V_V_empty_n;
output   miniSumStreamScale2_V_V_read;
input  [5:0] OFRetStreamScale2_V_V_dout;
input   OFRetStreamScale2_V_V_empty_n;
output   OFRetStreamScale2_V_V_read;
output  [15:0] xStreamOut_V_V_TDATA;
output   xStreamOut_V_V_TVALID;
input   xStreamOut_V_V_TREADY;
output  [15:0] yStreamOut_V_V_TDATA;
output   yStreamOut_V_V_TVALID;
input   yStreamOut_V_V_TREADY;
output  [7:0] polStreamOut_V_V_TDATA;
output   polStreamOut_V_V_TVALID;
input   polStreamOut_V_V_TREADY;
output  [63:0] tsStreamOut_V_V_TDATA;
output   tsStreamOut_V_V_TVALID;
input   tsStreamOut_V_V_TREADY;
output  [23:0] custDataStreamOut_V_V_TDATA;
output   custDataStreamOut_V_V_TVALID;
input   custDataStreamOut_V_V_TREADY;
input  [31:0] p_read;
input  [0:0] p_read1;
output  [15:0] glOFHistCntSum_V;
output   glOFHistCntSum_V_ap_vld;
output  [15:0] glOFHistRadiusSum_V;
output   glOFHistRadiusSum_V_ap_vld;
output  [15:0] areaEventThrBak;
output   areaEventThrBak_ap_vld;
output  [15:0] glAverageTargetValue_1;
output   glAverageTargetValue_1_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg packetEventDataStream_V_V_read;
reg miniSumStreamScale0_V_V_read;
reg OFRetStreamScale0_V_V_read;
reg miniSumStreamScale1_V_V_read;
reg OFRetStreamScale1_V_V_read;
reg miniSumStreamScale2_V_V_read;
reg OFRetStreamScale2_V_V_read;
reg[15:0] glOFHistCntSum_V;
reg glOFHistCntSum_V_ap_vld;
reg[15:0] glOFHistRadiusSum_V;
reg glOFHistRadiusSum_V_ap_vld;
reg[15:0] areaEventThrBak;
reg areaEventThrBak_ap_vld;
reg[15:0] glAverageTargetValue_1;
reg glAverageTargetValue_1_ap_vld;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] xStreamOut_V_V_1_data_in;
reg   [15:0] xStreamOut_V_V_1_data_out;
reg    xStreamOut_V_V_1_vld_in;
wire    xStreamOut_V_V_1_vld_out;
wire    xStreamOut_V_V_1_ack_in;
wire    xStreamOut_V_V_1_ack_out;
reg   [15:0] xStreamOut_V_V_1_payload_A;
reg   [15:0] xStreamOut_V_V_1_payload_B;
reg    xStreamOut_V_V_1_sel_rd;
reg    xStreamOut_V_V_1_sel_wr;
wire    xStreamOut_V_V_1_sel;
wire    xStreamOut_V_V_1_load_A;
wire    xStreamOut_V_V_1_load_B;
reg   [1:0] xStreamOut_V_V_1_state;
wire    xStreamOut_V_V_1_state_cmp_full;
reg   [15:0] yStreamOut_V_V_1_data_in;
reg   [15:0] yStreamOut_V_V_1_data_out;
reg    yStreamOut_V_V_1_vld_in;
wire    yStreamOut_V_V_1_vld_out;
wire    yStreamOut_V_V_1_ack_in;
wire    yStreamOut_V_V_1_ack_out;
reg   [15:0] yStreamOut_V_V_1_payload_A;
reg   [15:0] yStreamOut_V_V_1_payload_B;
reg    yStreamOut_V_V_1_sel_rd;
reg    yStreamOut_V_V_1_sel_wr;
wire    yStreamOut_V_V_1_sel;
wire    yStreamOut_V_V_1_load_A;
wire    yStreamOut_V_V_1_load_B;
reg   [1:0] yStreamOut_V_V_1_state;
wire    yStreamOut_V_V_1_state_cmp_full;
reg   [7:0] polStreamOut_V_V_1_data_in;
reg   [7:0] polStreamOut_V_V_1_data_out;
reg    polStreamOut_V_V_1_vld_in;
wire    polStreamOut_V_V_1_vld_out;
wire    polStreamOut_V_V_1_ack_in;
wire    polStreamOut_V_V_1_ack_out;
reg   [7:0] polStreamOut_V_V_1_payload_A;
reg   [7:0] polStreamOut_V_V_1_payload_B;
reg    polStreamOut_V_V_1_sel_rd;
reg    polStreamOut_V_V_1_sel_wr;
wire    polStreamOut_V_V_1_sel;
wire    polStreamOut_V_V_1_load_A;
wire    polStreamOut_V_V_1_load_B;
reg   [1:0] polStreamOut_V_V_1_state;
wire    polStreamOut_V_V_1_state_cmp_full;
reg   [63:0] tsStreamOut_V_V_1_data_in;
reg   [63:0] tsStreamOut_V_V_1_data_out;
reg    tsStreamOut_V_V_1_vld_in;
wire    tsStreamOut_V_V_1_vld_out;
wire    tsStreamOut_V_V_1_ack_in;
wire    tsStreamOut_V_V_1_ack_out;
reg   [63:0] tsStreamOut_V_V_1_payload_A;
reg   [63:0] tsStreamOut_V_V_1_payload_B;
reg    tsStreamOut_V_V_1_sel_rd;
reg    tsStreamOut_V_V_1_sel_wr;
wire    tsStreamOut_V_V_1_sel;
wire    tsStreamOut_V_V_1_load_A;
wire    tsStreamOut_V_V_1_load_B;
reg   [1:0] tsStreamOut_V_V_1_state;
wire    tsStreamOut_V_V_1_state_cmp_full;
reg   [23:0] custDataStreamOut_V_V_1_data_in;
reg   [23:0] custDataStreamOut_V_V_1_data_out;
reg    custDataStreamOut_V_V_1_vld_in;
wire    custDataStreamOut_V_V_1_vld_out;
wire    custDataStreamOut_V_V_1_ack_in;
wire    custDataStreamOut_V_V_1_ack_out;
reg   [23:0] custDataStreamOut_V_V_1_payload_A;
reg   [23:0] custDataStreamOut_V_V_1_payload_B;
reg    custDataStreamOut_V_V_1_sel_rd;
reg    custDataStreamOut_V_V_1_sel_wr;
wire    custDataStreamOut_V_V_1_sel;
wire    custDataStreamOut_V_V_1_load_A;
wire    custDataStreamOut_V_V_1_load_B;
reg   [1:0] custDataStreamOut_V_V_1_state;
wire    custDataStreamOut_V_V_1_state_cmp_full;
reg   [15:0] OFHistRadiusSum_V;
reg   [15:0] OFHistCntSum_V;
reg   [15:0] glAverageTargetValue;
reg   [15:0] areaEventThr;
reg    packetEventDataStream_V_V_blk_n;
wire   [0:0] select_V_read_read_fu_134_p2;
reg    xStreamOut_V_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
reg    yStreamOut_V_V_TDATA_blk_n;
reg    polStreamOut_V_V_TDATA_blk_n;
reg    tsStreamOut_V_V_TDATA_blk_n;
reg    custDataStreamOut_V_V_TDATA_blk_n;
reg    ap_block_state1;
reg    ap_block_state1_io;
wire   [15:0] x_V_fu_266_p1;
wire   [63:0] p_Result_s_fu_289_p5;
wire   [7:0] tmp_V_144_cast_fu_322_p1;
wire   [23:0] tmp_V_148_cast_fu_327_p1;
wire    grp_feedbackAndCombineOu_1_fu_181_ap_start;
wire    grp_feedbackAndCombineOu_1_fu_181_ap_done;
wire    grp_feedbackAndCombineOu_1_fu_181_ap_idle;
wire    grp_feedbackAndCombineOu_1_fu_181_ap_ready;
wire    grp_feedbackAndCombineOu_1_fu_181_packetEventDataStream_V_V_read;
wire    grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale0_V_V_read;
wire    grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale0_V_V_read;
wire    grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale1_V_V_read;
wire    grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale1_V_V_read;
wire    grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale2_V_V_read;
wire    grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale2_V_V_read;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TREADY;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TREADY;
wire   [7:0] grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TREADY;
wire   [63:0] grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TREADY;
wire   [23:0] grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TREADY;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_OFHistRadiusSum_V_o;
wire    grp_feedbackAndCombineOu_1_fu_181_OFHistRadiusSum_V_o_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_OFHistCntSum_V_o;
wire    grp_feedbackAndCombineOu_1_fu_181_OFHistCntSum_V_o_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_o;
wire    grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_o_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_areaEventThr_o;
wire    grp_feedbackAndCombineOu_1_fu_181_areaEventThr_o_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_glOFHistCntSum_V;
wire    grp_feedbackAndCombineOu_1_fu_181_glOFHistCntSum_V_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_glOFHistRadiusSum_V;
wire    grp_feedbackAndCombineOu_1_fu_181_glOFHistRadiusSum_V_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_areaEventThrBak;
wire    grp_feedbackAndCombineOu_1_fu_181_areaEventThrBak_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_1;
wire    grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_1_ap_vld;
wire    grp_feedbackWithoutOFHis_fu_229_ap_start;
wire    grp_feedbackWithoutOFHis_fu_229_ap_done;
wire    grp_feedbackWithoutOFHis_fu_229_ap_idle;
wire    grp_feedbackWithoutOFHis_fu_229_ap_ready;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_OFHistRadiusSum_V_o;
wire    grp_feedbackWithoutOFHis_fu_229_OFHistRadiusSum_V_o_ap_vld;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_OFHistCntSum_V_o;
wire    grp_feedbackWithoutOFHis_fu_229_OFHistCntSum_V_o_ap_vld;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_o;
wire    grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_o_ap_vld;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_areaEventThr_o;
wire    grp_feedbackWithoutOFHis_fu_229_areaEventThr_o_ap_vld;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_glOFHistCntSum_V;
wire    grp_feedbackWithoutOFHis_fu_229_glOFHistCntSum_V_ap_vld;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_glOFHistRadiusSum_V;
wire    grp_feedbackWithoutOFHis_fu_229_glOFHistRadiusSum_V_ap_vld;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_areaEventThrBak;
wire    grp_feedbackWithoutOFHis_fu_229_areaEventThrBak_ap_vld;
wire   [15:0] grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_1;
wire    grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_1_ap_vld;
reg    grp_feedbackAndCombineOu_1_fu_181_ap_start_reg;
reg    ap_block_state1_ignore_call0;
wire    ap_CS_fsm_state3;
reg    grp_feedbackWithoutOFHis_fu_229_ap_start_reg;
reg    ap_block_state1_ignore_call6;
reg    ap_block_state2_io;
wire   [62:0] p_Result_i_fu_279_p4;
wire   [10:0] tmp_cast_i_cast_cast_fu_302_p3;
wire   [0:0] pol_V_fu_271_p3;
wire   [16:0] p_Result_27_fu_310_p5;
wire    ap_CS_fsm_state4;
reg    ap_block_state4;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 xStreamOut_V_V_1_sel_rd = 1'b0;
#0 xStreamOut_V_V_1_sel_wr = 1'b0;
#0 xStreamOut_V_V_1_state = 2'd0;
#0 yStreamOut_V_V_1_sel_rd = 1'b0;
#0 yStreamOut_V_V_1_sel_wr = 1'b0;
#0 yStreamOut_V_V_1_state = 2'd0;
#0 polStreamOut_V_V_1_sel_rd = 1'b0;
#0 polStreamOut_V_V_1_sel_wr = 1'b0;
#0 polStreamOut_V_V_1_state = 2'd0;
#0 tsStreamOut_V_V_1_sel_rd = 1'b0;
#0 tsStreamOut_V_V_1_sel_wr = 1'b0;
#0 tsStreamOut_V_V_1_state = 2'd0;
#0 custDataStreamOut_V_V_1_sel_rd = 1'b0;
#0 custDataStreamOut_V_V_1_sel_wr = 1'b0;
#0 custDataStreamOut_V_V_1_state = 2'd0;
#0 OFHistRadiusSum_V = 16'd0;
#0 OFHistCntSum_V = 16'd0;
#0 glAverageTargetValue = 16'd30;
#0 areaEventThr = 16'd700;
#0 grp_feedbackAndCombineOu_1_fu_181_ap_start_reg = 1'b0;
#0 grp_feedbackWithoutOFHis_fu_229_ap_start_reg = 1'b0;
end

feedbackAndCombineOu_1 grp_feedbackAndCombineOu_1_fu_181(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_feedbackAndCombineOu_1_fu_181_ap_start),
    .ap_done(grp_feedbackAndCombineOu_1_fu_181_ap_done),
    .ap_idle(grp_feedbackAndCombineOu_1_fu_181_ap_idle),
    .ap_ready(grp_feedbackAndCombineOu_1_fu_181_ap_ready),
    .packetEventDataStream_V_V_dout(packetEventDataStream_V_V_dout),
    .packetEventDataStream_V_V_empty_n(packetEventDataStream_V_V_empty_n),
    .packetEventDataStream_V_V_read(grp_feedbackAndCombineOu_1_fu_181_packetEventDataStream_V_V_read),
    .miniSumStreamScale0_V_V_dout(miniSumStreamScale0_V_V_dout),
    .miniSumStreamScale0_V_V_empty_n(miniSumStreamScale0_V_V_empty_n),
    .miniSumStreamScale0_V_V_read(grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale0_V_V_read),
    .OFRetStreamScale0_V_V_dout(OFRetStreamScale0_V_V_dout),
    .OFRetStreamScale0_V_V_empty_n(OFRetStreamScale0_V_V_empty_n),
    .OFRetStreamScale0_V_V_read(grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale0_V_V_read),
    .miniSumStreamScale1_V_V_dout(miniSumStreamScale1_V_V_dout),
    .miniSumStreamScale1_V_V_empty_n(miniSumStreamScale1_V_V_empty_n),
    .miniSumStreamScale1_V_V_read(grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale1_V_V_read),
    .OFRetStreamScale1_V_V_dout(OFRetStreamScale1_V_V_dout),
    .OFRetStreamScale1_V_V_empty_n(OFRetStreamScale1_V_V_empty_n),
    .OFRetStreamScale1_V_V_read(grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale1_V_V_read),
    .miniSumStreamScale2_V_V_dout(miniSumStreamScale2_V_V_dout),
    .miniSumStreamScale2_V_V_empty_n(miniSumStreamScale2_V_V_empty_n),
    .miniSumStreamScale2_V_V_read(grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale2_V_V_read),
    .OFRetStreamScale2_V_V_dout(OFRetStreamScale2_V_V_dout),
    .OFRetStreamScale2_V_V_empty_n(OFRetStreamScale2_V_V_empty_n),
    .OFRetStreamScale2_V_V_read(grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale2_V_V_read),
    .xStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TDATA),
    .xStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TVALID),
    .xStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TREADY),
    .yStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TDATA),
    .yStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TVALID),
    .yStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TREADY),
    .polStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TDATA),
    .polStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TVALID),
    .polStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TREADY),
    .tsStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TDATA),
    .tsStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TVALID),
    .tsStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TREADY),
    .custDataStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TDATA),
    .custDataStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TVALID),
    .custDataStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TREADY),
    .p_read(p_read),
    .p_read1(p_read1),
    .OFHistRadiusSum_V_i(OFHistRadiusSum_V),
    .OFHistRadiusSum_V_o(grp_feedbackAndCombineOu_1_fu_181_OFHistRadiusSum_V_o),
    .OFHistRadiusSum_V_o_ap_vld(grp_feedbackAndCombineOu_1_fu_181_OFHistRadiusSum_V_o_ap_vld),
    .OFHistCntSum_V_i(OFHistCntSum_V),
    .OFHistCntSum_V_o(grp_feedbackAndCombineOu_1_fu_181_OFHistCntSum_V_o),
    .OFHistCntSum_V_o_ap_vld(grp_feedbackAndCombineOu_1_fu_181_OFHistCntSum_V_o_ap_vld),
    .glAverageTargetValue_i(glAverageTargetValue),
    .glAverageTargetValue_o(grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_o),
    .glAverageTargetValue_o_ap_vld(grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_o_ap_vld),
    .areaEventThr_i(areaEventThr),
    .areaEventThr_o(grp_feedbackAndCombineOu_1_fu_181_areaEventThr_o),
    .areaEventThr_o_ap_vld(grp_feedbackAndCombineOu_1_fu_181_areaEventThr_o_ap_vld),
    .glOFHistCntSum_V(grp_feedbackAndCombineOu_1_fu_181_glOFHistCntSum_V),
    .glOFHistCntSum_V_ap_vld(grp_feedbackAndCombineOu_1_fu_181_glOFHistCntSum_V_ap_vld),
    .glOFHistRadiusSum_V(grp_feedbackAndCombineOu_1_fu_181_glOFHistRadiusSum_V),
    .glOFHistRadiusSum_V_ap_vld(grp_feedbackAndCombineOu_1_fu_181_glOFHistRadiusSum_V_ap_vld),
    .areaEventThrBak(grp_feedbackAndCombineOu_1_fu_181_areaEventThrBak),
    .areaEventThrBak_ap_vld(grp_feedbackAndCombineOu_1_fu_181_areaEventThrBak_ap_vld),
    .glAverageTargetValue_1(grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_1),
    .glAverageTargetValue_1_ap_vld(grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_1_ap_vld)
);

feedbackWithoutOFHis grp_feedbackWithoutOFHis_fu_229(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_feedbackWithoutOFHis_fu_229_ap_start),
    .ap_done(grp_feedbackWithoutOFHis_fu_229_ap_done),
    .ap_idle(grp_feedbackWithoutOFHis_fu_229_ap_idle),
    .ap_ready(grp_feedbackWithoutOFHis_fu_229_ap_ready),
    .OFRet_V(16'd32639),
    .rotateFlg_V(p_read1),
    .p_read(p_read),
    .OFHistRadiusSum_V_i(OFHistRadiusSum_V),
    .OFHistRadiusSum_V_o(grp_feedbackWithoutOFHis_fu_229_OFHistRadiusSum_V_o),
    .OFHistRadiusSum_V_o_ap_vld(grp_feedbackWithoutOFHis_fu_229_OFHistRadiusSum_V_o_ap_vld),
    .OFHistCntSum_V_i(OFHistCntSum_V),
    .OFHistCntSum_V_o(grp_feedbackWithoutOFHis_fu_229_OFHistCntSum_V_o),
    .OFHistCntSum_V_o_ap_vld(grp_feedbackWithoutOFHis_fu_229_OFHistCntSum_V_o_ap_vld),
    .glAverageTargetValue_i(glAverageTargetValue),
    .glAverageTargetValue_o(grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_o),
    .glAverageTargetValue_o_ap_vld(grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_o_ap_vld),
    .areaEventThr_i(areaEventThr),
    .areaEventThr_o(grp_feedbackWithoutOFHis_fu_229_areaEventThr_o),
    .areaEventThr_o_ap_vld(grp_feedbackWithoutOFHis_fu_229_areaEventThr_o_ap_vld),
    .glOFHistCntSum_V(grp_feedbackWithoutOFHis_fu_229_glOFHistCntSum_V),
    .glOFHistCntSum_V_ap_vld(grp_feedbackWithoutOFHis_fu_229_glOFHistCntSum_V_ap_vld),
    .glOFHistRadiusSum_V(grp_feedbackWithoutOFHis_fu_229_glOFHistRadiusSum_V),
    .glOFHistRadiusSum_V_ap_vld(grp_feedbackWithoutOFHis_fu_229_glOFHistRadiusSum_V_ap_vld),
    .areaEventThrBak(grp_feedbackWithoutOFHis_fu_229_areaEventThrBak),
    .areaEventThrBak_ap_vld(grp_feedbackWithoutOFHis_fu_229_areaEventThrBak_ap_vld),
    .glAverageTargetValue_1(grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_1),
    .glAverageTargetValue_1_ap_vld(grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_1_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        custDataStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((custDataStreamOut_V_V_1_ack_out == 1'b1) & (custDataStreamOut_V_V_1_vld_out == 1'b1))) begin
            custDataStreamOut_V_V_1_sel_rd <= ~custDataStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        custDataStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((custDataStreamOut_V_V_1_ack_in == 1'b1) & (custDataStreamOut_V_V_1_vld_in == 1'b1))) begin
            custDataStreamOut_V_V_1_sel_wr <= ~custDataStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        custDataStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((custDataStreamOut_V_V_1_state == 2'd2) & (custDataStreamOut_V_V_1_vld_in == 1'b0)) | ((custDataStreamOut_V_V_1_state == 2'd3) & (custDataStreamOut_V_V_1_vld_in == 1'b0) & (custDataStreamOut_V_V_1_ack_out == 1'b1)))) begin
            custDataStreamOut_V_V_1_state <= 2'd2;
        end else if ((((custDataStreamOut_V_V_1_state == 2'd1) & (custDataStreamOut_V_V_1_ack_out == 1'b0)) | ((custDataStreamOut_V_V_1_state == 2'd3) & (custDataStreamOut_V_V_1_ack_out == 1'b0) & (custDataStreamOut_V_V_1_vld_in == 1'b1)))) begin
            custDataStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((custDataStreamOut_V_V_1_vld_in == 1'b0) & (custDataStreamOut_V_V_1_ack_out == 1'b1)) & ~((custDataStreamOut_V_V_1_ack_out == 1'b0) & (custDataStreamOut_V_V_1_vld_in == 1'b1)) & (custDataStreamOut_V_V_1_state == 2'd3)) | ((custDataStreamOut_V_V_1_state == 2'd1) & (custDataStreamOut_V_V_1_ack_out == 1'b1)) | ((custDataStreamOut_V_V_1_state == 2'd2) & (custDataStreamOut_V_V_1_vld_in == 1'b1)))) begin
            custDataStreamOut_V_V_1_state <= 2'd3;
        end else begin
            custDataStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_feedbackAndCombineOu_1_fu_181_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_feedbackAndCombineOu_1_fu_181_ap_start_reg <= 1'b1;
        end else if ((grp_feedbackAndCombineOu_1_fu_181_ap_ready == 1'b1)) begin
            grp_feedbackAndCombineOu_1_fu_181_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_feedbackWithoutOFHis_fu_229_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_feedbackWithoutOFHis_fu_229_ap_start_reg <= 1'b1;
        end else if ((grp_feedbackWithoutOFHis_fu_229_ap_ready == 1'b1)) begin
            grp_feedbackWithoutOFHis_fu_229_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        polStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((polStreamOut_V_V_1_ack_out == 1'b1) & (polStreamOut_V_V_1_vld_out == 1'b1))) begin
            polStreamOut_V_V_1_sel_rd <= ~polStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        polStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((polStreamOut_V_V_1_ack_in == 1'b1) & (polStreamOut_V_V_1_vld_in == 1'b1))) begin
            polStreamOut_V_V_1_sel_wr <= ~polStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        polStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((polStreamOut_V_V_1_state == 2'd2) & (polStreamOut_V_V_1_vld_in == 1'b0)) | ((polStreamOut_V_V_1_state == 2'd3) & (polStreamOut_V_V_1_vld_in == 1'b0) & (polStreamOut_V_V_1_ack_out == 1'b1)))) begin
            polStreamOut_V_V_1_state <= 2'd2;
        end else if ((((polStreamOut_V_V_1_state == 2'd1) & (polStreamOut_V_V_1_ack_out == 1'b0)) | ((polStreamOut_V_V_1_state == 2'd3) & (polStreamOut_V_V_1_ack_out == 1'b0) & (polStreamOut_V_V_1_vld_in == 1'b1)))) begin
            polStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((polStreamOut_V_V_1_vld_in == 1'b0) & (polStreamOut_V_V_1_ack_out == 1'b1)) & ~((polStreamOut_V_V_1_ack_out == 1'b0) & (polStreamOut_V_V_1_vld_in == 1'b1)) & (polStreamOut_V_V_1_state == 2'd3)) | ((polStreamOut_V_V_1_state == 2'd1) & (polStreamOut_V_V_1_ack_out == 1'b1)) | ((polStreamOut_V_V_1_state == 2'd2) & (polStreamOut_V_V_1_vld_in == 1'b1)))) begin
            polStreamOut_V_V_1_state <= 2'd3;
        end else begin
            polStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tsStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((tsStreamOut_V_V_1_ack_out == 1'b1) & (tsStreamOut_V_V_1_vld_out == 1'b1))) begin
            tsStreamOut_V_V_1_sel_rd <= ~tsStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tsStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((tsStreamOut_V_V_1_ack_in == 1'b1) & (tsStreamOut_V_V_1_vld_in == 1'b1))) begin
            tsStreamOut_V_V_1_sel_wr <= ~tsStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tsStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((tsStreamOut_V_V_1_state == 2'd2) & (tsStreamOut_V_V_1_vld_in == 1'b0)) | ((tsStreamOut_V_V_1_state == 2'd3) & (tsStreamOut_V_V_1_vld_in == 1'b0) & (tsStreamOut_V_V_1_ack_out == 1'b1)))) begin
            tsStreamOut_V_V_1_state <= 2'd2;
        end else if ((((tsStreamOut_V_V_1_state == 2'd1) & (tsStreamOut_V_V_1_ack_out == 1'b0)) | ((tsStreamOut_V_V_1_state == 2'd3) & (tsStreamOut_V_V_1_ack_out == 1'b0) & (tsStreamOut_V_V_1_vld_in == 1'b1)))) begin
            tsStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((tsStreamOut_V_V_1_vld_in == 1'b0) & (tsStreamOut_V_V_1_ack_out == 1'b1)) & ~((tsStreamOut_V_V_1_ack_out == 1'b0) & (tsStreamOut_V_V_1_vld_in == 1'b1)) & (tsStreamOut_V_V_1_state == 2'd3)) | ((tsStreamOut_V_V_1_state == 2'd1) & (tsStreamOut_V_V_1_ack_out == 1'b1)) | ((tsStreamOut_V_V_1_state == 2'd2) & (tsStreamOut_V_V_1_vld_in == 1'b1)))) begin
            tsStreamOut_V_V_1_state <= 2'd3;
        end else begin
            tsStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((xStreamOut_V_V_1_ack_out == 1'b1) & (xStreamOut_V_V_1_vld_out == 1'b1))) begin
            xStreamOut_V_V_1_sel_rd <= ~xStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((xStreamOut_V_V_1_ack_in == 1'b1) & (xStreamOut_V_V_1_vld_in == 1'b1))) begin
            xStreamOut_V_V_1_sel_wr <= ~xStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((xStreamOut_V_V_1_state == 2'd2) & (xStreamOut_V_V_1_vld_in == 1'b0)) | ((xStreamOut_V_V_1_state == 2'd3) & (xStreamOut_V_V_1_vld_in == 1'b0) & (xStreamOut_V_V_1_ack_out == 1'b1)))) begin
            xStreamOut_V_V_1_state <= 2'd2;
        end else if ((((xStreamOut_V_V_1_state == 2'd1) & (xStreamOut_V_V_1_ack_out == 1'b0)) | ((xStreamOut_V_V_1_state == 2'd3) & (xStreamOut_V_V_1_ack_out == 1'b0) & (xStreamOut_V_V_1_vld_in == 1'b1)))) begin
            xStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((xStreamOut_V_V_1_vld_in == 1'b0) & (xStreamOut_V_V_1_ack_out == 1'b1)) & ~((xStreamOut_V_V_1_ack_out == 1'b0) & (xStreamOut_V_V_1_vld_in == 1'b1)) & (xStreamOut_V_V_1_state == 2'd3)) | ((xStreamOut_V_V_1_state == 2'd1) & (xStreamOut_V_V_1_ack_out == 1'b1)) | ((xStreamOut_V_V_1_state == 2'd2) & (xStreamOut_V_V_1_vld_in == 1'b1)))) begin
            xStreamOut_V_V_1_state <= 2'd3;
        end else begin
            xStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((yStreamOut_V_V_1_ack_out == 1'b1) & (yStreamOut_V_V_1_vld_out == 1'b1))) begin
            yStreamOut_V_V_1_sel_rd <= ~yStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((yStreamOut_V_V_1_ack_in == 1'b1) & (yStreamOut_V_V_1_vld_in == 1'b1))) begin
            yStreamOut_V_V_1_sel_wr <= ~yStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((yStreamOut_V_V_1_state == 2'd2) & (yStreamOut_V_V_1_vld_in == 1'b0)) | ((yStreamOut_V_V_1_state == 2'd3) & (yStreamOut_V_V_1_vld_in == 1'b0) & (yStreamOut_V_V_1_ack_out == 1'b1)))) begin
            yStreamOut_V_V_1_state <= 2'd2;
        end else if ((((yStreamOut_V_V_1_state == 2'd1) & (yStreamOut_V_V_1_ack_out == 1'b0)) | ((yStreamOut_V_V_1_state == 2'd3) & (yStreamOut_V_V_1_ack_out == 1'b0) & (yStreamOut_V_V_1_vld_in == 1'b1)))) begin
            yStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((yStreamOut_V_V_1_vld_in == 1'b0) & (yStreamOut_V_V_1_ack_out == 1'b1)) & ~((yStreamOut_V_V_1_ack_out == 1'b0) & (yStreamOut_V_V_1_vld_in == 1'b1)) & (yStreamOut_V_V_1_state == 2'd3)) | ((yStreamOut_V_V_1_state == 2'd1) & (yStreamOut_V_V_1_ack_out == 1'b1)) | ((yStreamOut_V_V_1_state == 2'd2) & (yStreamOut_V_V_1_vld_in == 1'b1)))) begin
            yStreamOut_V_V_1_state <= 2'd3;
        end else begin
            yStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_feedbackWithoutOFHis_fu_229_OFHistCntSum_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        OFHistCntSum_V <= grp_feedbackWithoutOFHis_fu_229_OFHistCntSum_V_o;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_OFHistCntSum_V_o_ap_vld == 1'b1))) begin
        OFHistCntSum_V <= grp_feedbackAndCombineOu_1_fu_181_OFHistCntSum_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_feedbackWithoutOFHis_fu_229_OFHistRadiusSum_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        OFHistRadiusSum_V <= grp_feedbackWithoutOFHis_fu_229_OFHistRadiusSum_V_o;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_OFHistRadiusSum_V_o_ap_vld == 1'b1))) begin
        OFHistRadiusSum_V <= grp_feedbackAndCombineOu_1_fu_181_OFHistRadiusSum_V_o;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_feedbackWithoutOFHis_fu_229_areaEventThr_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        areaEventThr <= grp_feedbackWithoutOFHis_fu_229_areaEventThr_o;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_areaEventThr_o_ap_vld == 1'b1))) begin
        areaEventThr <= grp_feedbackAndCombineOu_1_fu_181_areaEventThr_o;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        glAverageTargetValue <= grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_o;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_o_ap_vld == 1'b1))) begin
        glAverageTargetValue <= grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_o;
    end
end

always @ (posedge ap_clk) begin
    if ((custDataStreamOut_V_V_1_load_A == 1'b1)) begin
        custDataStreamOut_V_V_1_payload_A <= custDataStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((custDataStreamOut_V_V_1_load_B == 1'b1)) begin
        custDataStreamOut_V_V_1_payload_B <= custDataStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((polStreamOut_V_V_1_load_A == 1'b1)) begin
        polStreamOut_V_V_1_payload_A <= polStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((polStreamOut_V_V_1_load_B == 1'b1)) begin
        polStreamOut_V_V_1_payload_B <= polStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((tsStreamOut_V_V_1_load_A == 1'b1)) begin
        tsStreamOut_V_V_1_payload_A <= tsStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((tsStreamOut_V_V_1_load_B == 1'b1)) begin
        tsStreamOut_V_V_1_payload_B <= tsStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((xStreamOut_V_V_1_load_A == 1'b1)) begin
        xStreamOut_V_V_1_payload_A <= xStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((xStreamOut_V_V_1_load_B == 1'b1)) begin
        xStreamOut_V_V_1_payload_B <= xStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((yStreamOut_V_V_1_load_A == 1'b1)) begin
        yStreamOut_V_V_1_payload_A <= yStreamOut_V_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((yStreamOut_V_V_1_load_B == 1'b1)) begin
        yStreamOut_V_V_1_payload_B <= yStreamOut_V_V_1_data_in;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        OFRetStreamScale0_V_V_read = grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale0_V_V_read;
    end else begin
        OFRetStreamScale0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        OFRetStreamScale1_V_V_read = grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale1_V_V_read;
    end else begin
        OFRetStreamScale1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        OFRetStreamScale2_V_V_read = grp_feedbackAndCombineOu_1_fu_181_OFRetStreamScale2_V_V_read;
    end else begin
        OFRetStreamScale2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((~((xStreamOut_V_V_1_ack_in == 1'b0) | (custDataStreamOut_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (custDataStreamOut_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_feedbackWithoutOFHis_fu_229_areaEventThrBak_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        areaEventThrBak = grp_feedbackWithoutOFHis_fu_229_areaEventThrBak;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_areaEventThrBak_ap_vld == 1'b1))) begin
        areaEventThrBak = grp_feedbackAndCombineOu_1_fu_181_areaEventThrBak;
    end else begin
        areaEventThrBak = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        areaEventThrBak_ap_vld = grp_feedbackWithoutOFHis_fu_229_areaEventThrBak_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        areaEventThrBak_ap_vld = grp_feedbackAndCombineOu_1_fu_181_areaEventThrBak_ap_vld;
    end else begin
        areaEventThrBak_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        custDataStreamOut_V_V_1_data_in = tmp_V_148_cast_fu_327_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TVALID == 1'b1))) begin
        custDataStreamOut_V_V_1_data_in = grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TDATA;
    end else begin
        custDataStreamOut_V_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((custDataStreamOut_V_V_1_sel == 1'b1)) begin
        custDataStreamOut_V_V_1_data_out = custDataStreamOut_V_V_1_payload_B;
    end else begin
        custDataStreamOut_V_V_1_data_out = custDataStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        custDataStreamOut_V_V_1_vld_in = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        custDataStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TVALID;
    end else begin
        custDataStreamOut_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        custDataStreamOut_V_V_TDATA_blk_n = custDataStreamOut_V_V_1_state[1'd1];
    end else begin
        custDataStreamOut_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_1_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        glAverageTargetValue_1 = grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_1_ap_vld == 1'b1))) begin
        glAverageTargetValue_1 = grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_1;
    end else begin
        glAverageTargetValue_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glAverageTargetValue_1_ap_vld = grp_feedbackWithoutOFHis_fu_229_glAverageTargetValue_1_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        glAverageTargetValue_1_ap_vld = grp_feedbackAndCombineOu_1_fu_181_glAverageTargetValue_1_ap_vld;
    end else begin
        glAverageTargetValue_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_feedbackWithoutOFHis_fu_229_glOFHistCntSum_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        glOFHistCntSum_V = grp_feedbackWithoutOFHis_fu_229_glOFHistCntSum_V;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_glOFHistCntSum_V_ap_vld == 1'b1))) begin
        glOFHistCntSum_V = grp_feedbackAndCombineOu_1_fu_181_glOFHistCntSum_V;
    end else begin
        glOFHistCntSum_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glOFHistCntSum_V_ap_vld = grp_feedbackWithoutOFHis_fu_229_glOFHistCntSum_V_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        glOFHistCntSum_V_ap_vld = grp_feedbackAndCombineOu_1_fu_181_glOFHistCntSum_V_ap_vld;
    end else begin
        glOFHistCntSum_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_feedbackWithoutOFHis_fu_229_glOFHistRadiusSum_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        glOFHistRadiusSum_V = grp_feedbackWithoutOFHis_fu_229_glOFHistRadiusSum_V;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_glOFHistRadiusSum_V_ap_vld == 1'b1))) begin
        glOFHistRadiusSum_V = grp_feedbackAndCombineOu_1_fu_181_glOFHistRadiusSum_V;
    end else begin
        glOFHistRadiusSum_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        glOFHistRadiusSum_V_ap_vld = grp_feedbackWithoutOFHis_fu_229_glOFHistRadiusSum_V_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        glOFHistRadiusSum_V_ap_vld = grp_feedbackAndCombineOu_1_fu_181_glOFHistRadiusSum_V_ap_vld;
    end else begin
        glOFHistRadiusSum_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        miniSumStreamScale0_V_V_read = grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale0_V_V_read;
    end else begin
        miniSumStreamScale0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        miniSumStreamScale1_V_V_read = grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale1_V_V_read;
    end else begin
        miniSumStreamScale1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        miniSumStreamScale2_V_V_read = grp_feedbackAndCombineOu_1_fu_181_miniSumStreamScale2_V_V_read;
    end else begin
        miniSumStreamScale2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        packetEventDataStream_V_V_blk_n = packetEventDataStream_V_V_empty_n;
    end else begin
        packetEventDataStream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        packetEventDataStream_V_V_read = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        packetEventDataStream_V_V_read = grp_feedbackAndCombineOu_1_fu_181_packetEventDataStream_V_V_read;
    end else begin
        packetEventDataStream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        polStreamOut_V_V_1_data_in = tmp_V_144_cast_fu_322_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TVALID == 1'b1))) begin
        polStreamOut_V_V_1_data_in = grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TDATA;
    end else begin
        polStreamOut_V_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((polStreamOut_V_V_1_sel == 1'b1)) begin
        polStreamOut_V_V_1_data_out = polStreamOut_V_V_1_payload_B;
    end else begin
        polStreamOut_V_V_1_data_out = polStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        polStreamOut_V_V_1_vld_in = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        polStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TVALID;
    end else begin
        polStreamOut_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        polStreamOut_V_V_TDATA_blk_n = polStreamOut_V_V_1_state[1'd1];
    end else begin
        polStreamOut_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tsStreamOut_V_V_1_data_in = p_Result_s_fu_289_p5;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TVALID == 1'b1))) begin
        tsStreamOut_V_V_1_data_in = grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TDATA;
    end else begin
        tsStreamOut_V_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((tsStreamOut_V_V_1_sel == 1'b1)) begin
        tsStreamOut_V_V_1_data_out = tsStreamOut_V_V_1_payload_B;
    end else begin
        tsStreamOut_V_V_1_data_out = tsStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        tsStreamOut_V_V_1_vld_in = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tsStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TVALID;
    end else begin
        tsStreamOut_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        tsStreamOut_V_V_TDATA_blk_n = tsStreamOut_V_V_1_state[1'd1];
    end else begin
        tsStreamOut_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        xStreamOut_V_V_1_data_in = x_V_fu_266_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TVALID == 1'b1))) begin
        xStreamOut_V_V_1_data_in = grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TDATA;
    end else begin
        xStreamOut_V_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((xStreamOut_V_V_1_sel == 1'b1)) begin
        xStreamOut_V_V_1_data_out = xStreamOut_V_V_1_payload_B;
    end else begin
        xStreamOut_V_V_1_data_out = xStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        xStreamOut_V_V_1_vld_in = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        xStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TVALID;
    end else begin
        xStreamOut_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        xStreamOut_V_V_TDATA_blk_n = xStreamOut_V_V_1_state[1'd1];
    end else begin
        xStreamOut_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        yStreamOut_V_V_1_data_in = {{packetEventDataStream_V_V_dout[31:16]}};
    end else if (((1'b1 == ap_CS_fsm_state3) & (grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TVALID == 1'b1))) begin
        yStreamOut_V_V_1_data_in = grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TDATA;
    end else begin
        yStreamOut_V_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((yStreamOut_V_V_1_sel == 1'b1)) begin
        yStreamOut_V_V_1_data_out = yStreamOut_V_V_1_payload_B;
    end else begin
        yStreamOut_V_V_1_data_out = yStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        yStreamOut_V_V_1_vld_in = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        yStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TVALID;
    end else begin
        yStreamOut_V_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        yStreamOut_V_V_TDATA_blk_n = yStreamOut_V_V_1_state[1'd1];
    end else begin
        yStreamOut_V_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V_read_read_fu_134_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((ap_start == 1'b0) | (1'b1 == ap_block_state1_io) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0))) & (select_V == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((grp_feedbackWithoutOFHis_fu_229_ap_done == 1'b0) | (1'b1 == ap_block_state2_io)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_feedbackAndCombineOu_1_fu_181_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (custDataStreamOut_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1_ignore_call0 = ((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1_ignore_call6 = ((ap_start == 1'b0) | ((select_V == 1'd0) & (packetEventDataStream_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1_io = (((select_V == 1'd0) & (custDataStreamOut_V_V_1_ack_in == 1'b0)) | ((select_V == 1'd0) & (tsStreamOut_V_V_1_ack_in == 1'b0)) | ((select_V == 1'd0) & (polStreamOut_V_V_1_ack_in == 1'b0)) | ((select_V == 1'd0) & (yStreamOut_V_V_1_ack_in == 1'b0)) | ((select_V == 1'd0) & (xStreamOut_V_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = ((xStreamOut_V_V_1_ack_in == 1'b0) | (custDataStreamOut_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((xStreamOut_V_V_1_ack_in == 1'b0) | (custDataStreamOut_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0));
end

assign custDataStreamOut_V_V_1_ack_in = custDataStreamOut_V_V_1_state[1'd1];

assign custDataStreamOut_V_V_1_ack_out = custDataStreamOut_V_V_TREADY;

assign custDataStreamOut_V_V_1_load_A = (~custDataStreamOut_V_V_1_sel_wr & custDataStreamOut_V_V_1_state_cmp_full);

assign custDataStreamOut_V_V_1_load_B = (custDataStreamOut_V_V_1_state_cmp_full & custDataStreamOut_V_V_1_sel_wr);

assign custDataStreamOut_V_V_1_sel = custDataStreamOut_V_V_1_sel_rd;

assign custDataStreamOut_V_V_1_state_cmp_full = ((custDataStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign custDataStreamOut_V_V_1_vld_out = custDataStreamOut_V_V_1_state[1'd0];

assign custDataStreamOut_V_V_TDATA = custDataStreamOut_V_V_1_data_out;

assign custDataStreamOut_V_V_TVALID = custDataStreamOut_V_V_1_state[1'd0];

assign grp_feedbackAndCombineOu_1_fu_181_ap_start = grp_feedbackAndCombineOu_1_fu_181_ap_start_reg;

assign grp_feedbackAndCombineOu_1_fu_181_custDataStreamOut_V_V_TREADY = custDataStreamOut_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_1_fu_181_polStreamOut_V_V_TREADY = polStreamOut_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_1_fu_181_tsStreamOut_V_V_TREADY = tsStreamOut_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_1_fu_181_xStreamOut_V_V_TREADY = xStreamOut_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_1_fu_181_yStreamOut_V_V_TREADY = yStreamOut_V_V_1_state[1'd1];

assign grp_feedbackWithoutOFHis_fu_229_ap_start = grp_feedbackWithoutOFHis_fu_229_ap_start_reg;

assign p_Result_27_fu_310_p5 = {{ap_const_lv17_0[16:11]}, {tmp_cast_i_cast_cast_fu_302_p3}};

assign p_Result_i_fu_279_p4 = {{packetEventDataStream_V_V_dout[95:33]}};

assign p_Result_s_fu_289_p5 = {{ap_const_lv64_0[63:63]}, {p_Result_i_fu_279_p4}};

assign polStreamOut_V_V_1_ack_in = polStreamOut_V_V_1_state[1'd1];

assign polStreamOut_V_V_1_ack_out = polStreamOut_V_V_TREADY;

assign polStreamOut_V_V_1_load_A = (polStreamOut_V_V_1_state_cmp_full & ~polStreamOut_V_V_1_sel_wr);

assign polStreamOut_V_V_1_load_B = (polStreamOut_V_V_1_state_cmp_full & polStreamOut_V_V_1_sel_wr);

assign polStreamOut_V_V_1_sel = polStreamOut_V_V_1_sel_rd;

assign polStreamOut_V_V_1_state_cmp_full = ((polStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign polStreamOut_V_V_1_vld_out = polStreamOut_V_V_1_state[1'd0];

assign polStreamOut_V_V_TDATA = polStreamOut_V_V_1_data_out;

assign polStreamOut_V_V_TVALID = polStreamOut_V_V_1_state[1'd0];

assign pol_V_fu_271_p3 = packetEventDataStream_V_V_dout[32'd32];

assign select_V_read_read_fu_134_p2 = select_V;

assign tmp_V_144_cast_fu_322_p1 = pol_V_fu_271_p3;

assign tmp_V_148_cast_fu_327_p1 = p_Result_27_fu_310_p5;

assign tmp_cast_i_cast_cast_fu_302_p3 = ((p_read1[0:0] === 1'b1) ? 11'd2046 : 11'd2047);

assign tsStreamOut_V_V_1_ack_in = tsStreamOut_V_V_1_state[1'd1];

assign tsStreamOut_V_V_1_ack_out = tsStreamOut_V_V_TREADY;

assign tsStreamOut_V_V_1_load_A = (tsStreamOut_V_V_1_state_cmp_full & ~tsStreamOut_V_V_1_sel_wr);

assign tsStreamOut_V_V_1_load_B = (tsStreamOut_V_V_1_state_cmp_full & tsStreamOut_V_V_1_sel_wr);

assign tsStreamOut_V_V_1_sel = tsStreamOut_V_V_1_sel_rd;

assign tsStreamOut_V_V_1_state_cmp_full = ((tsStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign tsStreamOut_V_V_1_vld_out = tsStreamOut_V_V_1_state[1'd0];

assign tsStreamOut_V_V_TDATA = tsStreamOut_V_V_1_data_out;

assign tsStreamOut_V_V_TVALID = tsStreamOut_V_V_1_state[1'd0];

assign xStreamOut_V_V_1_ack_in = xStreamOut_V_V_1_state[1'd1];

assign xStreamOut_V_V_1_ack_out = xStreamOut_V_V_TREADY;

assign xStreamOut_V_V_1_load_A = (xStreamOut_V_V_1_state_cmp_full & ~xStreamOut_V_V_1_sel_wr);

assign xStreamOut_V_V_1_load_B = (xStreamOut_V_V_1_state_cmp_full & xStreamOut_V_V_1_sel_wr);

assign xStreamOut_V_V_1_sel = xStreamOut_V_V_1_sel_rd;

assign xStreamOut_V_V_1_state_cmp_full = ((xStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign xStreamOut_V_V_1_vld_out = xStreamOut_V_V_1_state[1'd0];

assign xStreamOut_V_V_TDATA = xStreamOut_V_V_1_data_out;

assign xStreamOut_V_V_TVALID = xStreamOut_V_V_1_state[1'd0];

assign x_V_fu_266_p1 = packetEventDataStream_V_V_dout[15:0];

assign yStreamOut_V_V_1_ack_in = yStreamOut_V_V_1_state[1'd1];

assign yStreamOut_V_V_1_ack_out = yStreamOut_V_V_TREADY;

assign yStreamOut_V_V_1_load_A = (yStreamOut_V_V_1_state_cmp_full & ~yStreamOut_V_V_1_sel_wr);

assign yStreamOut_V_V_1_load_B = (yStreamOut_V_V_1_state_cmp_full & yStreamOut_V_V_1_sel_wr);

assign yStreamOut_V_V_1_sel = yStreamOut_V_V_1_sel_rd;

assign yStreamOut_V_V_1_state_cmp_full = ((yStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign yStreamOut_V_V_1_vld_out = yStreamOut_V_V_1_state[1'd0];

assign yStreamOut_V_V_TDATA = yStreamOut_V_V_1_data_out;

assign yStreamOut_V_V_TVALID = yStreamOut_V_V_1_state[1'd0];

endmodule //feedbackAndCombineOu

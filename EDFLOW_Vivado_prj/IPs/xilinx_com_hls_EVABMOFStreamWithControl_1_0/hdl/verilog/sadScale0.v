// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sadScale0 (
        ap_clk,
        ap_rst,
        refBlock_0_V_read,
        refBlock_1_V_read,
        refBlock_2_V_read,
        refBlock_3_V_read,
        refBlock_4_V_read,
        refBlock_5_V_read,
        refBlock_6_V_read,
        refBlock_7_V_read,
        refBlock_8_V_read,
        refBlock_9_V_read,
        refBlock_10_V_read,
        refBlock_11_V_read,
        refBlock_12_V_read,
        refBlock_13_V_read,
        refBlock_14_V_read,
        refBlock_15_V_read,
        refBlock_16_V_read,
        refBlock_17_V_read,
        refBlock_18_V_read,
        refBlock_19_V_read,
        refBlock_20_V_read,
        refBlock_21_V_read,
        refBlock_22_V_read,
        refBlock_23_V_read,
        refBlock_24_V_read,
        targetBlocks_0_V_re,
        targetBlocks_1_V_re,
        targetBlocks_2_V_re,
        targetBlocks_3_V_re,
        targetBlocks_4_V_re,
        targetBlocks_5_V_re,
        targetBlocks_6_V_re,
        targetBlocks_7_V_re,
        targetBlocks_8_V_re,
        targetBlocks_9_V_re,
        targetBlocks_10_V_r,
        targetBlocks_11_V_r,
        targetBlocks_12_V_r,
        targetBlocks_13_V_r,
        targetBlocks_14_V_r,
        targetBlocks_15_V_r,
        targetBlocks_16_V_r,
        targetBlocks_17_V_r,
        targetBlocks_18_V_r,
        targetBlocks_19_V_r,
        targetBlocks_20_V_r,
        targetBlocks_21_V_r,
        targetBlocks_22_V_r,
        targetBlocks_23_V_r,
        targetBlocks_24_V_r,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [3:0] refBlock_0_V_read;
input  [3:0] refBlock_1_V_read;
input  [3:0] refBlock_2_V_read;
input  [3:0] refBlock_3_V_read;
input  [3:0] refBlock_4_V_read;
input  [3:0] refBlock_5_V_read;
input  [3:0] refBlock_6_V_read;
input  [3:0] refBlock_7_V_read;
input  [3:0] refBlock_8_V_read;
input  [3:0] refBlock_9_V_read;
input  [3:0] refBlock_10_V_read;
input  [3:0] refBlock_11_V_read;
input  [3:0] refBlock_12_V_read;
input  [3:0] refBlock_13_V_read;
input  [3:0] refBlock_14_V_read;
input  [3:0] refBlock_15_V_read;
input  [3:0] refBlock_16_V_read;
input  [3:0] refBlock_17_V_read;
input  [3:0] refBlock_18_V_read;
input  [3:0] refBlock_19_V_read;
input  [3:0] refBlock_20_V_read;
input  [3:0] refBlock_21_V_read;
input  [3:0] refBlock_22_V_read;
input  [3:0] refBlock_23_V_read;
input  [3:0] refBlock_24_V_read;
input  [3:0] targetBlocks_0_V_re;
input  [3:0] targetBlocks_1_V_re;
input  [3:0] targetBlocks_2_V_re;
input  [3:0] targetBlocks_3_V_re;
input  [3:0] targetBlocks_4_V_re;
input  [3:0] targetBlocks_5_V_re;
input  [3:0] targetBlocks_6_V_re;
input  [3:0] targetBlocks_7_V_re;
input  [3:0] targetBlocks_8_V_re;
input  [3:0] targetBlocks_9_V_re;
input  [3:0] targetBlocks_10_V_r;
input  [3:0] targetBlocks_11_V_r;
input  [3:0] targetBlocks_12_V_r;
input  [3:0] targetBlocks_13_V_r;
input  [3:0] targetBlocks_14_V_r;
input  [3:0] targetBlocks_15_V_r;
input  [3:0] targetBlocks_16_V_r;
input  [3:0] targetBlocks_17_V_r;
input  [3:0] targetBlocks_18_V_r;
input  [3:0] targetBlocks_19_V_r;
input  [3:0] targetBlocks_20_V_r;
input  [3:0] targetBlocks_21_V_r;
input  [3:0] targetBlocks_22_V_r;
input  [3:0] targetBlocks_23_V_r;
input  [3:0] targetBlocks_24_V_r;
output  [8:0] ap_return;
input   ap_ce;

wire   [4:0] sum_0_V_fu_461_p2;
reg   [4:0] sum_0_V_reg_803;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] sum_1_V_fu_475_p2;
reg   [4:0] sum_1_V_reg_808;
wire   [4:0] sum_2_V_fu_489_p2;
reg   [4:0] sum_2_V_reg_813;
wire   [4:0] sum_3_V_fu_503_p2;
reg   [4:0] sum_3_V_reg_818;
wire   [4:0] sum_4_V_fu_517_p2;
reg   [4:0] sum_4_V_reg_823;
wire   [4:0] sum_5_V_fu_531_p2;
reg   [4:0] sum_5_V_reg_828;
wire   [4:0] sum_6_V_fu_545_p2;
reg   [4:0] sum_6_V_reg_833;
wire   [4:0] sum_7_V_fu_559_p2;
reg   [4:0] sum_7_V_reg_838;
wire   [4:0] sum_8_V_fu_573_p2;
reg   [4:0] sum_8_V_reg_843;
wire   [4:0] sum_9_V_fu_587_p2;
reg   [4:0] sum_9_V_reg_848;
wire   [4:0] sum_10_V_fu_601_p2;
reg   [4:0] sum_10_V_reg_853;
wire   [4:0] sum_11_V_fu_615_p2;
reg   [4:0] sum_11_V_reg_858;
wire   [4:0] sum_12_V_fu_629_p2;
reg   [4:0] sum_12_V_reg_863;
wire   [4:0] sum_13_V_fu_643_p2;
reg   [4:0] sum_13_V_reg_868;
wire   [4:0] sum_14_V_fu_657_p2;
reg   [4:0] sum_14_V_reg_873;
wire   [4:0] sum_15_V_fu_671_p2;
reg   [4:0] sum_15_V_reg_878;
wire   [4:0] sum_16_V_fu_685_p2;
reg   [4:0] sum_16_V_reg_883;
wire   [4:0] sum_17_V_fu_699_p2;
reg   [4:0] sum_17_V_reg_888;
wire   [4:0] sum_18_V_fu_713_p2;
reg   [4:0] sum_18_V_reg_893;
wire   [4:0] sum_19_V_fu_727_p2;
reg   [4:0] sum_19_V_reg_898;
wire   [4:0] sum_20_V_fu_741_p2;
reg   [4:0] sum_20_V_reg_903;
wire   [4:0] sum_21_V_fu_755_p2;
reg   [4:0] sum_21_V_reg_908;
wire   [4:0] sum_22_V_fu_769_p2;
reg   [4:0] sum_22_V_reg_913;
wire   [4:0] sum_23_V_fu_783_p2;
reg   [4:0] sum_23_V_reg_918;
wire   [4:0] sum_24_V_fu_797_p2;
reg   [4:0] sum_24_V_reg_923;
wire   [8:0] grp_sadSumScale0_fu_424_ap_return;
reg    grp_sadSumScale0_fu_424_ap_ce;
wire    ap_block_pp0_stage0;
wire   [4:0] sum_0_V_fu_461_p0;
wire   [4:0] sum_0_V_fu_461_p1;
wire   [4:0] sum_1_V_fu_475_p0;
wire   [4:0] sum_1_V_fu_475_p1;
wire   [4:0] sum_2_V_fu_489_p0;
wire   [4:0] sum_2_V_fu_489_p1;
wire   [4:0] sum_3_V_fu_503_p0;
wire   [4:0] sum_3_V_fu_503_p1;
wire   [4:0] sum_4_V_fu_517_p0;
wire   [4:0] sum_4_V_fu_517_p1;
wire   [4:0] sum_5_V_fu_531_p0;
wire   [4:0] sum_5_V_fu_531_p1;
wire   [4:0] sum_6_V_fu_545_p0;
wire   [4:0] sum_6_V_fu_545_p1;
wire   [4:0] sum_7_V_fu_559_p0;
wire   [4:0] sum_7_V_fu_559_p1;
wire   [4:0] sum_8_V_fu_573_p0;
wire   [4:0] sum_8_V_fu_573_p1;
wire   [4:0] sum_9_V_fu_587_p0;
wire   [4:0] sum_9_V_fu_587_p1;
wire   [4:0] sum_10_V_fu_601_p0;
wire   [4:0] sum_10_V_fu_601_p1;
wire   [4:0] sum_11_V_fu_615_p0;
wire   [4:0] sum_11_V_fu_615_p1;
wire   [4:0] sum_12_V_fu_629_p0;
wire   [4:0] sum_12_V_fu_629_p1;
wire   [4:0] sum_13_V_fu_643_p0;
wire   [4:0] sum_13_V_fu_643_p1;
wire   [4:0] sum_14_V_fu_657_p0;
wire   [4:0] sum_14_V_fu_657_p1;
wire   [4:0] sum_15_V_fu_671_p0;
wire   [4:0] sum_15_V_fu_671_p1;
wire   [4:0] sum_16_V_fu_685_p0;
wire   [4:0] sum_16_V_fu_685_p1;
wire   [4:0] sum_17_V_fu_699_p0;
wire   [4:0] sum_17_V_fu_699_p1;
wire   [4:0] sum_18_V_fu_713_p0;
wire   [4:0] sum_18_V_fu_713_p1;
wire   [4:0] sum_19_V_fu_727_p0;
wire   [4:0] sum_19_V_fu_727_p1;
wire   [4:0] sum_20_V_fu_741_p0;
wire   [4:0] sum_20_V_fu_741_p1;
wire   [4:0] sum_21_V_fu_755_p0;
wire   [4:0] sum_21_V_fu_755_p1;
wire   [4:0] sum_22_V_fu_769_p0;
wire   [4:0] sum_22_V_fu_769_p1;
wire   [4:0] sum_23_V_fu_783_p0;
wire   [4:0] sum_23_V_fu_783_p1;
wire   [4:0] sum_24_V_fu_797_p0;
wire   [4:0] sum_24_V_fu_797_p1;
reg   [3:0] refBlock_0_V_read_int_reg;
reg   [3:0] refBlock_1_V_read_int_reg;
reg   [3:0] refBlock_2_V_read_int_reg;
reg   [3:0] refBlock_3_V_read_int_reg;
reg   [3:0] refBlock_4_V_read_int_reg;
reg   [3:0] refBlock_5_V_read_int_reg;
reg   [3:0] refBlock_6_V_read_int_reg;
reg   [3:0] refBlock_7_V_read_int_reg;
reg   [3:0] refBlock_8_V_read_int_reg;
reg   [3:0] refBlock_9_V_read_int_reg;
reg   [3:0] refBlock_10_V_read_int_reg;
reg   [3:0] refBlock_11_V_read_int_reg;
reg   [3:0] refBlock_12_V_read_int_reg;
reg   [3:0] refBlock_13_V_read_int_reg;
reg   [3:0] refBlock_14_V_read_int_reg;
reg   [3:0] refBlock_15_V_read_int_reg;
reg   [3:0] refBlock_16_V_read_int_reg;
reg   [3:0] refBlock_17_V_read_int_reg;
reg   [3:0] refBlock_18_V_read_int_reg;
reg   [3:0] refBlock_19_V_read_int_reg;
reg   [3:0] refBlock_20_V_read_int_reg;
reg   [3:0] refBlock_21_V_read_int_reg;
reg   [3:0] refBlock_22_V_read_int_reg;
reg   [3:0] refBlock_23_V_read_int_reg;
reg   [3:0] refBlock_24_V_read_int_reg;
reg   [3:0] targetBlocks_0_V_re_int_reg;
reg   [3:0] targetBlocks_1_V_re_int_reg;
reg   [3:0] targetBlocks_2_V_re_int_reg;
reg   [3:0] targetBlocks_3_V_re_int_reg;
reg   [3:0] targetBlocks_4_V_re_int_reg;
reg   [3:0] targetBlocks_5_V_re_int_reg;
reg   [3:0] targetBlocks_6_V_re_int_reg;
reg   [3:0] targetBlocks_7_V_re_int_reg;
reg   [3:0] targetBlocks_8_V_re_int_reg;
reg   [3:0] targetBlocks_9_V_re_int_reg;
reg   [3:0] targetBlocks_10_V_r_int_reg;
reg   [3:0] targetBlocks_11_V_r_int_reg;
reg   [3:0] targetBlocks_12_V_r_int_reg;
reg   [3:0] targetBlocks_13_V_r_int_reg;
reg   [3:0] targetBlocks_14_V_r_int_reg;
reg   [3:0] targetBlocks_15_V_r_int_reg;
reg   [3:0] targetBlocks_16_V_r_int_reg;
reg   [3:0] targetBlocks_17_V_r_int_reg;
reg   [3:0] targetBlocks_18_V_r_int_reg;
reg   [3:0] targetBlocks_19_V_r_int_reg;
reg   [3:0] targetBlocks_20_V_r_int_reg;
reg   [3:0] targetBlocks_21_V_r_int_reg;
reg   [3:0] targetBlocks_22_V_r_int_reg;
reg   [3:0] targetBlocks_23_V_r_int_reg;
reg   [3:0] targetBlocks_24_V_r_int_reg;

sadSumScale0 grp_sadSumScale0_fu_424(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .sum_0_V_read(sum_0_V_reg_803),
    .sum_1_V_read(sum_1_V_reg_808),
    .sum_2_V_read(sum_2_V_reg_813),
    .sum_3_V_read(sum_3_V_reg_818),
    .sum_4_V_read(sum_4_V_reg_823),
    .sum_5_V_read(sum_5_V_reg_828),
    .sum_6_V_read(sum_6_V_reg_833),
    .sum_7_V_read(sum_7_V_reg_838),
    .sum_8_V_read(sum_8_V_reg_843),
    .sum_9_V_read(sum_9_V_reg_848),
    .sum_10_V_read(sum_10_V_reg_853),
    .sum_11_V_read(sum_11_V_reg_858),
    .sum_12_V_read(sum_12_V_reg_863),
    .sum_13_V_read(sum_13_V_reg_868),
    .sum_14_V_read(sum_14_V_reg_873),
    .sum_15_V_read(sum_15_V_reg_878),
    .sum_16_V_read(sum_16_V_reg_883),
    .sum_17_V_read(sum_17_V_reg_888),
    .sum_18_V_read(sum_18_V_reg_893),
    .sum_19_V_read(sum_19_V_reg_898),
    .sum_20_V_read(sum_20_V_reg_903),
    .sum_21_V_read(sum_21_V_reg_908),
    .sum_22_V_read(sum_22_V_reg_913),
    .sum_23_V_read(sum_23_V_reg_918),
    .sum_24_V_read(sum_24_V_reg_923),
    .ap_return(grp_sadSumScale0_fu_424_ap_return),
    .ap_ce(grp_sadSumScale0_fu_424_ap_ce)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U408(
    .din0(sum_0_V_fu_461_p0),
    .din1(sum_0_V_fu_461_p1),
    .dout(sum_0_V_fu_461_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U409(
    .din0(sum_1_V_fu_475_p0),
    .din1(sum_1_V_fu_475_p1),
    .dout(sum_1_V_fu_475_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U410(
    .din0(sum_2_V_fu_489_p0),
    .din1(sum_2_V_fu_489_p1),
    .dout(sum_2_V_fu_489_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U411(
    .din0(sum_3_V_fu_503_p0),
    .din1(sum_3_V_fu_503_p1),
    .dout(sum_3_V_fu_503_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U412(
    .din0(sum_4_V_fu_517_p0),
    .din1(sum_4_V_fu_517_p1),
    .dout(sum_4_V_fu_517_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U413(
    .din0(sum_5_V_fu_531_p0),
    .din1(sum_5_V_fu_531_p1),
    .dout(sum_5_V_fu_531_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U414(
    .din0(sum_6_V_fu_545_p0),
    .din1(sum_6_V_fu_545_p1),
    .dout(sum_6_V_fu_545_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U415(
    .din0(sum_7_V_fu_559_p0),
    .din1(sum_7_V_fu_559_p1),
    .dout(sum_7_V_fu_559_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U416(
    .din0(sum_8_V_fu_573_p0),
    .din1(sum_8_V_fu_573_p1),
    .dout(sum_8_V_fu_573_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U417(
    .din0(sum_9_V_fu_587_p0),
    .din1(sum_9_V_fu_587_p1),
    .dout(sum_9_V_fu_587_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U418(
    .din0(sum_10_V_fu_601_p0),
    .din1(sum_10_V_fu_601_p1),
    .dout(sum_10_V_fu_601_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U419(
    .din0(sum_11_V_fu_615_p0),
    .din1(sum_11_V_fu_615_p1),
    .dout(sum_11_V_fu_615_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U420(
    .din0(sum_12_V_fu_629_p0),
    .din1(sum_12_V_fu_629_p1),
    .dout(sum_12_V_fu_629_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U421(
    .din0(sum_13_V_fu_643_p0),
    .din1(sum_13_V_fu_643_p1),
    .dout(sum_13_V_fu_643_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U422(
    .din0(sum_14_V_fu_657_p0),
    .din1(sum_14_V_fu_657_p1),
    .dout(sum_14_V_fu_657_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U423(
    .din0(sum_15_V_fu_671_p0),
    .din1(sum_15_V_fu_671_p1),
    .dout(sum_15_V_fu_671_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U424(
    .din0(sum_16_V_fu_685_p0),
    .din1(sum_16_V_fu_685_p1),
    .dout(sum_16_V_fu_685_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U425(
    .din0(sum_17_V_fu_699_p0),
    .din1(sum_17_V_fu_699_p1),
    .dout(sum_17_V_fu_699_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U426(
    .din0(sum_18_V_fu_713_p0),
    .din1(sum_18_V_fu_713_p1),
    .dout(sum_18_V_fu_713_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U427(
    .din0(sum_19_V_fu_727_p0),
    .din1(sum_19_V_fu_727_p1),
    .dout(sum_19_V_fu_727_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U428(
    .din0(sum_20_V_fu_741_p0),
    .din1(sum_20_V_fu_741_p1),
    .dout(sum_20_V_fu_741_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U429(
    .din0(sum_21_V_fu_755_p0),
    .din1(sum_21_V_fu_755_p1),
    .dout(sum_21_V_fu_755_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U430(
    .din0(sum_22_V_fu_769_p0),
    .din1(sum_22_V_fu_769_p1),
    .dout(sum_22_V_fu_769_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U431(
    .din0(sum_23_V_fu_783_p0),
    .din1(sum_23_V_fu_783_p1),
    .dout(sum_23_V_fu_783_p2)
);

EVABMOFStreamWithMgi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
EVABMOFStreamWithMgi_U432(
    .din0(sum_24_V_fu_797_p0),
    .din1(sum_24_V_fu_797_p1),
    .dout(sum_24_V_fu_797_p2)
);

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        refBlock_0_V_read_int_reg <= refBlock_0_V_read;
        refBlock_10_V_read_int_reg <= refBlock_10_V_read;
        refBlock_11_V_read_int_reg <= refBlock_11_V_read;
        refBlock_12_V_read_int_reg <= refBlock_12_V_read;
        refBlock_13_V_read_int_reg <= refBlock_13_V_read;
        refBlock_14_V_read_int_reg <= refBlock_14_V_read;
        refBlock_15_V_read_int_reg <= refBlock_15_V_read;
        refBlock_16_V_read_int_reg <= refBlock_16_V_read;
        refBlock_17_V_read_int_reg <= refBlock_17_V_read;
        refBlock_18_V_read_int_reg <= refBlock_18_V_read;
        refBlock_19_V_read_int_reg <= refBlock_19_V_read;
        refBlock_1_V_read_int_reg <= refBlock_1_V_read;
        refBlock_20_V_read_int_reg <= refBlock_20_V_read;
        refBlock_21_V_read_int_reg <= refBlock_21_V_read;
        refBlock_22_V_read_int_reg <= refBlock_22_V_read;
        refBlock_23_V_read_int_reg <= refBlock_23_V_read;
        refBlock_24_V_read_int_reg <= refBlock_24_V_read;
        refBlock_2_V_read_int_reg <= refBlock_2_V_read;
        refBlock_3_V_read_int_reg <= refBlock_3_V_read;
        refBlock_4_V_read_int_reg <= refBlock_4_V_read;
        refBlock_5_V_read_int_reg <= refBlock_5_V_read;
        refBlock_6_V_read_int_reg <= refBlock_6_V_read;
        refBlock_7_V_read_int_reg <= refBlock_7_V_read;
        refBlock_8_V_read_int_reg <= refBlock_8_V_read;
        refBlock_9_V_read_int_reg <= refBlock_9_V_read;
        targetBlocks_0_V_re_int_reg <= targetBlocks_0_V_re;
        targetBlocks_10_V_r_int_reg <= targetBlocks_10_V_r;
        targetBlocks_11_V_r_int_reg <= targetBlocks_11_V_r;
        targetBlocks_12_V_r_int_reg <= targetBlocks_12_V_r;
        targetBlocks_13_V_r_int_reg <= targetBlocks_13_V_r;
        targetBlocks_14_V_r_int_reg <= targetBlocks_14_V_r;
        targetBlocks_15_V_r_int_reg <= targetBlocks_15_V_r;
        targetBlocks_16_V_r_int_reg <= targetBlocks_16_V_r;
        targetBlocks_17_V_r_int_reg <= targetBlocks_17_V_r;
        targetBlocks_18_V_r_int_reg <= targetBlocks_18_V_r;
        targetBlocks_19_V_r_int_reg <= targetBlocks_19_V_r;
        targetBlocks_1_V_re_int_reg <= targetBlocks_1_V_re;
        targetBlocks_20_V_r_int_reg <= targetBlocks_20_V_r;
        targetBlocks_21_V_r_int_reg <= targetBlocks_21_V_r;
        targetBlocks_22_V_r_int_reg <= targetBlocks_22_V_r;
        targetBlocks_23_V_r_int_reg <= targetBlocks_23_V_r;
        targetBlocks_24_V_r_int_reg <= targetBlocks_24_V_r;
        targetBlocks_2_V_re_int_reg <= targetBlocks_2_V_re;
        targetBlocks_3_V_re_int_reg <= targetBlocks_3_V_re;
        targetBlocks_4_V_re_int_reg <= targetBlocks_4_V_re;
        targetBlocks_5_V_re_int_reg <= targetBlocks_5_V_re;
        targetBlocks_6_V_re_int_reg <= targetBlocks_6_V_re;
        targetBlocks_7_V_re_int_reg <= targetBlocks_7_V_re;
        targetBlocks_8_V_re_int_reg <= targetBlocks_8_V_re;
        targetBlocks_9_V_re_int_reg <= targetBlocks_9_V_re;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        sum_0_V_reg_803 <= sum_0_V_fu_461_p2;
        sum_10_V_reg_853 <= sum_10_V_fu_601_p2;
        sum_11_V_reg_858 <= sum_11_V_fu_615_p2;
        sum_12_V_reg_863 <= sum_12_V_fu_629_p2;
        sum_13_V_reg_868 <= sum_13_V_fu_643_p2;
        sum_14_V_reg_873 <= sum_14_V_fu_657_p2;
        sum_15_V_reg_878 <= sum_15_V_fu_671_p2;
        sum_16_V_reg_883 <= sum_16_V_fu_685_p2;
        sum_17_V_reg_888 <= sum_17_V_fu_699_p2;
        sum_18_V_reg_893 <= sum_18_V_fu_713_p2;
        sum_19_V_reg_898 <= sum_19_V_fu_727_p2;
        sum_1_V_reg_808 <= sum_1_V_fu_475_p2;
        sum_20_V_reg_903 <= sum_20_V_fu_741_p2;
        sum_21_V_reg_908 <= sum_21_V_fu_755_p2;
        sum_22_V_reg_913 <= sum_22_V_fu_769_p2;
        sum_23_V_reg_918 <= sum_23_V_fu_783_p2;
        sum_24_V_reg_923 <= sum_24_V_fu_797_p2;
        sum_2_V_reg_813 <= sum_2_V_fu_489_p2;
        sum_3_V_reg_818 <= sum_3_V_fu_503_p2;
        sum_4_V_reg_823 <= sum_4_V_fu_517_p2;
        sum_5_V_reg_828 <= sum_5_V_fu_531_p2;
        sum_6_V_reg_833 <= sum_6_V_fu_545_p2;
        sum_7_V_reg_838 <= sum_7_V_fu_559_p2;
        sum_8_V_reg_843 <= sum_8_V_fu_573_p2;
        sum_9_V_reg_848 <= sum_9_V_fu_587_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        grp_sadSumScale0_fu_424_ap_ce = 1'b1;
    end else begin
        grp_sadSumScale0_fu_424_ap_ce = 1'b0;
    end
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_return = grp_sadSumScale0_fu_424_ap_return;

assign sum_0_V_fu_461_p0 = refBlock_0_V_read_int_reg;

assign sum_0_V_fu_461_p1 = targetBlocks_0_V_re_int_reg;

assign sum_10_V_fu_601_p0 = refBlock_10_V_read_int_reg;

assign sum_10_V_fu_601_p1 = targetBlocks_10_V_r_int_reg;

assign sum_11_V_fu_615_p0 = refBlock_11_V_read_int_reg;

assign sum_11_V_fu_615_p1 = targetBlocks_11_V_r_int_reg;

assign sum_12_V_fu_629_p0 = refBlock_12_V_read_int_reg;

assign sum_12_V_fu_629_p1 = targetBlocks_12_V_r_int_reg;

assign sum_13_V_fu_643_p0 = refBlock_13_V_read_int_reg;

assign sum_13_V_fu_643_p1 = targetBlocks_13_V_r_int_reg;

assign sum_14_V_fu_657_p0 = refBlock_14_V_read_int_reg;

assign sum_14_V_fu_657_p1 = targetBlocks_14_V_r_int_reg;

assign sum_15_V_fu_671_p0 = refBlock_15_V_read_int_reg;

assign sum_15_V_fu_671_p1 = targetBlocks_15_V_r_int_reg;

assign sum_16_V_fu_685_p0 = refBlock_16_V_read_int_reg;

assign sum_16_V_fu_685_p1 = targetBlocks_16_V_r_int_reg;

assign sum_17_V_fu_699_p0 = refBlock_17_V_read_int_reg;

assign sum_17_V_fu_699_p1 = targetBlocks_17_V_r_int_reg;

assign sum_18_V_fu_713_p0 = refBlock_18_V_read_int_reg;

assign sum_18_V_fu_713_p1 = targetBlocks_18_V_r_int_reg;

assign sum_19_V_fu_727_p0 = refBlock_19_V_read_int_reg;

assign sum_19_V_fu_727_p1 = targetBlocks_19_V_r_int_reg;

assign sum_1_V_fu_475_p0 = refBlock_1_V_read_int_reg;

assign sum_1_V_fu_475_p1 = targetBlocks_1_V_re_int_reg;

assign sum_20_V_fu_741_p0 = refBlock_20_V_read_int_reg;

assign sum_20_V_fu_741_p1 = targetBlocks_20_V_r_int_reg;

assign sum_21_V_fu_755_p0 = refBlock_21_V_read_int_reg;

assign sum_21_V_fu_755_p1 = targetBlocks_21_V_r_int_reg;

assign sum_22_V_fu_769_p0 = refBlock_22_V_read_int_reg;

assign sum_22_V_fu_769_p1 = targetBlocks_22_V_r_int_reg;

assign sum_23_V_fu_783_p0 = refBlock_23_V_read_int_reg;

assign sum_23_V_fu_783_p1 = targetBlocks_23_V_r_int_reg;

assign sum_24_V_fu_797_p0 = refBlock_24_V_read_int_reg;

assign sum_24_V_fu_797_p1 = targetBlocks_24_V_r_int_reg;

assign sum_2_V_fu_489_p0 = refBlock_2_V_read_int_reg;

assign sum_2_V_fu_489_p1 = targetBlocks_2_V_re_int_reg;

assign sum_3_V_fu_503_p0 = refBlock_3_V_read_int_reg;

assign sum_3_V_fu_503_p1 = targetBlocks_3_V_re_int_reg;

assign sum_4_V_fu_517_p0 = refBlock_4_V_read_int_reg;

assign sum_4_V_fu_517_p1 = targetBlocks_4_V_re_int_reg;

assign sum_5_V_fu_531_p0 = refBlock_5_V_read_int_reg;

assign sum_5_V_fu_531_p1 = targetBlocks_5_V_re_int_reg;

assign sum_6_V_fu_545_p0 = refBlock_6_V_read_int_reg;

assign sum_6_V_fu_545_p1 = targetBlocks_6_V_re_int_reg;

assign sum_7_V_fu_559_p0 = refBlock_7_V_read_int_reg;

assign sum_7_V_fu_559_p1 = targetBlocks_7_V_re_int_reg;

assign sum_8_V_fu_573_p0 = refBlock_8_V_read_int_reg;

assign sum_8_V_fu_573_p1 = targetBlocks_8_V_re_int_reg;

assign sum_9_V_fu_587_p0 = refBlock_9_V_read_int_reg;

assign sum_9_V_fu_587_p1 = targetBlocks_9_V_re_int_reg;

endmodule //sadScale0

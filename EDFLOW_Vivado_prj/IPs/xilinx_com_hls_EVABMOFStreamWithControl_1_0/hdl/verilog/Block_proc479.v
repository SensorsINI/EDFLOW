// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Block_proc479 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        select_V_dout,
        select_V_empty_n,
        select_V_read,
        pktEventDataStream_V_V_dout,
        pktEventDataStream_V_V_empty_n,
        pktEventDataStream_V_V_read,
        miniSumStreamScale0_V_V_dout,
        miniSumStreamScale0_V_V_empty_n,
        miniSumStreamScale0_V_V_read,
        OFRetStreamScale0_V_V_dout,
        OFRetStreamScale0_V_V_empty_n,
        OFRetStreamScale0_V_V_read,
        miniSumStreamScale1Copy_V_V_dout,
        miniSumStreamScale1Copy_V_V_empty_n,
        miniSumStreamScale1Copy_V_V_read,
        OFRetStreamScale1Copy_V_V_dout,
        OFRetStreamScale1Copy_V_V_empty_n,
        OFRetStreamScale1Copy_V_V_read,
        miniSumStreamScale2Copy_V_V_dout,
        miniSumStreamScale2Copy_V_V_empty_n,
        miniSumStreamScale2Copy_V_V_read,
        OFRetStreamScale2Copy_V_V_dout,
        OFRetStreamScale2Copy_V_V_empty_n,
        OFRetStreamScale2Copy_V_V_read,
        xStreamOut_V_V_TDATA,
        xStreamOut_V_V_TVALID,
        xStreamOut_V_V_TREADY,
        yStreamOut_V_V_TDATA,
        yStreamOut_V_V_TVALID,
        yStreamOut_V_V_TREADY,
        polStreamOut_V_V_TDATA,
        polStreamOut_V_V_TVALID,
        polStreamOut_V_V_TREADY,
        tsStreamOut_V_V_TDATA,
        tsStreamOut_V_V_TVALID,
        tsStreamOut_V_V_TREADY,
        pixelDataStream_V_V_TDATA,
        pixelDataStream_V_V_TVALID,
        pixelDataStream_V_V_TREADY,
        status_currentDeltaTSHW,
        status_currentDeltaTSHW_ap_vld,
        status_currentAreaCntThr,
        status_currentAreaCntThr_ap_vld,
        status_currentFeedbackAreaCntThr,
        status_currentFeedbackAreaCntThr_ap_vld,
        status_currentOFHistCntSum,
        status_currentOFHistCntSum_ap_vld,
        status_currentOFHistRadiusSum,
        status_currentOFHistRadiusSum_ap_vld,
        status_currentAverageTgtValue,
        status_currentAverageTgtValue_ap_vld,
        deltaTsHWBak_V_dout,
        deltaTsHWBak_V_empty_n,
        deltaTsHWBak_V_read,
        glConfig_V_dout,
        glConfig_V_empty_n,
        glConfig_V_read,
        glRotateFlg_V_dout,
        glRotateFlg_V_empty_n,
        glRotateFlg_V_read,
        glSFASTAreaCntThrBak_dout,
        glSFASTAreaCntThrBak_empty_n,
        glSFASTAreaCntThrBak_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] select_V_dout;
input   select_V_empty_n;
output   select_V_read;
input  [95:0] pktEventDataStream_V_V_dout;
input   pktEventDataStream_V_V_empty_n;
output   pktEventDataStream_V_V_read;
input  [14:0] miniSumStreamScale0_V_V_dout;
input   miniSumStreamScale0_V_V_empty_n;
output   miniSumStreamScale0_V_V_read;
input  [5:0] OFRetStreamScale0_V_V_dout;
input   OFRetStreamScale0_V_V_empty_n;
output   OFRetStreamScale0_V_V_read;
input  [14:0] miniSumStreamScale1Copy_V_V_dout;
input   miniSumStreamScale1Copy_V_V_empty_n;
output   miniSumStreamScale1Copy_V_V_read;
input  [5:0] OFRetStreamScale1Copy_V_V_dout;
input   OFRetStreamScale1Copy_V_V_empty_n;
output   OFRetStreamScale1Copy_V_V_read;
input  [14:0] miniSumStreamScale2Copy_V_V_dout;
input   miniSumStreamScale2Copy_V_V_empty_n;
output   miniSumStreamScale2Copy_V_V_read;
input  [5:0] OFRetStreamScale2Copy_V_V_dout;
input   OFRetStreamScale2Copy_V_V_empty_n;
output   OFRetStreamScale2Copy_V_V_read;
output  [15:0] xStreamOut_V_V_TDATA;
output   xStreamOut_V_V_TVALID;
input   xStreamOut_V_V_TREADY;
output  [15:0] yStreamOut_V_V_TDATA;
output   yStreamOut_V_V_TVALID;
input   yStreamOut_V_V_TREADY;
output  [7:0] polStreamOut_V_V_TDATA;
output   polStreamOut_V_V_TVALID;
input   polStreamOut_V_V_TREADY;
output  [63:0] tsStreamOut_V_V_TDATA;
output   tsStreamOut_V_V_TVALID;
input   tsStreamOut_V_V_TREADY;
output  [23:0] pixelDataStream_V_V_TDATA;
output   pixelDataStream_V_V_TVALID;
input   pixelDataStream_V_V_TREADY;
output  [31:0] status_currentDeltaTSHW;
output   status_currentDeltaTSHW_ap_vld;
output  [31:0] status_currentAreaCntThr;
output   status_currentAreaCntThr_ap_vld;
output  [31:0] status_currentFeedbackAreaCntThr;
output   status_currentFeedbackAreaCntThr_ap_vld;
output  [31:0] status_currentOFHistCntSum;
output   status_currentOFHistCntSum_ap_vld;
output  [31:0] status_currentOFHistRadiusSum;
output   status_currentOFHistRadiusSum_ap_vld;
output  [31:0] status_currentAverageTgtValue;
output   status_currentAverageTgtValue_ap_vld;
input  [8:0] deltaTsHWBak_V_dout;
input   deltaTsHWBak_V_empty_n;
output   deltaTsHWBak_V_read;
input  [31:0] glConfig_V_dout;
input   glConfig_V_empty_n;
output   glConfig_V_read;
input  [0:0] glRotateFlg_V_dout;
input   glRotateFlg_V_empty_n;
output   glRotateFlg_V_read;
input  [15:0] glSFASTAreaCntThrBak_dout;
input   glSFASTAreaCntThrBak_empty_n;
output   glSFASTAreaCntThrBak_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg select_V_read;
reg pktEventDataStream_V_V_read;
reg miniSumStreamScale0_V_V_read;
reg OFRetStreamScale0_V_V_read;
reg miniSumStreamScale1Copy_V_V_read;
reg OFRetStreamScale1Copy_V_V_read;
reg miniSumStreamScale2Copy_V_V_read;
reg OFRetStreamScale2Copy_V_V_read;
reg[31:0] status_currentDeltaTSHW;
reg status_currentDeltaTSHW_ap_vld;
reg[31:0] status_currentAreaCntThr;
reg status_currentAreaCntThr_ap_vld;
reg status_currentFeedbackAreaCntThr_ap_vld;
reg status_currentOFHistCntSum_ap_vld;
reg status_currentOFHistRadiusSum_ap_vld;
reg status_currentAverageTgtValue_ap_vld;
reg deltaTsHWBak_V_read;
reg glConfig_V_read;
reg glRotateFlg_V_read;
reg glSFASTAreaCntThrBak_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] xStreamOut_V_V_1_data_out;
wire    xStreamOut_V_V_1_vld_in;
wire    xStreamOut_V_V_1_vld_out;
wire    xStreamOut_V_V_1_ack_in;
wire    xStreamOut_V_V_1_ack_out;
reg   [15:0] xStreamOut_V_V_1_payload_A;
reg   [15:0] xStreamOut_V_V_1_payload_B;
reg    xStreamOut_V_V_1_sel_rd;
reg    xStreamOut_V_V_1_sel_wr;
wire    xStreamOut_V_V_1_sel;
wire    xStreamOut_V_V_1_load_A;
wire    xStreamOut_V_V_1_load_B;
reg   [1:0] xStreamOut_V_V_1_state;
wire    xStreamOut_V_V_1_state_cmp_full;
reg   [15:0] yStreamOut_V_V_1_data_out;
wire    yStreamOut_V_V_1_vld_in;
wire    yStreamOut_V_V_1_vld_out;
wire    yStreamOut_V_V_1_ack_in;
wire    yStreamOut_V_V_1_ack_out;
reg   [15:0] yStreamOut_V_V_1_payload_A;
reg   [15:0] yStreamOut_V_V_1_payload_B;
reg    yStreamOut_V_V_1_sel_rd;
reg    yStreamOut_V_V_1_sel_wr;
wire    yStreamOut_V_V_1_sel;
wire    yStreamOut_V_V_1_load_A;
wire    yStreamOut_V_V_1_load_B;
reg   [1:0] yStreamOut_V_V_1_state;
wire    yStreamOut_V_V_1_state_cmp_full;
reg   [7:0] polStreamOut_V_V_1_data_out;
wire    polStreamOut_V_V_1_vld_in;
wire    polStreamOut_V_V_1_vld_out;
wire    polStreamOut_V_V_1_ack_in;
wire    polStreamOut_V_V_1_ack_out;
reg   [7:0] polStreamOut_V_V_1_payload_A;
reg   [7:0] polStreamOut_V_V_1_payload_B;
reg    polStreamOut_V_V_1_sel_rd;
reg    polStreamOut_V_V_1_sel_wr;
wire    polStreamOut_V_V_1_sel;
wire    polStreamOut_V_V_1_load_A;
wire    polStreamOut_V_V_1_load_B;
reg   [1:0] polStreamOut_V_V_1_state;
wire    polStreamOut_V_V_1_state_cmp_full;
reg   [63:0] tsStreamOut_V_V_1_data_out;
wire    tsStreamOut_V_V_1_vld_in;
wire    tsStreamOut_V_V_1_vld_out;
wire    tsStreamOut_V_V_1_ack_in;
wire    tsStreamOut_V_V_1_ack_out;
reg   [63:0] tsStreamOut_V_V_1_payload_A;
reg   [63:0] tsStreamOut_V_V_1_payload_B;
reg    tsStreamOut_V_V_1_sel_rd;
reg    tsStreamOut_V_V_1_sel_wr;
wire    tsStreamOut_V_V_1_sel;
wire    tsStreamOut_V_V_1_load_A;
wire    tsStreamOut_V_V_1_load_B;
reg   [1:0] tsStreamOut_V_V_1_state;
wire    tsStreamOut_V_V_1_state_cmp_full;
reg   [23:0] pixelDataStream_V_V_1_data_out;
wire    pixelDataStream_V_V_1_vld_in;
wire    pixelDataStream_V_V_1_vld_out;
wire    pixelDataStream_V_V_1_ack_in;
wire    pixelDataStream_V_V_1_ack_out;
reg   [23:0] pixelDataStream_V_V_1_payload_A;
reg   [23:0] pixelDataStream_V_V_1_payload_B;
reg    pixelDataStream_V_V_1_sel_rd;
reg    pixelDataStream_V_V_1_sel_wr;
wire    pixelDataStream_V_V_1_sel;
wire    pixelDataStream_V_V_1_load_A;
wire    pixelDataStream_V_V_1_load_B;
reg   [1:0] pixelDataStream_V_V_1_state;
wire    pixelDataStream_V_V_1_state_cmp_full;
reg   [15:0] glOFHistCntSum_V;
reg   [15:0] glOFHistRadiusSum_V;
reg   [15:0] areaEventThrBak;
reg   [15:0] glAverageTargetValue_1;
reg    select_V_blk_n;
reg    deltaTsHWBak_V_blk_n;
reg    glConfig_V_blk_n;
reg    glRotateFlg_V_blk_n;
reg    glSFASTAreaCntThrBak_blk_n;
reg   [31:0] glConfig_V_read_reg_268;
reg    ap_block_state1;
reg   [0:0] glRotateFlg_V_read_reg_273;
reg   [0:0] select_V_read_reg_278;
wire    grp_feedbackAndCombineOu_fu_172_ap_start;
wire    grp_feedbackAndCombineOu_fu_172_ap_done;
wire    grp_feedbackAndCombineOu_fu_172_ap_idle;
wire    grp_feedbackAndCombineOu_fu_172_ap_ready;
wire    grp_feedbackAndCombineOu_fu_172_packetEventDataStream_V_V_read;
wire    grp_feedbackAndCombineOu_fu_172_miniSumStreamScale0_V_V_read;
wire    grp_feedbackAndCombineOu_fu_172_OFRetStreamScale0_V_V_read;
wire    grp_feedbackAndCombineOu_fu_172_miniSumStreamScale1_V_V_read;
wire    grp_feedbackAndCombineOu_fu_172_OFRetStreamScale1_V_V_read;
wire    grp_feedbackAndCombineOu_fu_172_miniSumStreamScale2_V_V_read;
wire    grp_feedbackAndCombineOu_fu_172_OFRetStreamScale2_V_V_read;
wire   [15:0] grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TREADY;
wire   [15:0] grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TREADY;
wire   [7:0] grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TREADY;
wire   [63:0] grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TREADY;
wire   [23:0] grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TDATA;
wire    grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TVALID;
wire    grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TREADY;
wire   [15:0] grp_feedbackAndCombineOu_fu_172_glOFHistCntSum_V;
wire    grp_feedbackAndCombineOu_fu_172_glOFHistCntSum_V_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_fu_172_glOFHistRadiusSum_V;
wire    grp_feedbackAndCombineOu_fu_172_glOFHistRadiusSum_V_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_fu_172_areaEventThrBak;
wire    grp_feedbackAndCombineOu_fu_172_areaEventThrBak_ap_vld;
wire   [15:0] grp_feedbackAndCombineOu_fu_172_glAverageTargetValue_1;
wire    grp_feedbackAndCombineOu_fu_172_glAverageTargetValue_1_ap_vld;
reg    grp_feedbackAndCombineOu_fu_172_ap_start_reg;
reg    ap_block_state1_ignore_call28;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [31:0] tmp_i_i_i_fu_222_p1;
reg   [31:0] status_currentDeltaTSHW_preg;
wire   [31:0] tmp_i_i_i_1668_fu_227_p1;
reg   [31:0] status_currentAreaCntThr_preg;
reg    ap_block_state3;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 xStreamOut_V_V_1_sel_rd = 1'b0;
#0 xStreamOut_V_V_1_sel_wr = 1'b0;
#0 xStreamOut_V_V_1_state = 2'd0;
#0 yStreamOut_V_V_1_sel_rd = 1'b0;
#0 yStreamOut_V_V_1_sel_wr = 1'b0;
#0 yStreamOut_V_V_1_state = 2'd0;
#0 polStreamOut_V_V_1_sel_rd = 1'b0;
#0 polStreamOut_V_V_1_sel_wr = 1'b0;
#0 polStreamOut_V_V_1_state = 2'd0;
#0 tsStreamOut_V_V_1_sel_rd = 1'b0;
#0 tsStreamOut_V_V_1_sel_wr = 1'b0;
#0 tsStreamOut_V_V_1_state = 2'd0;
#0 pixelDataStream_V_V_1_sel_rd = 1'b0;
#0 pixelDataStream_V_V_1_sel_wr = 1'b0;
#0 pixelDataStream_V_V_1_state = 2'd0;
#0 glOFHistCntSum_V = 16'd0;
#0 glOFHistRadiusSum_V = 16'd0;
#0 areaEventThrBak = 16'd700;
#0 glAverageTargetValue_1 = 16'd30;
#0 grp_feedbackAndCombineOu_fu_172_ap_start_reg = 1'b0;
#0 status_currentDeltaTSHW_preg = 32'd0;
#0 status_currentAreaCntThr_preg = 32'd0;
end

feedbackAndCombineOu grp_feedbackAndCombineOu_fu_172(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_feedbackAndCombineOu_fu_172_ap_start),
    .ap_done(grp_feedbackAndCombineOu_fu_172_ap_done),
    .ap_idle(grp_feedbackAndCombineOu_fu_172_ap_idle),
    .ap_ready(grp_feedbackAndCombineOu_fu_172_ap_ready),
    .select_V(select_V_read_reg_278),
    .packetEventDataStream_V_V_dout(pktEventDataStream_V_V_dout),
    .packetEventDataStream_V_V_empty_n(pktEventDataStream_V_V_empty_n),
    .packetEventDataStream_V_V_read(grp_feedbackAndCombineOu_fu_172_packetEventDataStream_V_V_read),
    .miniSumStreamScale0_V_V_dout(miniSumStreamScale0_V_V_dout),
    .miniSumStreamScale0_V_V_empty_n(miniSumStreamScale0_V_V_empty_n),
    .miniSumStreamScale0_V_V_read(grp_feedbackAndCombineOu_fu_172_miniSumStreamScale0_V_V_read),
    .OFRetStreamScale0_V_V_dout(OFRetStreamScale0_V_V_dout),
    .OFRetStreamScale0_V_V_empty_n(OFRetStreamScale0_V_V_empty_n),
    .OFRetStreamScale0_V_V_read(grp_feedbackAndCombineOu_fu_172_OFRetStreamScale0_V_V_read),
    .miniSumStreamScale1_V_V_dout(miniSumStreamScale1Copy_V_V_dout),
    .miniSumStreamScale1_V_V_empty_n(miniSumStreamScale1Copy_V_V_empty_n),
    .miniSumStreamScale1_V_V_read(grp_feedbackAndCombineOu_fu_172_miniSumStreamScale1_V_V_read),
    .OFRetStreamScale1_V_V_dout(OFRetStreamScale1Copy_V_V_dout),
    .OFRetStreamScale1_V_V_empty_n(OFRetStreamScale1Copy_V_V_empty_n),
    .OFRetStreamScale1_V_V_read(grp_feedbackAndCombineOu_fu_172_OFRetStreamScale1_V_V_read),
    .miniSumStreamScale2_V_V_dout(miniSumStreamScale2Copy_V_V_dout),
    .miniSumStreamScale2_V_V_empty_n(miniSumStreamScale2Copy_V_V_empty_n),
    .miniSumStreamScale2_V_V_read(grp_feedbackAndCombineOu_fu_172_miniSumStreamScale2_V_V_read),
    .OFRetStreamScale2_V_V_dout(OFRetStreamScale2Copy_V_V_dout),
    .OFRetStreamScale2_V_V_empty_n(OFRetStreamScale2Copy_V_V_empty_n),
    .OFRetStreamScale2_V_V_read(grp_feedbackAndCombineOu_fu_172_OFRetStreamScale2_V_V_read),
    .xStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TDATA),
    .xStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TVALID),
    .xStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TREADY),
    .yStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TDATA),
    .yStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TVALID),
    .yStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TREADY),
    .polStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TDATA),
    .polStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TVALID),
    .polStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TREADY),
    .tsStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TDATA),
    .tsStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TVALID),
    .tsStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TREADY),
    .custDataStreamOut_V_V_TDATA(grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TDATA),
    .custDataStreamOut_V_V_TVALID(grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TVALID),
    .custDataStreamOut_V_V_TREADY(grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TREADY),
    .p_read(glConfig_V_read_reg_268),
    .p_read1(glRotateFlg_V_read_reg_273),
    .glOFHistCntSum_V(grp_feedbackAndCombineOu_fu_172_glOFHistCntSum_V),
    .glOFHistCntSum_V_ap_vld(grp_feedbackAndCombineOu_fu_172_glOFHistCntSum_V_ap_vld),
    .glOFHistRadiusSum_V(grp_feedbackAndCombineOu_fu_172_glOFHistRadiusSum_V),
    .glOFHistRadiusSum_V_ap_vld(grp_feedbackAndCombineOu_fu_172_glOFHistRadiusSum_V_ap_vld),
    .areaEventThrBak(grp_feedbackAndCombineOu_fu_172_areaEventThrBak),
    .areaEventThrBak_ap_vld(grp_feedbackAndCombineOu_fu_172_areaEventThrBak_ap_vld),
    .glAverageTargetValue_1(grp_feedbackAndCombineOu_fu_172_glAverageTargetValue_1),
    .glAverageTargetValue_1_ap_vld(grp_feedbackAndCombineOu_fu_172_glAverageTargetValue_1_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_feedbackAndCombineOu_fu_172_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_feedbackAndCombineOu_fu_172_ap_start_reg <= 1'b1;
        end else if ((grp_feedbackAndCombineOu_fu_172_ap_ready == 1'b1)) begin
            grp_feedbackAndCombineOu_fu_172_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pixelDataStream_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((pixelDataStream_V_V_1_ack_out == 1'b1) & (pixelDataStream_V_V_1_vld_out == 1'b1))) begin
            pixelDataStream_V_V_1_sel_rd <= ~pixelDataStream_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pixelDataStream_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((pixelDataStream_V_V_1_ack_in == 1'b1) & (pixelDataStream_V_V_1_vld_in == 1'b1))) begin
            pixelDataStream_V_V_1_sel_wr <= ~pixelDataStream_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pixelDataStream_V_V_1_state <= 2'd0;
    end else begin
        if ((((pixelDataStream_V_V_1_state == 2'd2) & (pixelDataStream_V_V_1_vld_in == 1'b0)) | ((pixelDataStream_V_V_1_state == 2'd3) & (pixelDataStream_V_V_1_vld_in == 1'b0) & (pixelDataStream_V_V_1_ack_out == 1'b1)))) begin
            pixelDataStream_V_V_1_state <= 2'd2;
        end else if ((((pixelDataStream_V_V_1_state == 2'd1) & (pixelDataStream_V_V_1_ack_out == 1'b0)) | ((pixelDataStream_V_V_1_state == 2'd3) & (pixelDataStream_V_V_1_ack_out == 1'b0) & (pixelDataStream_V_V_1_vld_in == 1'b1)))) begin
            pixelDataStream_V_V_1_state <= 2'd1;
        end else if (((~((pixelDataStream_V_V_1_vld_in == 1'b0) & (pixelDataStream_V_V_1_ack_out == 1'b1)) & ~((pixelDataStream_V_V_1_ack_out == 1'b0) & (pixelDataStream_V_V_1_vld_in == 1'b1)) & (pixelDataStream_V_V_1_state == 2'd3)) | ((pixelDataStream_V_V_1_state == 2'd1) & (pixelDataStream_V_V_1_ack_out == 1'b1)) | ((pixelDataStream_V_V_1_state == 2'd2) & (pixelDataStream_V_V_1_vld_in == 1'b1)))) begin
            pixelDataStream_V_V_1_state <= 2'd3;
        end else begin
            pixelDataStream_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        polStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((polStreamOut_V_V_1_ack_out == 1'b1) & (polStreamOut_V_V_1_vld_out == 1'b1))) begin
            polStreamOut_V_V_1_sel_rd <= ~polStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        polStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((polStreamOut_V_V_1_ack_in == 1'b1) & (polStreamOut_V_V_1_vld_in == 1'b1))) begin
            polStreamOut_V_V_1_sel_wr <= ~polStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        polStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((polStreamOut_V_V_1_state == 2'd2) & (polStreamOut_V_V_1_vld_in == 1'b0)) | ((polStreamOut_V_V_1_state == 2'd3) & (polStreamOut_V_V_1_vld_in == 1'b0) & (polStreamOut_V_V_1_ack_out == 1'b1)))) begin
            polStreamOut_V_V_1_state <= 2'd2;
        end else if ((((polStreamOut_V_V_1_state == 2'd1) & (polStreamOut_V_V_1_ack_out == 1'b0)) | ((polStreamOut_V_V_1_state == 2'd3) & (polStreamOut_V_V_1_ack_out == 1'b0) & (polStreamOut_V_V_1_vld_in == 1'b1)))) begin
            polStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((polStreamOut_V_V_1_vld_in == 1'b0) & (polStreamOut_V_V_1_ack_out == 1'b1)) & ~((polStreamOut_V_V_1_ack_out == 1'b0) & (polStreamOut_V_V_1_vld_in == 1'b1)) & (polStreamOut_V_V_1_state == 2'd3)) | ((polStreamOut_V_V_1_state == 2'd1) & (polStreamOut_V_V_1_ack_out == 1'b1)) | ((polStreamOut_V_V_1_state == 2'd2) & (polStreamOut_V_V_1_vld_in == 1'b1)))) begin
            polStreamOut_V_V_1_state <= 2'd3;
        end else begin
            polStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                status_currentAreaCntThr_preg[0] <= 1'b0;
        status_currentAreaCntThr_preg[1] <= 1'b0;
        status_currentAreaCntThr_preg[2] <= 1'b0;
        status_currentAreaCntThr_preg[3] <= 1'b0;
        status_currentAreaCntThr_preg[4] <= 1'b0;
        status_currentAreaCntThr_preg[5] <= 1'b0;
        status_currentAreaCntThr_preg[6] <= 1'b0;
        status_currentAreaCntThr_preg[7] <= 1'b0;
        status_currentAreaCntThr_preg[8] <= 1'b0;
        status_currentAreaCntThr_preg[9] <= 1'b0;
        status_currentAreaCntThr_preg[10] <= 1'b0;
        status_currentAreaCntThr_preg[11] <= 1'b0;
        status_currentAreaCntThr_preg[12] <= 1'b0;
        status_currentAreaCntThr_preg[13] <= 1'b0;
        status_currentAreaCntThr_preg[14] <= 1'b0;
        status_currentAreaCntThr_preg[15] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        status_currentAreaCntThr_preg[15 : 0] <= tmp_i_i_i_1668_fu_227_p1[15 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                status_currentDeltaTSHW_preg[0] <= 1'b0;
        status_currentDeltaTSHW_preg[1] <= 1'b0;
        status_currentDeltaTSHW_preg[2] <= 1'b0;
        status_currentDeltaTSHW_preg[3] <= 1'b0;
        status_currentDeltaTSHW_preg[4] <= 1'b0;
        status_currentDeltaTSHW_preg[5] <= 1'b0;
        status_currentDeltaTSHW_preg[6] <= 1'b0;
        status_currentDeltaTSHW_preg[7] <= 1'b0;
        status_currentDeltaTSHW_preg[8] <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                        status_currentDeltaTSHW_preg[8 : 0] <= tmp_i_i_i_fu_222_p1[8 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tsStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((tsStreamOut_V_V_1_ack_out == 1'b1) & (tsStreamOut_V_V_1_vld_out == 1'b1))) begin
            tsStreamOut_V_V_1_sel_rd <= ~tsStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tsStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((tsStreamOut_V_V_1_ack_in == 1'b1) & (tsStreamOut_V_V_1_vld_in == 1'b1))) begin
            tsStreamOut_V_V_1_sel_wr <= ~tsStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        tsStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((tsStreamOut_V_V_1_state == 2'd2) & (tsStreamOut_V_V_1_vld_in == 1'b0)) | ((tsStreamOut_V_V_1_state == 2'd3) & (tsStreamOut_V_V_1_vld_in == 1'b0) & (tsStreamOut_V_V_1_ack_out == 1'b1)))) begin
            tsStreamOut_V_V_1_state <= 2'd2;
        end else if ((((tsStreamOut_V_V_1_state == 2'd1) & (tsStreamOut_V_V_1_ack_out == 1'b0)) | ((tsStreamOut_V_V_1_state == 2'd3) & (tsStreamOut_V_V_1_ack_out == 1'b0) & (tsStreamOut_V_V_1_vld_in == 1'b1)))) begin
            tsStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((tsStreamOut_V_V_1_vld_in == 1'b0) & (tsStreamOut_V_V_1_ack_out == 1'b1)) & ~((tsStreamOut_V_V_1_ack_out == 1'b0) & (tsStreamOut_V_V_1_vld_in == 1'b1)) & (tsStreamOut_V_V_1_state == 2'd3)) | ((tsStreamOut_V_V_1_state == 2'd1) & (tsStreamOut_V_V_1_ack_out == 1'b1)) | ((tsStreamOut_V_V_1_state == 2'd2) & (tsStreamOut_V_V_1_vld_in == 1'b1)))) begin
            tsStreamOut_V_V_1_state <= 2'd3;
        end else begin
            tsStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((xStreamOut_V_V_1_ack_out == 1'b1) & (xStreamOut_V_V_1_vld_out == 1'b1))) begin
            xStreamOut_V_V_1_sel_rd <= ~xStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((xStreamOut_V_V_1_ack_in == 1'b1) & (xStreamOut_V_V_1_vld_in == 1'b1))) begin
            xStreamOut_V_V_1_sel_wr <= ~xStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        xStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((xStreamOut_V_V_1_state == 2'd2) & (xStreamOut_V_V_1_vld_in == 1'b0)) | ((xStreamOut_V_V_1_state == 2'd3) & (xStreamOut_V_V_1_vld_in == 1'b0) & (xStreamOut_V_V_1_ack_out == 1'b1)))) begin
            xStreamOut_V_V_1_state <= 2'd2;
        end else if ((((xStreamOut_V_V_1_state == 2'd1) & (xStreamOut_V_V_1_ack_out == 1'b0)) | ((xStreamOut_V_V_1_state == 2'd3) & (xStreamOut_V_V_1_ack_out == 1'b0) & (xStreamOut_V_V_1_vld_in == 1'b1)))) begin
            xStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((xStreamOut_V_V_1_ack_out == 1'b0) & (xStreamOut_V_V_1_vld_in == 1'b1)) & ~((xStreamOut_V_V_1_vld_in == 1'b0) & (xStreamOut_V_V_1_ack_out == 1'b1)) & (xStreamOut_V_V_1_state == 2'd3)) | ((xStreamOut_V_V_1_state == 2'd1) & (xStreamOut_V_V_1_ack_out == 1'b1)) | ((xStreamOut_V_V_1_state == 2'd2) & (xStreamOut_V_V_1_vld_in == 1'b1)))) begin
            xStreamOut_V_V_1_state <= 2'd3;
        end else begin
            xStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yStreamOut_V_V_1_sel_rd <= 1'b0;
    end else begin
        if (((yStreamOut_V_V_1_ack_out == 1'b1) & (yStreamOut_V_V_1_vld_out == 1'b1))) begin
            yStreamOut_V_V_1_sel_rd <= ~yStreamOut_V_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yStreamOut_V_V_1_sel_wr <= 1'b0;
    end else begin
        if (((yStreamOut_V_V_1_ack_in == 1'b1) & (yStreamOut_V_V_1_vld_in == 1'b1))) begin
            yStreamOut_V_V_1_sel_wr <= ~yStreamOut_V_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        yStreamOut_V_V_1_state <= 2'd0;
    end else begin
        if ((((yStreamOut_V_V_1_state == 2'd2) & (yStreamOut_V_V_1_vld_in == 1'b0)) | ((yStreamOut_V_V_1_state == 2'd3) & (yStreamOut_V_V_1_vld_in == 1'b0) & (yStreamOut_V_V_1_ack_out == 1'b1)))) begin
            yStreamOut_V_V_1_state <= 2'd2;
        end else if ((((yStreamOut_V_V_1_state == 2'd1) & (yStreamOut_V_V_1_ack_out == 1'b0)) | ((yStreamOut_V_V_1_state == 2'd3) & (yStreamOut_V_V_1_ack_out == 1'b0) & (yStreamOut_V_V_1_vld_in == 1'b1)))) begin
            yStreamOut_V_V_1_state <= 2'd1;
        end else if (((~((yStreamOut_V_V_1_vld_in == 1'b0) & (yStreamOut_V_V_1_ack_out == 1'b1)) & ~((yStreamOut_V_V_1_ack_out == 1'b0) & (yStreamOut_V_V_1_vld_in == 1'b1)) & (yStreamOut_V_V_1_state == 2'd3)) | ((yStreamOut_V_V_1_state == 2'd1) & (yStreamOut_V_V_1_ack_out == 1'b1)) | ((yStreamOut_V_V_1_state == 2'd2) & (yStreamOut_V_V_1_vld_in == 1'b1)))) begin
            yStreamOut_V_V_1_state <= 2'd3;
        end else begin
            yStreamOut_V_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_feedbackAndCombineOu_fu_172_areaEventThrBak_ap_vld == 1'b1))) begin
        areaEventThrBak <= grp_feedbackAndCombineOu_fu_172_areaEventThrBak;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_feedbackAndCombineOu_fu_172_glAverageTargetValue_1_ap_vld == 1'b1))) begin
        glAverageTargetValue_1 <= grp_feedbackAndCombineOu_fu_172_glAverageTargetValue_1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        glConfig_V_read_reg_268 <= glConfig_V_dout;
        glRotateFlg_V_read_reg_273 <= glRotateFlg_V_dout;
        select_V_read_reg_278 <= select_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_feedbackAndCombineOu_fu_172_glOFHistCntSum_V_ap_vld == 1'b1))) begin
        glOFHistCntSum_V <= grp_feedbackAndCombineOu_fu_172_glOFHistCntSum_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_feedbackAndCombineOu_fu_172_glOFHistRadiusSum_V_ap_vld == 1'b1))) begin
        glOFHistRadiusSum_V <= grp_feedbackAndCombineOu_fu_172_glOFHistRadiusSum_V;
    end
end

always @ (posedge ap_clk) begin
    if ((pixelDataStream_V_V_1_load_A == 1'b1)) begin
        pixelDataStream_V_V_1_payload_A <= grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((pixelDataStream_V_V_1_load_B == 1'b1)) begin
        pixelDataStream_V_V_1_payload_B <= grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((polStreamOut_V_V_1_load_A == 1'b1)) begin
        polStreamOut_V_V_1_payload_A <= grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((polStreamOut_V_V_1_load_B == 1'b1)) begin
        polStreamOut_V_V_1_payload_B <= grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((tsStreamOut_V_V_1_load_A == 1'b1)) begin
        tsStreamOut_V_V_1_payload_A <= grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((tsStreamOut_V_V_1_load_B == 1'b1)) begin
        tsStreamOut_V_V_1_payload_B <= grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((xStreamOut_V_V_1_load_A == 1'b1)) begin
        xStreamOut_V_V_1_payload_A <= grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((xStreamOut_V_V_1_load_B == 1'b1)) begin
        xStreamOut_V_V_1_payload_B <= grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((yStreamOut_V_V_1_load_A == 1'b1)) begin
        yStreamOut_V_V_1_payload_A <= grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((yStreamOut_V_V_1_load_B == 1'b1)) begin
        yStreamOut_V_V_1_payload_B <= grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TDATA;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        OFRetStreamScale0_V_V_read = grp_feedbackAndCombineOu_fu_172_OFRetStreamScale0_V_V_read;
    end else begin
        OFRetStreamScale0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        OFRetStreamScale1Copy_V_V_read = grp_feedbackAndCombineOu_fu_172_OFRetStreamScale1_V_V_read;
    end else begin
        OFRetStreamScale1Copy_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        OFRetStreamScale2Copy_V_V_read = grp_feedbackAndCombineOu_fu_172_OFRetStreamScale2_V_V_read;
    end else begin
        OFRetStreamScale2Copy_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        deltaTsHWBak_V_blk_n = deltaTsHWBak_V_empty_n;
    end else begin
        deltaTsHWBak_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        deltaTsHWBak_V_read = 1'b1;
    end else begin
        deltaTsHWBak_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        glConfig_V_blk_n = glConfig_V_empty_n;
    end else begin
        glConfig_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        glConfig_V_read = 1'b1;
    end else begin
        glConfig_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        glRotateFlg_V_blk_n = glRotateFlg_V_empty_n;
    end else begin
        glRotateFlg_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        glRotateFlg_V_read = 1'b1;
    end else begin
        glRotateFlg_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        glSFASTAreaCntThrBak_blk_n = glSFASTAreaCntThrBak_empty_n;
    end else begin
        glSFASTAreaCntThrBak_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        glSFASTAreaCntThrBak_read = 1'b1;
    end else begin
        glSFASTAreaCntThrBak_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        miniSumStreamScale0_V_V_read = grp_feedbackAndCombineOu_fu_172_miniSumStreamScale0_V_V_read;
    end else begin
        miniSumStreamScale0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        miniSumStreamScale1Copy_V_V_read = grp_feedbackAndCombineOu_fu_172_miniSumStreamScale1_V_V_read;
    end else begin
        miniSumStreamScale1Copy_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        miniSumStreamScale2Copy_V_V_read = grp_feedbackAndCombineOu_fu_172_miniSumStreamScale2_V_V_read;
    end else begin
        miniSumStreamScale2Copy_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((pixelDataStream_V_V_1_sel == 1'b1)) begin
        pixelDataStream_V_V_1_data_out = pixelDataStream_V_V_1_payload_B;
    end else begin
        pixelDataStream_V_V_1_data_out = pixelDataStream_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        pktEventDataStream_V_V_read = grp_feedbackAndCombineOu_fu_172_packetEventDataStream_V_V_read;
    end else begin
        pktEventDataStream_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((polStreamOut_V_V_1_sel == 1'b1)) begin
        polStreamOut_V_V_1_data_out = polStreamOut_V_V_1_payload_B;
    end else begin
        polStreamOut_V_V_1_data_out = polStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        select_V_blk_n = select_V_empty_n;
    end else begin
        select_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        select_V_read = 1'b1;
    end else begin
        select_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        status_currentAreaCntThr = tmp_i_i_i_1668_fu_227_p1;
    end else begin
        status_currentAreaCntThr = status_currentAreaCntThr_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        status_currentAreaCntThr_ap_vld = 1'b1;
    end else begin
        status_currentAreaCntThr_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        status_currentAverageTgtValue_ap_vld = 1'b1;
    end else begin
        status_currentAverageTgtValue_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        status_currentDeltaTSHW = tmp_i_i_i_fu_222_p1;
    end else begin
        status_currentDeltaTSHW = status_currentDeltaTSHW_preg;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        status_currentDeltaTSHW_ap_vld = 1'b1;
    end else begin
        status_currentDeltaTSHW_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        status_currentFeedbackAreaCntThr_ap_vld = 1'b1;
    end else begin
        status_currentFeedbackAreaCntThr_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        status_currentOFHistCntSum_ap_vld = 1'b1;
    end else begin
        status_currentOFHistCntSum_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        status_currentOFHistRadiusSum_ap_vld = 1'b1;
    end else begin
        status_currentOFHistRadiusSum_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((tsStreamOut_V_V_1_sel == 1'b1)) begin
        tsStreamOut_V_V_1_data_out = tsStreamOut_V_V_1_payload_B;
    end else begin
        tsStreamOut_V_V_1_data_out = tsStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((xStreamOut_V_V_1_sel == 1'b1)) begin
        xStreamOut_V_V_1_data_out = xStreamOut_V_V_1_payload_B;
    end else begin
        xStreamOut_V_V_1_data_out = xStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    if ((yStreamOut_V_V_1_sel == 1'b1)) begin
        yStreamOut_V_V_1_data_out = yStreamOut_V_V_1_payload_B;
    end else begin
        yStreamOut_V_V_1_data_out = yStreamOut_V_V_1_payload_A;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_feedbackAndCombineOu_fu_172_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call28 = ((ap_start == 1'b0) | (glSFASTAreaCntThrBak_empty_n == 1'b0) | (glRotateFlg_V_empty_n == 1'b0) | (glConfig_V_empty_n == 1'b0) | (deltaTsHWBak_V_empty_n == 1'b0) | (select_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((xStreamOut_V_V_1_ack_in == 1'b0) | (pixelDataStream_V_V_1_ack_in == 1'b0) | (tsStreamOut_V_V_1_ack_in == 1'b0) | (polStreamOut_V_V_1_ack_in == 1'b0) | (yStreamOut_V_V_1_ack_in == 1'b0));
end

assign grp_feedbackAndCombineOu_fu_172_ap_start = grp_feedbackAndCombineOu_fu_172_ap_start_reg;

assign grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TREADY = pixelDataStream_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TREADY = polStreamOut_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TREADY = tsStreamOut_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TREADY = xStreamOut_V_V_1_state[1'd1];

assign grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TREADY = yStreamOut_V_V_1_state[1'd1];

assign pixelDataStream_V_V_1_ack_in = pixelDataStream_V_V_1_state[1'd1];

assign pixelDataStream_V_V_1_ack_out = pixelDataStream_V_V_TREADY;

assign pixelDataStream_V_V_1_load_A = (pixelDataStream_V_V_1_state_cmp_full & ~pixelDataStream_V_V_1_sel_wr);

assign pixelDataStream_V_V_1_load_B = (pixelDataStream_V_V_1_state_cmp_full & pixelDataStream_V_V_1_sel_wr);

assign pixelDataStream_V_V_1_sel = pixelDataStream_V_V_1_sel_rd;

assign pixelDataStream_V_V_1_state_cmp_full = ((pixelDataStream_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign pixelDataStream_V_V_1_vld_in = grp_feedbackAndCombineOu_fu_172_custDataStreamOut_V_V_TVALID;

assign pixelDataStream_V_V_1_vld_out = pixelDataStream_V_V_1_state[1'd0];

assign pixelDataStream_V_V_TDATA = pixelDataStream_V_V_1_data_out;

assign pixelDataStream_V_V_TVALID = pixelDataStream_V_V_1_state[1'd0];

assign polStreamOut_V_V_1_ack_in = polStreamOut_V_V_1_state[1'd1];

assign polStreamOut_V_V_1_ack_out = polStreamOut_V_V_TREADY;

assign polStreamOut_V_V_1_load_A = (polStreamOut_V_V_1_state_cmp_full & ~polStreamOut_V_V_1_sel_wr);

assign polStreamOut_V_V_1_load_B = (polStreamOut_V_V_1_state_cmp_full & polStreamOut_V_V_1_sel_wr);

assign polStreamOut_V_V_1_sel = polStreamOut_V_V_1_sel_rd;

assign polStreamOut_V_V_1_state_cmp_full = ((polStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign polStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_fu_172_polStreamOut_V_V_TVALID;

assign polStreamOut_V_V_1_vld_out = polStreamOut_V_V_1_state[1'd0];

assign polStreamOut_V_V_TDATA = polStreamOut_V_V_1_data_out;

assign polStreamOut_V_V_TVALID = polStreamOut_V_V_1_state[1'd0];

assign status_currentAverageTgtValue = glAverageTargetValue_1;

assign status_currentFeedbackAreaCntThr = areaEventThrBak;

assign status_currentOFHistCntSum = glOFHistCntSum_V;

assign status_currentOFHistRadiusSum = glOFHistRadiusSum_V;

assign tmp_i_i_i_1668_fu_227_p1 = glSFASTAreaCntThrBak_dout;

assign tmp_i_i_i_fu_222_p1 = deltaTsHWBak_V_dout;

assign tsStreamOut_V_V_1_ack_in = tsStreamOut_V_V_1_state[1'd1];

assign tsStreamOut_V_V_1_ack_out = tsStreamOut_V_V_TREADY;

assign tsStreamOut_V_V_1_load_A = (tsStreamOut_V_V_1_state_cmp_full & ~tsStreamOut_V_V_1_sel_wr);

assign tsStreamOut_V_V_1_load_B = (tsStreamOut_V_V_1_state_cmp_full & tsStreamOut_V_V_1_sel_wr);

assign tsStreamOut_V_V_1_sel = tsStreamOut_V_V_1_sel_rd;

assign tsStreamOut_V_V_1_state_cmp_full = ((tsStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign tsStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_fu_172_tsStreamOut_V_V_TVALID;

assign tsStreamOut_V_V_1_vld_out = tsStreamOut_V_V_1_state[1'd0];

assign tsStreamOut_V_V_TDATA = tsStreamOut_V_V_1_data_out;

assign tsStreamOut_V_V_TVALID = tsStreamOut_V_V_1_state[1'd0];

assign xStreamOut_V_V_1_ack_in = xStreamOut_V_V_1_state[1'd1];

assign xStreamOut_V_V_1_ack_out = xStreamOut_V_V_TREADY;

assign xStreamOut_V_V_1_load_A = (xStreamOut_V_V_1_state_cmp_full & ~xStreamOut_V_V_1_sel_wr);

assign xStreamOut_V_V_1_load_B = (xStreamOut_V_V_1_state_cmp_full & xStreamOut_V_V_1_sel_wr);

assign xStreamOut_V_V_1_sel = xStreamOut_V_V_1_sel_rd;

assign xStreamOut_V_V_1_state_cmp_full = ((xStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign xStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_fu_172_xStreamOut_V_V_TVALID;

assign xStreamOut_V_V_1_vld_out = xStreamOut_V_V_1_state[1'd0];

assign xStreamOut_V_V_TDATA = xStreamOut_V_V_1_data_out;

assign xStreamOut_V_V_TVALID = xStreamOut_V_V_1_state[1'd0];

assign yStreamOut_V_V_1_ack_in = yStreamOut_V_V_1_state[1'd1];

assign yStreamOut_V_V_1_ack_out = yStreamOut_V_V_TREADY;

assign yStreamOut_V_V_1_load_A = (yStreamOut_V_V_1_state_cmp_full & ~yStreamOut_V_V_1_sel_wr);

assign yStreamOut_V_V_1_load_B = (yStreamOut_V_V_1_state_cmp_full & yStreamOut_V_V_1_sel_wr);

assign yStreamOut_V_V_1_sel = yStreamOut_V_V_1_sel_rd;

assign yStreamOut_V_V_1_state_cmp_full = ((yStreamOut_V_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign yStreamOut_V_V_1_vld_in = grp_feedbackAndCombineOu_fu_172_yStreamOut_V_V_TVALID;

assign yStreamOut_V_V_1_vld_out = yStreamOut_V_V_1_state[1'd0];

assign yStreamOut_V_V_TDATA = yStreamOut_V_V_1_data_out;

assign yStreamOut_V_V_TVALID = yStreamOut_V_V_1_state[1'd0];

always @ (posedge ap_clk) begin
    status_currentDeltaTSHW_preg[31:9] <= 23'b00000000000000000000000;
    status_currentAreaCntThr_preg[31:16] <= 16'b0000000000000000;
end

endmodule //Block_proc479

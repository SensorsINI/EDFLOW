-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rwSAEPerfectLoopStre is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    xStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    xStream_V_V_empty_n : IN STD_LOGIC;
    xStream_V_V_read : OUT STD_LOGIC;
    yStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    yStream_V_V_empty_n : IN STD_LOGIC;
    yStream_V_V_read : OUT STD_LOGIC;
    polStream_V_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    polStream_V_V_empty_n : IN STD_LOGIC;
    polStream_V_V_read : OUT STD_LOGIC;
    tsStream_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    tsStream_V_V_empty_n : IN STD_LOGIC;
    tsStream_V_V_read : OUT STD_LOGIC;
    idxStream_V_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
    idxStream_V_V_empty_n : IN STD_LOGIC;
    idxStream_V_V_read : OUT STD_LOGIC;
    outputDataStream_V_V_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    outputDataStream_V_V_full_n : IN STD_LOGIC;
    outputDataStream_V_V_write : OUT STD_LOGIC;
    sizeStreamOut2_V_out_din : OUT STD_LOGIC_VECTOR (4 downto 0);
    sizeStreamOut2_V_out_full_n : IN STD_LOGIC;
    sizeStreamOut2_V_out_write : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of rwSAEPerfectLoopStre is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv96_2F1E0EFEEFE0E1F202122120 : STD_LOGIC_VECTOR (95 downto 0) := "001011110001111000001110111111101110111111100000111000011111001000000010000100100010000100100000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_i_44_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_i_reg_1595 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal tmp_i_44_reg_1624 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_44_reg_1624_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal glPLSFASTSliceScale2_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_3_ce0 : STD_LOGIC;
    signal glPLSFASTSliceScale2_3_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_3_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_3_ce1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_3_we1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_3_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_3_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_2_ce0 : STD_LOGIC;
    signal glPLSFASTSliceScale2_2_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_2_ce1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_2_we1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_2_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_2_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_1_ce0 : STD_LOGIC;
    signal glPLSFASTSliceScale2_1_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_1_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_1_ce1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_1_we1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_1_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_1_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_ce0 : STD_LOGIC;
    signal glPLSFASTSliceScale2_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_ce1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_we1 : STD_LOGIC;
    signal glPLSFASTSliceScale2_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal glPLSFASTSliceScale2_q1 : STD_LOGIC_VECTOR (127 downto 0);
    signal resetCnt_V : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal xStream_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal yStream_V_V_blk_n : STD_LOGIC;
    signal polStream_V_V_blk_n : STD_LOGIC;
    signal idxStream_V_V_blk_n : STD_LOGIC;
    signal tsStream_V_V_blk_n : STD_LOGIC;
    signal outputDataStream_V_V_blk_n : STD_LOGIC;
    signal sizeStreamOut2_V_out_blk_n : STD_LOGIC;
    signal p_4_i_reg_400 : STD_LOGIC_VECTOR (4 downto 0);
    signal sizeStreamOut1_V_wri_reg_429 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_V_s_reg_443 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_i_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1595_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1595_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1595_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1595_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_57_i_reg_1599 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_V_fu_499_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_V_reg_1619 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_i_44_reg_1624_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_44_reg_1624_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_44_reg_1624_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_cast_i_fu_913_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_36_cast_i_reg_1628 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_51_cast_i_fu_995_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_51_cast_i_reg_1656 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_51_cast_i_reg_1656_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_51_cast_i_reg_1656_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_37_fu_1029_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_reg_1664 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_reg_1664_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_12_reg_1669 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_V_12_reg_1669_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal xNewIdxSFASTScale2_V_reg_1674 : STD_LOGIC_VECTOR (4 downto 0);
    signal glPLSFASTSliceScale2_4_reg_1682 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_4_reg_1682_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_5_reg_1688 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_5_reg_1688_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_6_reg_1694 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_6_reg_1694_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_7_reg_1700 : STD_LOGIC_VECTOR (8 downto 0);
    signal glPLSFASTSliceScale2_7_reg_1700_pp0_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_31_i_fu_1095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_reg_1706 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_reg_1706_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_reg_1706_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_i_reg_1706_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_i_fu_1119_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_i_reg_1711 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_33_i_reg_1711_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_fu_1150_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_1716 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_1716_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_reg_1716_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_reg_1721 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_reg_1721_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_reg_1721_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_fu_1188_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_reg_1726 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_reg_1726_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_reg_1726_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_fu_1207_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_reg_1731 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_reg_1731_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_reg_1731_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_1406_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_111_reg_1736 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_140_fu_1475_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_reg_1764 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_fu_1494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_reg_1769 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_fu_1513_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_143_fu_1532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_143_reg_1779 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_p_4_i_phi_fu_404_p6 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_p_0768_2_i_phi_fu_474_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_tmp_V_8_phi_fu_461_p4 : STD_LOGIC_VECTOR (47 downto 0);
    signal ap_phi_reg_pp0_iter5_tmp_V_8_reg_457 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_68_1_i_fu_1550_p10 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_i_fu_1565_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter5_p_0768_2_i_reg_470 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_54_cast_fu_953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_cast_fu_1087_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_cast_fu_1416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_39_fu_1431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_30_i_fu_1439_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_V_fu_184 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_V_1_fu_188 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_V_2_fu_192 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Result_60_i_fu_517_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_i_fu_524_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_1_i_fu_536_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_1_i_fu_543_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_2_i_fu_555_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_2_i_fu_562_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_3_i_fu_574_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_3_i_fu_581_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_115_fu_585_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_566_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_fu_547_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_fu_528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_60_4_i_fu_605_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_4_i_fu_612_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_5_i_fu_624_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_5_i_fu_631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_6_i_fu_643_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_6_i_fu_650_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_7_i_fu_662_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_7_i_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_119_fu_673_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_654_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_616_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_60_8_i_fu_693_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_8_i_fu_700_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_9_i_fu_712_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_9_i_fu_719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_i_42_fu_731_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_i_43_fu_738_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_10_i_fu_750_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_10_i_fu_757_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_123_fu_761_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_742_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_fu_723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_fu_704_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_60_11_i_fu_781_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_11_i_fu_788_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_12_i_fu_800_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_12_i_fu_807_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_13_i_fu_819_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_13_i_fu_826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_60_14_i_fu_838_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal index_assign_9_14_i_fu_845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_i_fu_857_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_i_fu_593_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_41_i_fu_881_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_35_fu_867_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_19_i_fu_681_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_32_i_fu_871_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_899_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_903_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_i_fu_885_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_130_fu_919_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_128_fu_891_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_129_fu_895_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_131_fu_933_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_53_cast_fu_939_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_i_cast_fu_929_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_36_fu_947_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_24_i_fu_769_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_41_1_i_fu_961_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_127_fu_849_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_fu_830_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_125_fu_811_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_fu_792_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_63_1_i_fu_971_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_991_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_1_i_fu_965_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_138_fu_1001_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_136_fu_983_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_137_fu_987_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_139_fu_1015_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_56_cast_fu_1021_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_47_1_i_cast_fu_1011_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_99_fu_1055_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ySFASTScale2_V_fu_1035_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_1069_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_48_cast_fu_1077_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_i_i_cast_fu_1065_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_34_fu_1081_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_fu_1125_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_1139_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_6_fu_1125_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal index_assign_11_0_i_fu_1146_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1158_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_11_0_1_s_fu_1165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1177_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_11_0_2_s_fu_1184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1196_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_11_0_3_s_fu_1203_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1228_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmpDataSFASTScale2_V_fu_1215_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal index_assign_1_i_i_fu_1235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1247_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_1_1_i_i_fu_1254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1266_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_1_2_i_i_fu_1273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1285_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_1_3_i_i_fu_1292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_1296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_1277_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_1258_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_100_fu_1239_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_13_3_i_i_fu_1304_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal cmpFlgSFASTScale2_V_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_i_i_fu_1322_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmpTmpDataSFASTScale_fu_1326_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1332_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_5_i_i_fu_1336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_106_fu_1350_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_1340_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Repl2_5_1_i_i_fu_1358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_108_fu_1372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_1362_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Repl2_5_2_i_i_fu_1380_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_110_fu_1394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_fu_1384_p4 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_Repl2_5_3_i_i_fu_1402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_144_fu_1427_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_fu_1464_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_11_fu_1451_p6 : STD_LOGIC_VECTOR (127 downto 0);
    signal index_assign_11_1_i_fu_1471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1483_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_11_1_1_s_fu_1490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1502_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_11_1_2_s_fu_1509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1521_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_assign_11_1_3_s_fu_1528_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1540_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_166 : BOOLEAN;
    signal ap_condition_358 : BOOLEAN;

    component SFAST_process_datMgi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (127 downto 0);
        din1 : IN STD_LOGIC_VECTOR (127 downto 0);
        din2 : IN STD_LOGIC_VECTOR (127 downto 0);
        din3 : IN STD_LOGIC_VECTOR (127 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component rwSAEPerfectLoopSIfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (127 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    glPLSFASTSliceScale2_3_U : component rwSAEPerfectLoopSIfE
    generic map (
        DataWidth => 128,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSFASTSliceScale2_3_address0,
        ce0 => glPLSFASTSliceScale2_3_ce0,
        q0 => glPLSFASTSliceScale2_3_q0,
        address1 => glPLSFASTSliceScale2_3_address1,
        ce1 => glPLSFASTSliceScale2_3_ce1,
        we1 => glPLSFASTSliceScale2_3_we1,
        d1 => glPLSFASTSliceScale2_3_d1,
        q1 => glPLSFASTSliceScale2_3_q1);

    glPLSFASTSliceScale2_2_U : component rwSAEPerfectLoopSIfE
    generic map (
        DataWidth => 128,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSFASTSliceScale2_2_address0,
        ce0 => glPLSFASTSliceScale2_2_ce0,
        q0 => glPLSFASTSliceScale2_2_q0,
        address1 => glPLSFASTSliceScale2_2_address1,
        ce1 => glPLSFASTSliceScale2_2_ce1,
        we1 => glPLSFASTSliceScale2_2_we1,
        d1 => glPLSFASTSliceScale2_2_d1,
        q1 => glPLSFASTSliceScale2_2_q1);

    glPLSFASTSliceScale2_1_U : component rwSAEPerfectLoopSIfE
    generic map (
        DataWidth => 128,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSFASTSliceScale2_1_address0,
        ce0 => glPLSFASTSliceScale2_1_ce0,
        q0 => glPLSFASTSliceScale2_1_q0,
        address1 => glPLSFASTSliceScale2_1_address1,
        ce1 => glPLSFASTSliceScale2_1_ce1,
        we1 => glPLSFASTSliceScale2_1_we1,
        d1 => glPLSFASTSliceScale2_1_d1,
        q1 => glPLSFASTSliceScale2_1_q1);

    glPLSFASTSliceScale2_U : component rwSAEPerfectLoopSIfE
    generic map (
        DataWidth => 128,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => glPLSFASTSliceScale2_address0,
        ce0 => glPLSFASTSliceScale2_ce0,
        q0 => glPLSFASTSliceScale2_q0,
        address1 => glPLSFASTSliceScale2_address1,
        ce1 => glPLSFASTSliceScale2_ce1,
        we1 => glPLSFASTSliceScale2_we1,
        d1 => glPLSFASTSliceScale2_d1,
        q1 => glPLSFASTSliceScale2_q1);

    SFAST_process_datMgi_U20 : component SFAST_process_datMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 128,
        din1_WIDTH => 128,
        din2_WIDTH => 128,
        din3_WIDTH => 128,
        din4_WIDTH => 2,
        dout_WIDTH => 128)
    port map (
        din0 => glPLSFASTSliceScale2_3_q0,
        din1 => glPLSFASTSliceScale2_2_q0,
        din2 => glPLSFASTSliceScale2_1_q0,
        din3 => glPLSFASTSliceScale2_q0,
        din4 => tmp_6_fu_1125_p5,
        dout => tmp_6_fu_1125_p6);

    SFAST_process_datMgi_U21 : component SFAST_process_datMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 128,
        din1_WIDTH => 128,
        din2_WIDTH => 128,
        din3_WIDTH => 128,
        din4_WIDTH => 2,
        dout_WIDTH => 128)
    port map (
        din0 => glPLSFASTSliceScale2_3_q0,
        din1 => glPLSFASTSliceScale2_2_q0,
        din2 => glPLSFASTSliceScale2_1_q0,
        din3 => glPLSFASTSliceScale2_q0,
        din4 => tmp_V_12_reg_1669,
        dout => tmpDataSFASTScale2_V_fu_1215_p6);

    SFAST_process_datMgi_U22 : component SFAST_process_datMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 128,
        din1_WIDTH => 128,
        din2_WIDTH => 128,
        din3_WIDTH => 128,
        din4_WIDTH => 2,
        dout_WIDTH => 128)
    port map (
        din0 => glPLSFASTSliceScale2_3_q1,
        din1 => glPLSFASTSliceScale2_2_q1,
        din2 => glPLSFASTSliceScale2_1_q1,
        din3 => glPLSFASTSliceScale2_q1,
        din4 => tmp_33_i_reg_1711_pp0_iter3_reg,
        dout => tmp_11_fu_1451_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv5_0;
            else
                if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_return_preg <= ap_phi_mux_p_0768_2_i_phi_fu_474_p4;
                end if; 
            end if;
        end if;
    end process;


    p_4_i_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_44_reg_1624 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_4_i_reg_400 <= i_V_reg_1619;
            elsif ((((tmp_i_44_reg_1624 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                p_4_i_reg_400 <= ap_const_lv5_1E;
            end if; 
        end if;
    end process;

    sizeStreamOut1_V_wri_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                sizeStreamOut1_V_wri_reg_429 <= ap_phi_mux_p_0768_2_i_phi_fu_474_p4;
            elsif ((((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                sizeStreamOut1_V_wri_reg_429 <= ap_const_lv5_C;
            end if; 
        end if;
    end process;

    tmp_V_s_reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                tmp_V_s_reg_443 <= ap_phi_mux_tmp_V_8_phi_fu_461_p4;
            elsif ((((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                tmp_V_s_reg_443 <= ap_const_lv48_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                glPLSFASTSliceScale2_4_reg_1682 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
                glPLSFASTSliceScale2_5_reg_1688 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
                glPLSFASTSliceScale2_6_reg_1694 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
                glPLSFASTSliceScale2_7_reg_1700 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
                tmp_31_i_reg_1706 <= tmp_31_i_fu_1095_p2;
                tmp_V_12_reg_1669 <= idxStream_V_V_dout;
                xNewIdxSFASTScale2_V_reg_1674 <= xStream_V_V_dout(6 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                glPLSFASTSliceScale2_4_reg_1682_pp0_iter2_reg <= glPLSFASTSliceScale2_4_reg_1682;
                glPLSFASTSliceScale2_5_reg_1688_pp0_iter2_reg <= glPLSFASTSliceScale2_5_reg_1688;
                glPLSFASTSliceScale2_6_reg_1694_pp0_iter2_reg <= glPLSFASTSliceScale2_6_reg_1694;
                glPLSFASTSliceScale2_7_reg_1700_pp0_iter2_reg <= glPLSFASTSliceScale2_7_reg_1700;
                tmp_132_reg_1716_pp0_iter3_reg <= tmp_132_reg_1716;
                tmp_132_reg_1716_pp0_iter4_reg <= tmp_132_reg_1716_pp0_iter3_reg;
                tmp_133_reg_1721_pp0_iter3_reg <= tmp_133_reg_1721;
                tmp_133_reg_1721_pp0_iter4_reg <= tmp_133_reg_1721_pp0_iter3_reg;
                tmp_134_reg_1726_pp0_iter3_reg <= tmp_134_reg_1726;
                tmp_134_reg_1726_pp0_iter4_reg <= tmp_134_reg_1726_pp0_iter3_reg;
                tmp_135_reg_1731_pp0_iter3_reg <= tmp_135_reg_1731;
                tmp_135_reg_1731_pp0_iter4_reg <= tmp_135_reg_1731_pp0_iter3_reg;
                tmp_31_i_reg_1706_pp0_iter2_reg <= tmp_31_i_reg_1706;
                tmp_31_i_reg_1706_pp0_iter3_reg <= tmp_31_i_reg_1706_pp0_iter2_reg;
                tmp_31_i_reg_1706_pp0_iter4_reg <= tmp_31_i_reg_1706_pp0_iter3_reg;
                tmp_33_i_reg_1711_pp0_iter3_reg <= tmp_33_i_reg_1711;
                tmp_37_reg_1664_pp0_iter2_reg <= tmp_37_reg_1664;
                tmp_51_cast_i_reg_1656_pp0_iter2_reg <= tmp_51_cast_i_reg_1656;
                tmp_51_cast_i_reg_1656_pp0_iter3_reg <= tmp_51_cast_i_reg_1656_pp0_iter2_reg;
                tmp_V_12_reg_1669_pp0_iter2_reg <= tmp_V_12_reg_1669;
                tmp_i_44_reg_1624_pp0_iter2_reg <= tmp_i_44_reg_1624_pp0_iter1_reg;
                tmp_i_44_reg_1624_pp0_iter3_reg <= tmp_i_44_reg_1624_pp0_iter2_reg;
                tmp_i_44_reg_1624_pp0_iter4_reg <= tmp_i_44_reg_1624_pp0_iter3_reg;
                tmp_i_reg_1595_pp0_iter2_reg <= tmp_i_reg_1595_pp0_iter1_reg;
                tmp_i_reg_1595_pp0_iter3_reg <= tmp_i_reg_1595_pp0_iter2_reg;
                tmp_i_reg_1595_pp0_iter4_reg <= tmp_i_reg_1595_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_V_reg_1619 <= i_V_fu_499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_483_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Result_57_i_reg_1599 <= ap_phi_mux_p_4_i_phi_fu_404_p6(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                resetCnt_V <= tmp_30_i_fu_1439_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_1595_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_111_reg_1736 <= tmp_111_fu_1406_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_1595_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_132_reg_1716 <= tmp_132_fu_1150_p3;
                tmp_133_reg_1721 <= tmp_133_fu_1169_p3;
                tmp_134_reg_1726 <= tmp_134_fu_1188_p3;
                tmp_135_reg_1731 <= tmp_135_fu_1207_p3;
                tmp_33_i_reg_1711 <= tmp_33_i_fu_1119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_1595_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_140_reg_1764 <= tmp_140_fu_1475_p3;
                tmp_141_reg_1769 <= tmp_141_fu_1494_p3;
                tmp_142_reg_1774 <= tmp_142_fu_1513_p3;
                tmp_143_reg_1779 <= tmp_143_fu_1532_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_1595 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_36_cast_i_reg_1628 <= tmp_36_cast_i_fu_913_p2;
                tmp_37_reg_1664 <= tmp_37_fu_1029_p2;
                tmp_51_cast_i_reg_1656 <= tmp_51_cast_i_fu_995_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_1_fu_188 <= yStream_V_V_dout;
                tmp_V_2_fu_192 <= idxStream_V_V_dout;
                tmp_V_fu_184 <= xStream_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_44_reg_1624 <= tmp_i_44_fu_505_p2;
                tmp_i_44_reg_1624_pp0_iter1_reg <= tmp_i_44_reg_1624;
                tmp_i_reg_1595 <= tmp_i_fu_483_p2;
                tmp_i_reg_1595_pp0_iter1_reg <= tmp_i_reg_1595;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_done_reg, xStream_V_V_empty_n, tmp_i_reg_1595, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, idxStream_V_V_empty_n, ap_enable_reg_pp0_iter1, outputDataStream_V_V_full_n, tmp_i_44_reg_1624_pp0_iter4_reg, sizeStreamOut2_V_out_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((sizeStreamOut2_V_out_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)) or ((outputDataStream_V_V_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_i_reg_1595 = ap_const_lv1_1) and (idxStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (tsStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (polStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (yStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (xStream_V_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_done_reg, xStream_V_V_empty_n, tmp_i_reg_1595, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, idxStream_V_V_empty_n, ap_enable_reg_pp0_iter1, outputDataStream_V_V_full_n, tmp_i_44_reg_1624_pp0_iter4_reg, sizeStreamOut2_V_out_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((sizeStreamOut2_V_out_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)) or ((outputDataStream_V_V_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_i_reg_1595 = ap_const_lv1_1) and (idxStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (tsStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (polStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (yStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (xStream_V_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_done_reg, xStream_V_V_empty_n, tmp_i_reg_1595, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, idxStream_V_V_empty_n, ap_enable_reg_pp0_iter1, outputDataStream_V_V_full_n, tmp_i_44_reg_1624_pp0_iter4_reg, sizeStreamOut2_V_out_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((sizeStreamOut2_V_out_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)) or ((outputDataStream_V_V_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_i_reg_1595 = ap_const_lv1_1) and (idxStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (tsStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (polStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (yStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (xStream_V_V_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(xStream_V_V_empty_n, tmp_i_reg_1595, yStream_V_V_empty_n, polStream_V_V_empty_n, tsStream_V_V_empty_n, idxStream_V_V_empty_n)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (((tmp_i_reg_1595 = ap_const_lv1_1) and (idxStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (tsStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (polStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (yStream_V_V_empty_n = ap_const_logic_0)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (xStream_V_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter5_assign_proc : process(outputDataStream_V_V_full_n, tmp_i_44_reg_1624_pp0_iter4_reg, sizeStreamOut2_V_out_full_n)
    begin
                ap_block_state7_pp0_stage0_iter5 <= (((sizeStreamOut2_V_out_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)) or ((outputDataStream_V_V_full_n = ap_const_logic_0) and (tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0)));
    end process;


    ap_condition_166_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_166 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_358_assign_proc : process(ap_block_pp0_stage0, tmp_i_reg_1595_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
                ap_condition_358 <= ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, tmp_i_44_reg_1624_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_0768_2_i_phi_fu_474_p4_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, sizeStreamOut1_V_wri_reg_429, tmp_i_reg_1595_pp0_iter4_reg, p_i_fu_1565_p3, ap_phi_reg_pp0_iter5_p_0768_2_i_reg_470)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_i_reg_1595_pp0_iter4_reg = ap_const_lv1_0)) then 
                ap_phi_mux_p_0768_2_i_phi_fu_474_p4 <= sizeStreamOut1_V_wri_reg_429;
            elsif ((tmp_i_reg_1595_pp0_iter4_reg = ap_const_lv1_1)) then 
                ap_phi_mux_p_0768_2_i_phi_fu_474_p4 <= p_i_fu_1565_p3;
            else 
                ap_phi_mux_p_0768_2_i_phi_fu_474_p4 <= ap_phi_reg_pp0_iter5_p_0768_2_i_reg_470;
            end if;
        else 
            ap_phi_mux_p_0768_2_i_phi_fu_474_p4 <= ap_phi_reg_pp0_iter5_p_0768_2_i_reg_470;
        end if; 
    end process;


    ap_phi_mux_p_4_i_phi_fu_404_p6_assign_proc : process(tmp_i_44_reg_1624, p_4_i_reg_400, i_V_reg_1619, ap_condition_166)
    begin
        if ((ap_const_boolean_1 = ap_condition_166)) then
            if ((tmp_i_44_reg_1624 = ap_const_lv1_0)) then 
                ap_phi_mux_p_4_i_phi_fu_404_p6 <= ap_const_lv5_1E;
            elsif ((tmp_i_44_reg_1624 = ap_const_lv1_1)) then 
                ap_phi_mux_p_4_i_phi_fu_404_p6 <= i_V_reg_1619;
            else 
                ap_phi_mux_p_4_i_phi_fu_404_p6 <= p_4_i_reg_400;
            end if;
        else 
            ap_phi_mux_p_4_i_phi_fu_404_p6 <= p_4_i_reg_400;
        end if; 
    end process;


    ap_phi_mux_tmp_V_8_phi_fu_461_p4_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, tmp_V_s_reg_443, tmp_i_reg_1595_pp0_iter4_reg, ap_phi_reg_pp0_iter5_tmp_V_8_reg_457, p_Result_68_1_i_fu_1550_p10)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((tmp_i_reg_1595_pp0_iter4_reg = ap_const_lv1_0)) then 
                ap_phi_mux_tmp_V_8_phi_fu_461_p4 <= p_Result_68_1_i_fu_1550_p10;
            elsif ((tmp_i_reg_1595_pp0_iter4_reg = ap_const_lv1_1)) then 
                ap_phi_mux_tmp_V_8_phi_fu_461_p4 <= tmp_V_s_reg_443;
            else 
                ap_phi_mux_tmp_V_8_phi_fu_461_p4 <= ap_phi_reg_pp0_iter5_tmp_V_8_reg_457;
            end if;
        else 
            ap_phi_mux_tmp_V_8_phi_fu_461_p4 <= ap_phi_reg_pp0_iter5_tmp_V_8_reg_457;
        end if; 
    end process;

    ap_phi_reg_pp0_iter5_p_0768_2_i_reg_470 <= "XXXXX";
    ap_phi_reg_pp0_iter5_tmp_V_8_reg_457 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(tmp_i_44_fu_505_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_44_fu_505_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(tmp_i_44_reg_1624_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, ap_phi_mux_p_0768_2_i_phi_fu_474_p4, ap_return_preg)
    begin
        if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_return <= ap_phi_mux_p_0768_2_i_phi_fu_474_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    cmpFlgSFASTScale2_V_fu_1316_p2 <= "0" when (p_Result_13_3_i_i_fu_1304_p5 = ap_const_lv4_F) else "1";

    glPLSFASTSliceScale2_1_address0_assign_proc : process(tmp_i_reg_1595, tmp_54_cast_fu_953_p1, tmp_49_cast_fu_1087_p1, ap_condition_166)
    begin
        if ((ap_const_boolean_1 = ap_condition_166)) then
            if ((tmp_i_reg_1595 = ap_const_lv1_1)) then 
                glPLSFASTSliceScale2_1_address0 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
            elsif ((tmp_i_reg_1595 = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_1_address0 <= tmp_54_cast_fu_953_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_1_address1_assign_proc : process(ap_block_pp0_stage0, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, glPLSFASTSliceScale2_6_reg_1694_pp0_iter2_reg, ap_enable_reg_pp0_iter3, tmp_57_cast_fu_1416_p1, tmp_39_fu_1431_p1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3))) then 
                glPLSFASTSliceScale2_1_address1 <= tmp_39_fu_1431_p1(9 - 1 downto 0);
            elsif (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2))) then 
                glPLSFASTSliceScale2_1_address1 <= glPLSFASTSliceScale2_6_reg_1694_pp0_iter2_reg;
            elsif ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_1_address1 <= tmp_57_cast_fu_1416_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_1_address1 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_1_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_i_reg_1595 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_1_ce0 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_1_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_1_ce1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_1_d1_assign_proc : process(tmp_V_12_reg_1669_pp0_iter2_reg, tmp_111_reg_1736, ap_condition_358)
    begin
        if ((ap_const_boolean_1 = ap_condition_358)) then
            if ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3)) then 
                glPLSFASTSliceScale2_1_d1 <= ap_const_lv128_lc_1;
            elsif ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2)) then 
                glPLSFASTSliceScale2_1_d1 <= tmp_111_reg_1736;
            else 
                glPLSFASTSliceScale2_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_1_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_1_we1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_2_address0_assign_proc : process(tmp_i_reg_1595, tmp_54_cast_fu_953_p1, tmp_49_cast_fu_1087_p1, ap_condition_166)
    begin
        if ((ap_const_boolean_1 = ap_condition_166)) then
            if ((tmp_i_reg_1595 = ap_const_lv1_1)) then 
                glPLSFASTSliceScale2_2_address0 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
            elsif ((tmp_i_reg_1595 = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_2_address0 <= tmp_54_cast_fu_953_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_2_address0 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_2_address1_assign_proc : process(ap_block_pp0_stage0, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, glPLSFASTSliceScale2_5_reg_1688_pp0_iter2_reg, ap_enable_reg_pp0_iter3, tmp_57_cast_fu_1416_p1, tmp_39_fu_1431_p1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2))) then 
                glPLSFASTSliceScale2_2_address1 <= tmp_39_fu_1431_p1(9 - 1 downto 0);
            elsif (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1))) then 
                glPLSFASTSliceScale2_2_address1 <= glPLSFASTSliceScale2_5_reg_1688_pp0_iter2_reg;
            elsif ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_2_address1 <= tmp_57_cast_fu_1416_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_2_address1 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_2_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_i_reg_1595 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_2_ce0 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_2_ce1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_2_d1_assign_proc : process(tmp_V_12_reg_1669_pp0_iter2_reg, tmp_111_reg_1736, ap_condition_358)
    begin
        if ((ap_const_boolean_1 = ap_condition_358)) then
            if ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2)) then 
                glPLSFASTSliceScale2_2_d1 <= ap_const_lv128_lc_1;
            elsif ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1)) then 
                glPLSFASTSliceScale2_2_d1 <= tmp_111_reg_1736;
            else 
                glPLSFASTSliceScale2_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_2_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_2_we1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_3_address0_assign_proc : process(tmp_i_reg_1595, tmp_54_cast_fu_953_p1, tmp_49_cast_fu_1087_p1, ap_condition_166)
    begin
        if ((ap_const_boolean_1 = ap_condition_166)) then
            if ((tmp_i_reg_1595 = ap_const_lv1_1)) then 
                glPLSFASTSliceScale2_3_address0 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
            elsif ((tmp_i_reg_1595 = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_3_address0 <= tmp_54_cast_fu_953_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_3_address0 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_3_address1_assign_proc : process(ap_block_pp0_stage0, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, glPLSFASTSliceScale2_4_reg_1682_pp0_iter2_reg, ap_enable_reg_pp0_iter3, tmp_57_cast_fu_1416_p1, tmp_39_fu_1431_p1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1))) then 
                glPLSFASTSliceScale2_3_address1 <= tmp_39_fu_1431_p1(9 - 1 downto 0);
            elsif (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0))) then 
                glPLSFASTSliceScale2_3_address1 <= glPLSFASTSliceScale2_4_reg_1682_pp0_iter2_reg;
            elsif ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_3_address1 <= tmp_57_cast_fu_1416_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_3_address1 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_3_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_i_reg_1595 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_3_ce0 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_3_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_3_ce1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_3_d1_assign_proc : process(tmp_V_12_reg_1669_pp0_iter2_reg, tmp_111_reg_1736, ap_condition_358)
    begin
        if ((ap_const_boolean_1 = ap_condition_358)) then
            if ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1)) then 
                glPLSFASTSliceScale2_3_d1 <= ap_const_lv128_lc_1;
            elsif ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0)) then 
                glPLSFASTSliceScale2_3_d1 <= tmp_111_reg_1736;
            else 
                glPLSFASTSliceScale2_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_3_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_3_we1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_address0_assign_proc : process(tmp_i_reg_1595, tmp_54_cast_fu_953_p1, tmp_49_cast_fu_1087_p1, ap_condition_166)
    begin
        if ((ap_const_boolean_1 = ap_condition_166)) then
            if ((tmp_i_reg_1595 = ap_const_lv1_1)) then 
                glPLSFASTSliceScale2_address0 <= tmp_49_cast_fu_1087_p1(9 - 1 downto 0);
            elsif ((tmp_i_reg_1595 = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_address0 <= tmp_54_cast_fu_953_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_address0 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_address1_assign_proc : process(ap_block_pp0_stage0, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, glPLSFASTSliceScale2_7_reg_1700_pp0_iter2_reg, ap_enable_reg_pp0_iter3, tmp_57_cast_fu_1416_p1, tmp_39_fu_1431_p1)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0))) then 
                glPLSFASTSliceScale2_address1 <= tmp_39_fu_1431_p1(9 - 1 downto 0);
            elsif (((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3))) then 
                glPLSFASTSliceScale2_address1 <= glPLSFASTSliceScale2_7_reg_1700_pp0_iter2_reg;
            elsif ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0)) then 
                glPLSFASTSliceScale2_address1 <= tmp_57_cast_fu_1416_p1(9 - 1 downto 0);
            else 
                glPLSFASTSliceScale2_address1 <= "XXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_i_reg_1595 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_ce0 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_ce1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_ce1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glPLSFASTSliceScale2_d1_assign_proc : process(tmp_V_12_reg_1669_pp0_iter2_reg, tmp_111_reg_1736, ap_condition_358)
    begin
        if ((ap_const_boolean_1 = ap_condition_358)) then
            if ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0)) then 
                glPLSFASTSliceScale2_d1 <= ap_const_lv128_lc_1;
            elsif ((tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3)) then 
                glPLSFASTSliceScale2_d1 <= tmp_111_reg_1736;
            else 
                glPLSFASTSliceScale2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glPLSFASTSliceScale2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glPLSFASTSliceScale2_we1_assign_proc : process(ap_block_pp0_stage0_11001, tmp_i_reg_1595_pp0_iter2_reg, tmp_V_12_reg_1669_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if ((((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_i_reg_1595_pp0_iter2_reg = ap_const_lv1_1) and (tmp_V_12_reg_1669_pp0_iter2_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glPLSFASTSliceScale2_we1 <= ap_const_logic_1;
        else 
            glPLSFASTSliceScale2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_499_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_4_i_phi_fu_404_p6) + unsigned(ap_const_lv5_2));

    idxStream_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, idxStream_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            idxStream_V_V_blk_n <= idxStream_V_V_empty_n;
        else 
            idxStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    idxStream_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            idxStream_V_V_read <= ap_const_logic_1;
        else 
            idxStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    index_assign_11_0_1_s_fu_1165_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1158_p3),32));
    index_assign_11_0_2_s_fu_1184_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1177_p3),32));
    index_assign_11_0_3_s_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1196_p3),32));
    index_assign_11_0_i_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1139_p3),32));
    index_assign_11_1_1_s_fu_1490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_1483_p3),32));
    index_assign_11_1_2_s_fu_1509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_1502_p3),32));
    index_assign_11_1_3_s_fu_1528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1521_p3),32));
    index_assign_11_1_i_fu_1471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1464_p3),32));
    index_assign_1_1_i_i_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1247_p3),32));
    index_assign_1_2_i_i_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1266_p3),32));
    index_assign_1_3_i_i_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1285_p3),32));
    index_assign_1_i_i_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_1228_p3),32));
    index_assign_9_10_i_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_10_i_fu_750_p3),32));
    index_assign_9_11_i_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_11_i_fu_781_p3),32));
    index_assign_9_12_i_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_12_i_fu_800_p3),32));
    index_assign_9_13_i_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_13_i_fu_819_p3),32));
    index_assign_9_14_i_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_14_i_fu_838_p3),32));
    index_assign_9_1_i_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_1_i_fu_536_p3),32));
    index_assign_9_2_i_fu_562_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_2_i_fu_555_p3),32));
    index_assign_9_3_i_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_3_i_fu_574_p3),32));
    index_assign_9_4_i_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_4_i_fu_605_p3),32));
    index_assign_9_5_i_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_5_i_fu_624_p3),32));
    index_assign_9_6_i_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_6_i_fu_643_p3),32));
    index_assign_9_7_i_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_7_i_fu_662_p3),32));
    index_assign_9_8_i_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_8_i_fu_693_p3),32));
    index_assign_9_9_i_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_9_i_fu_712_p3),32));
    index_assign_9_i_43_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_i_42_fu_731_p3),32));
    index_assign_9_i_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_60_i_fu_517_p3),32));

    outputDataStream_V_V_blk_n_assign_proc : process(outputDataStream_V_V_full_n, tmp_i_44_reg_1624_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0)
    begin
        if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            outputDataStream_V_V_blk_n <= outputDataStream_V_V_full_n;
        else 
            outputDataStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outputDataStream_V_V_din <= ap_phi_mux_tmp_V_8_phi_fu_461_p4;

    outputDataStream_V_V_write_assign_proc : process(tmp_i_44_reg_1624_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            outputDataStream_V_V_write <= ap_const_logic_1;
        else 
            outputDataStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Repl2_5_1_i_i_fu_1358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_106_fu_1350_p3),64));
    p_Repl2_5_2_i_i_fu_1380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_108_fu_1372_p3),64));
    p_Repl2_5_3_i_i_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_110_fu_1394_p3),64));
    p_Repl2_5_i_i_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_104_fu_1332_p1),64));
    p_Result_13_3_i_i_fu_1304_p5 <= (((tmp_103_fu_1296_p3 & tmp_102_fu_1277_p3) & tmp_101_fu_1258_p3) & tmp_100_fu_1239_p3);
    p_Result_60_10_i_fu_750_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_B);
    p_Result_60_11_i_fu_781_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_C);
    p_Result_60_12_i_fu_800_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_D);
    p_Result_60_13_i_fu_819_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_E);
    p_Result_60_14_i_fu_838_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_F);
    p_Result_60_1_i_fu_536_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_1);
    p_Result_60_2_i_fu_555_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_2);
    p_Result_60_3_i_fu_574_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_3);
    p_Result_60_4_i_fu_605_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_4);
    p_Result_60_5_i_fu_624_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_5);
    p_Result_60_6_i_fu_643_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_6);
    p_Result_60_7_i_fu_662_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_7);
    p_Result_60_8_i_fu_693_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_8);
    p_Result_60_9_i_fu_712_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_9);
    p_Result_60_i_42_fu_731_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_A);
    p_Result_60_i_fu_517_p3 <= (p_Result_57_i_reg_1599 & ap_const_lv4_0);
    p_Result_63_1_i_fu_971_p5 <= (((tmp_127_fu_849_p3 & tmp_126_fu_830_p3) & tmp_125_fu_811_p3) & tmp_124_fu_792_p3);
    p_Result_68_1_i_fu_1550_p10 <= ((((((((tmp_143_reg_1779 & tmp_142_reg_1774) & tmp_141_reg_1769) & tmp_140_reg_1764) & tmp_135_reg_1731_pp0_iter4_reg) & tmp_134_reg_1726_pp0_iter4_reg) & tmp_133_reg_1721_pp0_iter4_reg) & tmp_132_reg_1716_pp0_iter4_reg) & tmp_38_fu_1540_p4);
    p_i_fu_1565_p3 <= 
        ap_const_lv5_0 when (tmp_31_i_reg_1706_pp0_iter4_reg(0) = '1') else 
        sizeStreamOut1_V_wri_reg_429;

    polStream_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, polStream_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            polStream_V_V_blk_n <= polStream_V_V_empty_n;
        else 
            polStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    polStream_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            polStream_V_V_read <= ap_const_logic_1;
        else 
            polStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    sizeStreamOut2_V_out_blk_n_assign_proc : process(tmp_i_44_reg_1624_pp0_iter4_reg, sizeStreamOut2_V_out_full_n, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0)
    begin
        if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            sizeStreamOut2_V_out_blk_n <= sizeStreamOut2_V_out_full_n;
        else 
            sizeStreamOut2_V_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sizeStreamOut2_V_out_din <= ap_phi_mux_p_0768_2_i_phi_fu_474_p4;

    sizeStreamOut2_V_out_write_assign_proc : process(tmp_i_44_reg_1624_pp0_iter4_reg, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_44_reg_1624_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            sizeStreamOut2_V_out_write <= ap_const_logic_1;
        else 
            sizeStreamOut2_V_out_write <= ap_const_logic_0;
        end if; 
    end process;

    tmpTmpDataSFASTScale_fu_1326_p2 <= std_logic_vector(unsigned(tmp_9_i_i_fu_1322_p1) + unsigned(p_Result_13_3_i_i_fu_1304_p5));
    tmp_100_fu_1239_p3 <= tmpDataSFASTScale2_V_fu_1215_p6(to_integer(unsigned(index_assign_1_i_i_fu_1235_p1)) downto to_integer(unsigned(index_assign_1_i_i_fu_1235_p1))) when (to_integer(unsigned(index_assign_1_i_i_fu_1235_p1))>= 0 and to_integer(unsigned(index_assign_1_i_i_fu_1235_p1))<=127) else "-";
    tmp_101_fu_1258_p3 <= tmpDataSFASTScale2_V_fu_1215_p6(to_integer(unsigned(index_assign_1_1_i_i_fu_1254_p1)) downto to_integer(unsigned(index_assign_1_1_i_i_fu_1254_p1))) when (to_integer(unsigned(index_assign_1_1_i_i_fu_1254_p1))>= 0 and to_integer(unsigned(index_assign_1_1_i_i_fu_1254_p1))<=127) else "-";
    tmp_102_fu_1277_p3 <= tmpDataSFASTScale2_V_fu_1215_p6(to_integer(unsigned(index_assign_1_2_i_i_fu_1273_p1)) downto to_integer(unsigned(index_assign_1_2_i_i_fu_1273_p1))) when (to_integer(unsigned(index_assign_1_2_i_i_fu_1273_p1))>= 0 and to_integer(unsigned(index_assign_1_2_i_i_fu_1273_p1))<=127) else "-";
    tmp_103_fu_1296_p3 <= tmpDataSFASTScale2_V_fu_1215_p6(to_integer(unsigned(index_assign_1_3_i_i_fu_1292_p1)) downto to_integer(unsigned(index_assign_1_3_i_i_fu_1292_p1))) when (to_integer(unsigned(index_assign_1_3_i_i_fu_1292_p1))>= 0 and to_integer(unsigned(index_assign_1_3_i_i_fu_1292_p1))<=127) else "-";
    tmp_104_fu_1332_p1 <= tmpTmpDataSFASTScale_fu_1326_p2(1 - 1 downto 0);
    
    tmp_105_fu_1340_p4_proc : process(tmpDataSFASTScale2_V_fu_1215_p6, index_assign_1_i_i_fu_1235_p1, p_Repl2_5_i_i_fu_1336_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_105_fu_1340_p4 <= tmpDataSFASTScale2_V_fu_1215_p6;
        if to_integer(unsigned(index_assign_1_i_i_fu_1235_p1)) >= tmpDataSFASTScale2_V_fu_1215_p6'low and to_integer(unsigned(index_assign_1_i_i_fu_1235_p1)) <= tmpDataSFASTScale2_V_fu_1215_p6'high then
            result(0) := '0';
            for i in p_Repl2_5_i_i_fu_1336_p1'range loop
                result(0) := result(0) or p_Repl2_5_i_i_fu_1336_p1(i);
            end loop;
            tmp_105_fu_1340_p4(to_integer(unsigned(index_assign_1_i_i_fu_1235_p1))) <= result(0);
        end if;
    end process;

    tmp_106_fu_1350_p3 <= tmpTmpDataSFASTScale_fu_1326_p2(1 downto 1);
    
    tmp_107_fu_1362_p4_proc : process(tmp_105_fu_1340_p4, index_assign_1_1_i_i_fu_1254_p1, p_Repl2_5_1_i_i_fu_1358_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_107_fu_1362_p4 <= tmp_105_fu_1340_p4;
        if to_integer(unsigned(index_assign_1_1_i_i_fu_1254_p1)) >= tmp_105_fu_1340_p4'low and to_integer(unsigned(index_assign_1_1_i_i_fu_1254_p1)) <= tmp_105_fu_1340_p4'high then
            result(0) := '0';
            for i in p_Repl2_5_1_i_i_fu_1358_p1'range loop
                result(0) := result(0) or p_Repl2_5_1_i_i_fu_1358_p1(i);
            end loop;
            tmp_107_fu_1362_p4(to_integer(unsigned(index_assign_1_1_i_i_fu_1254_p1))) <= result(0);
        end if;
    end process;

    tmp_108_fu_1372_p3 <= tmpTmpDataSFASTScale_fu_1326_p2(2 downto 2);
    
    tmp_109_fu_1384_p4_proc : process(tmp_107_fu_1362_p4, index_assign_1_2_i_i_fu_1273_p1, p_Repl2_5_2_i_i_fu_1380_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_109_fu_1384_p4 <= tmp_107_fu_1362_p4;
        if to_integer(unsigned(index_assign_1_2_i_i_fu_1273_p1)) >= tmp_107_fu_1362_p4'low and to_integer(unsigned(index_assign_1_2_i_i_fu_1273_p1)) <= tmp_107_fu_1362_p4'high then
            result(0) := '0';
            for i in p_Repl2_5_2_i_i_fu_1380_p1'range loop
                result(0) := result(0) or p_Repl2_5_2_i_i_fu_1380_p1(i);
            end loop;
            tmp_109_fu_1384_p4(to_integer(unsigned(index_assign_1_2_i_i_fu_1273_p1))) <= result(0);
        end if;
    end process;

    tmp_10_fu_1196_p3 <= (tmp_36_cast_i_reg_1628 & ap_const_lv2_3);
    tmp_110_fu_1394_p3 <= tmpTmpDataSFASTScale_fu_1326_p2(3 downto 3);
    
    tmp_111_fu_1406_p4_proc : process(tmp_109_fu_1384_p4, index_assign_1_3_i_i_fu_1292_p1, p_Repl2_5_3_i_i_fu_1402_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_111_fu_1406_p4 <= tmp_109_fu_1384_p4;
        if to_integer(unsigned(index_assign_1_3_i_i_fu_1292_p1)) >= tmp_109_fu_1384_p4'low and to_integer(unsigned(index_assign_1_3_i_i_fu_1292_p1)) <= tmp_109_fu_1384_p4'high then
            result(0) := '0';
            for i in p_Repl2_5_3_i_i_fu_1402_p1'range loop
                result(0) := result(0) or p_Repl2_5_3_i_i_fu_1402_p1(i);
            end loop;
            tmp_111_fu_1406_p4(to_integer(unsigned(index_assign_1_3_i_i_fu_1292_p1))) <= result(0);
        end if;
    end process;

    tmp_112_fu_528_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_i_fu_524_p1)) downto to_integer(unsigned(index_assign_9_i_fu_524_p1))) when (to_integer(unsigned(index_assign_9_i_fu_524_p1))>= 0 and to_integer(unsigned(index_assign_9_i_fu_524_p1))<=95) else "-";
    tmp_113_fu_547_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_1_i_fu_543_p1)) downto to_integer(unsigned(index_assign_9_1_i_fu_543_p1))) when (to_integer(unsigned(index_assign_9_1_i_fu_543_p1))>= 0 and to_integer(unsigned(index_assign_9_1_i_fu_543_p1))<=95) else "-";
    tmp_114_fu_566_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_2_i_fu_562_p1)) downto to_integer(unsigned(index_assign_9_2_i_fu_562_p1))) when (to_integer(unsigned(index_assign_9_2_i_fu_562_p1))>= 0 and to_integer(unsigned(index_assign_9_2_i_fu_562_p1))<=95) else "-";
    tmp_115_fu_585_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_3_i_fu_581_p1)) downto to_integer(unsigned(index_assign_9_3_i_fu_581_p1))) when (to_integer(unsigned(index_assign_9_3_i_fu_581_p1))>= 0 and to_integer(unsigned(index_assign_9_3_i_fu_581_p1))<=95) else "-";
    tmp_116_fu_616_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_4_i_fu_612_p1)) downto to_integer(unsigned(index_assign_9_4_i_fu_612_p1))) when (to_integer(unsigned(index_assign_9_4_i_fu_612_p1))>= 0 and to_integer(unsigned(index_assign_9_4_i_fu_612_p1))<=95) else "-";
    tmp_117_fu_635_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_5_i_fu_631_p1)) downto to_integer(unsigned(index_assign_9_5_i_fu_631_p1))) when (to_integer(unsigned(index_assign_9_5_i_fu_631_p1))>= 0 and to_integer(unsigned(index_assign_9_5_i_fu_631_p1))<=95) else "-";
    tmp_118_fu_654_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_6_i_fu_650_p1)) downto to_integer(unsigned(index_assign_9_6_i_fu_650_p1))) when (to_integer(unsigned(index_assign_9_6_i_fu_650_p1))>= 0 and to_integer(unsigned(index_assign_9_6_i_fu_650_p1))<=95) else "-";
    tmp_119_fu_673_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_7_i_fu_669_p1)) downto to_integer(unsigned(index_assign_9_7_i_fu_669_p1))) when (to_integer(unsigned(index_assign_9_7_i_fu_669_p1))>= 0 and to_integer(unsigned(index_assign_9_7_i_fu_669_p1))<=95) else "-";
    tmp_120_fu_704_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_8_i_fu_700_p1)) downto to_integer(unsigned(index_assign_9_8_i_fu_700_p1))) when (to_integer(unsigned(index_assign_9_8_i_fu_700_p1))>= 0 and to_integer(unsigned(index_assign_9_8_i_fu_700_p1))<=95) else "-";
    tmp_121_fu_723_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_9_i_fu_719_p1)) downto to_integer(unsigned(index_assign_9_9_i_fu_719_p1))) when (to_integer(unsigned(index_assign_9_9_i_fu_719_p1))>= 0 and to_integer(unsigned(index_assign_9_9_i_fu_719_p1))<=95) else "-";
    tmp_122_fu_742_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_i_43_fu_738_p1)) downto to_integer(unsigned(index_assign_9_i_43_fu_738_p1))) when (to_integer(unsigned(index_assign_9_i_43_fu_738_p1))>= 0 and to_integer(unsigned(index_assign_9_i_43_fu_738_p1))<=95) else "-";
    tmp_123_fu_761_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_10_i_fu_757_p1)) downto to_integer(unsigned(index_assign_9_10_i_fu_757_p1))) when (to_integer(unsigned(index_assign_9_10_i_fu_757_p1))>= 0 and to_integer(unsigned(index_assign_9_10_i_fu_757_p1))<=95) else "-";
    tmp_124_fu_792_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_11_i_fu_788_p1)) downto to_integer(unsigned(index_assign_9_11_i_fu_788_p1))) when (to_integer(unsigned(index_assign_9_11_i_fu_788_p1))>= 0 and to_integer(unsigned(index_assign_9_11_i_fu_788_p1))<=95) else "-";
    tmp_125_fu_811_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_12_i_fu_807_p1)) downto to_integer(unsigned(index_assign_9_12_i_fu_807_p1))) when (to_integer(unsigned(index_assign_9_12_i_fu_807_p1))>= 0 and to_integer(unsigned(index_assign_9_12_i_fu_807_p1))<=95) else "-";
    tmp_126_fu_830_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_13_i_fu_826_p1)) downto to_integer(unsigned(index_assign_9_13_i_fu_826_p1))) when (to_integer(unsigned(index_assign_9_13_i_fu_826_p1))>= 0 and to_integer(unsigned(index_assign_9_13_i_fu_826_p1))<=95) else "-";
    tmp_127_fu_849_p3 <= ap_const_lv96_2F1E0EFEEFE0E1F202122120(to_integer(unsigned(index_assign_9_14_i_fu_845_p1)) downto to_integer(unsigned(index_assign_9_14_i_fu_845_p1))) when (to_integer(unsigned(index_assign_9_14_i_fu_845_p1))>= 0 and to_integer(unsigned(index_assign_9_14_i_fu_845_p1))<=95) else "-";
        tmp_128_fu_891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_19_i_fu_681_p5),9));

    tmp_129_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_i_fu_871_p4),9));
    tmp_12_fu_1464_p3 <= (tmp_51_cast_i_reg_1656_pp0_iter3_reg & ap_const_lv2_0);
    tmp_130_fu_919_p4 <= tmp_42_i_fu_885_p2(9 downto 5);
    tmp_131_fu_933_p2 <= std_logic_vector(signed(tmp_128_fu_891_p1) + signed(tmp_129_fu_895_p1));
    tmp_132_fu_1150_p3 <= tmp_6_fu_1125_p6(to_integer(unsigned(index_assign_11_0_i_fu_1146_p1)) downto to_integer(unsigned(index_assign_11_0_i_fu_1146_p1))) when (to_integer(unsigned(index_assign_11_0_i_fu_1146_p1))>= 0 and to_integer(unsigned(index_assign_11_0_i_fu_1146_p1))<=127) else "-";
    tmp_133_fu_1169_p3 <= tmp_6_fu_1125_p6(to_integer(unsigned(index_assign_11_0_1_s_fu_1165_p1)) downto to_integer(unsigned(index_assign_11_0_1_s_fu_1165_p1))) when (to_integer(unsigned(index_assign_11_0_1_s_fu_1165_p1))>= 0 and to_integer(unsigned(index_assign_11_0_1_s_fu_1165_p1))<=127) else "-";
    tmp_134_fu_1188_p3 <= tmp_6_fu_1125_p6(to_integer(unsigned(index_assign_11_0_2_s_fu_1184_p1)) downto to_integer(unsigned(index_assign_11_0_2_s_fu_1184_p1))) when (to_integer(unsigned(index_assign_11_0_2_s_fu_1184_p1))>= 0 and to_integer(unsigned(index_assign_11_0_2_s_fu_1184_p1))<=127) else "-";
    tmp_135_fu_1207_p3 <= tmp_6_fu_1125_p6(to_integer(unsigned(index_assign_11_0_3_s_fu_1203_p1)) downto to_integer(unsigned(index_assign_11_0_3_s_fu_1203_p1))) when (to_integer(unsigned(index_assign_11_0_3_s_fu_1203_p1))>= 0 and to_integer(unsigned(index_assign_11_0_3_s_fu_1203_p1))<=127) else "-";
        tmp_136_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Result_63_1_i_fu_971_p5),9));

    tmp_137_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_i_fu_871_p4),9));
    tmp_138_fu_1001_p4 <= tmp_42_1_i_fu_965_p2(9 downto 5);
    tmp_139_fu_1015_p2 <= std_logic_vector(signed(tmp_136_fu_983_p1) + signed(tmp_137_fu_987_p1));
    tmp_13_fu_1483_p3 <= (tmp_51_cast_i_reg_1656_pp0_iter3_reg & ap_const_lv2_1);
    tmp_140_fu_1475_p3 <= tmp_11_fu_1451_p6(to_integer(unsigned(index_assign_11_1_i_fu_1471_p1)) downto to_integer(unsigned(index_assign_11_1_i_fu_1471_p1))) when (to_integer(unsigned(index_assign_11_1_i_fu_1471_p1))>= 0 and to_integer(unsigned(index_assign_11_1_i_fu_1471_p1))<=127) else "-";
    tmp_141_fu_1494_p3 <= tmp_11_fu_1451_p6(to_integer(unsigned(index_assign_11_1_1_s_fu_1490_p1)) downto to_integer(unsigned(index_assign_11_1_1_s_fu_1490_p1))) when (to_integer(unsigned(index_assign_11_1_1_s_fu_1490_p1))>= 0 and to_integer(unsigned(index_assign_11_1_1_s_fu_1490_p1))<=127) else "-";
    tmp_142_fu_1513_p3 <= tmp_11_fu_1451_p6(to_integer(unsigned(index_assign_11_1_2_s_fu_1509_p1)) downto to_integer(unsigned(index_assign_11_1_2_s_fu_1509_p1))) when (to_integer(unsigned(index_assign_11_1_2_s_fu_1509_p1))>= 0 and to_integer(unsigned(index_assign_11_1_2_s_fu_1509_p1))<=127) else "-";
    tmp_143_fu_1532_p3 <= tmp_11_fu_1451_p6(to_integer(unsigned(index_assign_11_1_3_s_fu_1528_p1)) downto to_integer(unsigned(index_assign_11_1_3_s_fu_1528_p1))) when (to_integer(unsigned(index_assign_11_1_3_s_fu_1528_p1))>= 0 and to_integer(unsigned(index_assign_11_1_3_s_fu_1528_p1))<=127) else "-";
    tmp_144_fu_1427_p1 <= resetCnt_V(9 - 1 downto 0);
    tmp_14_fu_1502_p3 <= (tmp_51_cast_i_reg_1656_pp0_iter3_reg & ap_const_lv2_2);
    tmp_14_i_fu_593_p5 <= (((tmp_115_fu_585_p3 & tmp_114_fu_566_p3) & tmp_113_fu_547_p3) & tmp_112_fu_528_p3);
    tmp_15_fu_1521_p3 <= (tmp_51_cast_i_reg_1656_pp0_iter3_reg & ap_const_lv2_3);
    tmp_19_i_fu_681_p5 <= (((tmp_119_fu_673_p3 & tmp_118_fu_654_p3) & tmp_117_fu_635_p3) & tmp_116_fu_616_p3);
    tmp_1_fu_903_p4 <= tmp_V_fu_184(6 downto 2);
    tmp_24_i_fu_769_p5 <= (((tmp_123_fu_761_p3 & tmp_122_fu_742_p3) & tmp_121_fu_723_p3) & tmp_120_fu_704_p3);
    tmp_29_i_fu_857_p4 <= tmp_V_fu_184(9 downto 2);
        tmp_2_fu_991_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_i_fu_769_p5),5));

    tmp_30_i_fu_1439_p2 <= std_logic_vector(unsigned(resetCnt_V) + unsigned(ap_const_lv10_1));
    tmp_31_i_fu_1095_p2 <= "1" when (tsStream_V_V_dout = ap_const_lv32_0) else "0";
    tmp_32_i_fu_871_p4 <= tmp_V_1_fu_188(9 downto 2);
    tmp_33_fu_1069_p3 <= (ySFASTScale2_V_fu_1035_p4 & ap_const_lv2_0);
    tmp_33_i_fu_1119_p2 <= std_logic_vector(unsigned(tmp_V_2_fu_192) + unsigned(ap_const_lv2_1));
    tmp_34_fu_1081_p2 <= std_logic_vector(unsigned(tmp_48_cast_fu_1077_p1) + unsigned(tmp_3_i_i_cast_fu_1065_p1));
    tmp_35_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_i_fu_857_p4),10));
    tmp_36_cast_i_fu_913_p2 <= std_logic_vector(signed(tmp_fu_899_p1) + signed(tmp_1_fu_903_p4));
    tmp_36_fu_947_p2 <= std_logic_vector(unsigned(tmp_53_cast_fu_939_p3) + unsigned(tmp_47_i_cast_fu_929_p1));
    tmp_37_fu_1029_p2 <= std_logic_vector(unsigned(tmp_56_cast_fu_1021_p3) + unsigned(tmp_47_1_i_cast_fu_1011_p1));
    tmp_38_fu_1540_p4 <= tmp_V_s_reg_443(47 downto 8);
    tmp_39_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_144_fu_1427_p1),64));
    tmp_3_fu_1247_p3 <= (xNewIdxSFASTScale2_V_reg_1674 & ap_const_lv2_1);
    tmp_3_i_i_cast_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_99_fu_1055_p4),11));
        tmp_41_1_i_fu_961_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_i_fu_769_p5),10));

        tmp_41_i_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_i_fu_593_p5),10));

    tmp_42_1_i_fu_965_p2 <= std_logic_vector(signed(tmp_41_1_i_fu_961_p1) + signed(tmp_35_fu_867_p1));
    tmp_42_i_fu_885_p2 <= std_logic_vector(signed(tmp_41_i_fu_881_p1) + signed(tmp_35_fu_867_p1));
    tmp_47_1_i_cast_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_138_fu_1001_p4),11));
    tmp_47_i_cast_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_130_fu_919_p4),11));
    tmp_48_cast_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_fu_1069_p3),11));
    tmp_49_cast_fu_1087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_1081_p2),64));
    tmp_4_fu_1266_p3 <= (xNewIdxSFASTScale2_V_reg_1674 & ap_const_lv2_2);
    tmp_51_cast_i_fu_995_p2 <= std_logic_vector(signed(tmp_2_fu_991_p1) + signed(tmp_1_fu_903_p4));
    tmp_53_cast_fu_939_p3 <= (tmp_131_fu_933_p2 & ap_const_lv2_0);
    tmp_54_cast_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_947_p2),64));
    tmp_56_cast_fu_1021_p3 <= (tmp_139_fu_1015_p2 & ap_const_lv2_0);
    tmp_57_cast_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_reg_1664_pp0_iter2_reg),64));
    tmp_5_fu_1285_p3 <= (xNewIdxSFASTScale2_V_reg_1674 & ap_const_lv2_3);
    tmp_6_fu_1125_p5 <= std_logic_vector(unsigned(tmp_V_2_fu_192) + unsigned(ap_const_lv2_1));
    tmp_7_fu_1139_p3 <= (tmp_36_cast_i_reg_1628 & ap_const_lv2_0);
    tmp_8_fu_1158_p3 <= (tmp_36_cast_i_reg_1628 & ap_const_lv2_1);
    tmp_99_fu_1055_p4 <= xStream_V_V_dout(9 downto 7);
    tmp_9_fu_1177_p3 <= (tmp_36_cast_i_reg_1628 & ap_const_lv2_2);
    tmp_9_i_i_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cmpFlgSFASTScale2_V_fu_1316_p2),4));
        tmp_fu_899_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_i_fu_593_p5),5));

    tmp_i_44_fu_505_p2 <= "1" when (signed(i_V_fu_499_p2) < signed(ap_const_lv5_C)) else "0";
    tmp_i_fu_483_p2 <= "1" when (ap_phi_mux_p_4_i_phi_fu_404_p6 = ap_const_lv5_1E) else "0";
    tmp_s_fu_1228_p3 <= (xNewIdxSFASTScale2_V_reg_1674 & ap_const_lv2_0);

    tsStream_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, tsStream_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            tsStream_V_V_blk_n <= tsStream_V_V_empty_n;
        else 
            tsStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tsStream_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tsStream_V_V_read <= ap_const_logic_1;
        else 
            tsStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    xStream_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, xStream_V_V_empty_n, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            xStream_V_V_blk_n <= xStream_V_V_empty_n;
        else 
            xStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    xStream_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            xStream_V_V_read <= ap_const_logic_1;
        else 
            xStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ySFASTScale2_V_fu_1035_p4 <= yStream_V_V_dout(9 downto 2);

    yStream_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, yStream_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            yStream_V_V_blk_n <= yStream_V_V_empty_n;
        else 
            yStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    yStream_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_i_reg_1595, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((tmp_i_reg_1595 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            yStream_V_V_read <= ap_const_logic_1;
        else 
            yStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;

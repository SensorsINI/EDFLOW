// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// config
// 0x00 : reserved
// 0x04 : reserved
// 0x08 : reserved
// 0x0c : reserved
// 0x10 : Data signal of config_V
//        bit 31~0 - config_V[31:0] (Read/Write)
// 0x14 : reserved
// 0x18 : Data signal of status_inEventsNum
//        bit 31~0 - status_inEventsNum[31:0] (Read)
// 0x1c : Data signal of status_inEventsNum
//        bit 31~0 - status_inEventsNum[63:32] (Read)
// 0x20 : Control signal of status_inEventsNum
//        bit 0  - status_inEventsNum_ap_vld (Read/COR)
//        others - reserved
// 0x24 : Data signal of status_outEventsNum
//        bit 31~0 - status_outEventsNum[31:0] (Read)
// 0x28 : Data signal of status_outEventsNum
//        bit 31~0 - status_outEventsNum[63:32] (Read)
// 0x2c : Control signal of status_outEventsNum
//        bit 0  - status_outEventsNum_ap_vld (Read/COR)
//        others - reserved
// 0x30 : Data signal of status_cornerEventsNum
//        bit 31~0 - status_cornerEventsNum[31:0] (Read)
// 0x34 : Data signal of status_cornerEventsNum
//        bit 31~0 - status_cornerEventsNum[63:32] (Read)
// 0x38 : Control signal of status_cornerEventsNum
//        bit 0  - status_cornerEventsNum_ap_vld (Read/COR)
//        others - reserved
// 0x3c : Data signal of status_currentThreshold
//        bit 31~0 - status_currentThreshold[31:0] (Read)
// 0x40 : Control signal of status_currentThreshold
//        bit 0  - status_currentThreshold_ap_vld (Read/COR)
//        others - reserved
// 0x44 : Data signal of status_currentAreaCntThr
//        bit 31~0 - status_currentAreaCntThr[31:0] (Read)
// 0x48 : Control signal of status_currentAreaCntThr
//        bit 0  - status_currentAreaCntThr_ap_vld (Read/COR)
//        others - reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XSFAST_PROCESS_DATA_CONFIG_ADDR_CONFIG_V_DATA                 0x10
#define XSFAST_PROCESS_DATA_CONFIG_BITS_CONFIG_V_DATA                 32
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_INEVENTSNUM_DATA       0x18
#define XSFAST_PROCESS_DATA_CONFIG_BITS_STATUS_INEVENTSNUM_DATA       64
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_INEVENTSNUM_CTRL       0x20
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_OUTEVENTSNUM_DATA      0x24
#define XSFAST_PROCESS_DATA_CONFIG_BITS_STATUS_OUTEVENTSNUM_DATA      64
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_OUTEVENTSNUM_CTRL      0x2c
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_CORNEREVENTSNUM_DATA   0x30
#define XSFAST_PROCESS_DATA_CONFIG_BITS_STATUS_CORNEREVENTSNUM_DATA   64
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_CORNEREVENTSNUM_CTRL   0x38
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_CURRENTTHRESHOLD_DATA  0x3c
#define XSFAST_PROCESS_DATA_CONFIG_BITS_STATUS_CURRENTTHRESHOLD_DATA  32
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_CURRENTTHRESHOLD_CTRL  0x40
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_CURRENTAREACNTTHR_DATA 0x44
#define XSFAST_PROCESS_DATA_CONFIG_BITS_STATUS_CURRENTAREACNTTHR_DATA 32
#define XSFAST_PROCESS_DATA_CONFIG_ADDR_STATUS_CURRENTAREACNTTHR_CTRL 0x48


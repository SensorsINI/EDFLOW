-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity eventStreamToConstEncntFrameStream is
generic (
    C_S_AXI_CONFIG_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CONFIG_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    frameStream_TREADY : IN STD_LOGIC;
    xStream_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    xStream_V_V_TVALID : IN STD_LOGIC;
    xStream_V_V_TREADY : OUT STD_LOGIC;
    yStream_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    yStream_V_V_TVALID : IN STD_LOGIC;
    yStream_V_V_TREADY : OUT STD_LOGIC;
    polStream_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    polStream_V_V_TVALID : IN STD_LOGIC;
    polStream_V_V_TREADY : OUT STD_LOGIC;
    tsStream_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    tsStream_V_V_TVALID : IN STD_LOGIC;
    tsStream_V_V_TREADY : OUT STD_LOGIC;
    custDataStream_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    custDataStream_V_V_TVALID : IN STD_LOGIC;
    custDataStream_V_V_TREADY : OUT STD_LOGIC;
    count_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    count_V_ap_vld : OUT STD_LOGIC;
    vgaEn_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    vgaEn_V_ap_vld : OUT STD_LOGIC;
    vCnt_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    vCnt_V_ap_vld : OUT STD_LOGIC;
    hCnt_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    hCnt_V_ap_vld : OUT STD_LOGIC;
    regX_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    regX_V_ap_vld : OUT STD_LOGIC;
    regY_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    regY_V_ap_vld : OUT STD_LOGIC;
    polReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    polReg_V_ap_vld : OUT STD_LOGIC;
    skipFlgOutput_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    skipFlgOutput_V_ap_vld : OUT STD_LOGIC;
    tsReg_V : OUT STD_LOGIC_VECTOR (31 downto 0);
    tsReg_V_ap_vld : OUT STD_LOGIC;
    frameStream_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    frameStream_TVALID : OUT STD_LOGIC;
    frameStream_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    frameStream_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    frameStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    frameStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    frameStream_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    frameStream_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_config_AWVALID : IN STD_LOGIC;
    s_axi_config_AWREADY : OUT STD_LOGIC;
    s_axi_config_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_config_WVALID : IN STD_LOGIC;
    s_axi_config_WREADY : OUT STD_LOGIC;
    s_axi_config_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_config_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH/8-1 downto 0);
    s_axi_config_ARVALID : IN STD_LOGIC;
    s_axi_config_ARREADY : OUT STD_LOGIC;
    s_axi_config_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_config_RVALID : OUT STD_LOGIC;
    s_axi_config_RREADY : IN STD_LOGIC;
    s_axi_config_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_config_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_config_BVALID : OUT STD_LOGIC;
    s_axi_config_BREADY : IN STD_LOGIC;
    s_axi_config_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of eventStreamToConstEncntFrameStream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "eventStreamToConstEncntFrameStream,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=10.650750,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=228,HLS_SYN_DSP=1,HLS_SYN_FF=4014,HLS_SYN_LUT=1955}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv12_2B3 : STD_LOGIC_VECTOR (11 downto 0) := "001010110011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv12_207 : STD_LOGIC_VECTOR (11 downto 0) := "001000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_31F : STD_LOGIC_VECTOR (11 downto 0) := "001100011111";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_320 : STD_LOGIC_VECTOR (11 downto 0) := "001100100000";
    constant ap_const_lv12_258 : STD_LOGIC_VECTOR (11 downto 0) := "001001011000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv18_10000 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv8_AA : STD_LOGIC_VECTOR (7 downto 0) := "10101010";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv16_C7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000011000111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv34_186A0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000011000011010100000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal polStream_V_V_0_vld_out : STD_LOGIC;
    signal empty_n_reg_2740 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_1_reg_2752 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op28_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal frameStream_V_data_V_1_ack_in : STD_LOGIC;
    signal vgaOutputEn_load_reg_2851 : STD_LOGIC_VECTOR (0 downto 0);
    signal vgaOutputEn_load_reg_2851_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_io : BOOLEAN;
    signal frameStream_V_keep_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_strb_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_user_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_last_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_id_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_dest_V_1_ack_in : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal vgaOutputEn_load_reg_2851_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal polStream_V_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal polStream_V_V_0_vld_in : STD_LOGIC;
    signal polStream_V_V_0_ack_in : STD_LOGIC;
    signal polStream_V_V_0_ack_out : STD_LOGIC;
    signal polStream_V_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal polStream_V_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal polStream_V_V_0_sel_rd : STD_LOGIC := '0';
    signal polStream_V_V_0_sel_wr : STD_LOGIC := '0';
    signal polStream_V_V_0_sel : STD_LOGIC;
    signal polStream_V_V_0_load_A : STD_LOGIC;
    signal polStream_V_V_0_load_B : STD_LOGIC;
    signal polStream_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal polStream_V_V_0_state_cmp_full : STD_LOGIC;
    signal configRegs_V : STD_LOGIC_VECTOR (15 downto 0);
    signal configRegs_V_0_data_reg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal configRegs_V_0_vld_reg : STD_LOGIC := '0';
    signal configRegs_V_0_ack_out : STD_LOGIC;
    signal ctrl_V : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl_V_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ctrl_V_0_vld_reg : STD_LOGIC := '0';
    signal ctrl_V_0_ack_out : STD_LOGIC;
    signal frameStream_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_data_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_data_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_data_V_1_sel : STD_LOGIC;
    signal frameStream_V_data_V_1_load_A : STD_LOGIC;
    signal frameStream_V_data_V_1_load_B : STD_LOGIC;
    signal frameStream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal frameStream_V_keep_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_keep_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_keep_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_keep_V_1_sel : STD_LOGIC;
    signal frameStream_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal frameStream_V_strb_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_strb_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_strb_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_strb_V_1_sel : STD_LOGIC;
    signal frameStream_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_user_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_user_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_user_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_user_V_1_sel : STD_LOGIC;
    signal frameStream_V_user_V_1_load_A : STD_LOGIC;
    signal frameStream_V_user_V_1_load_B : STD_LOGIC;
    signal frameStream_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_last_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_last_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_last_V_1_sel : STD_LOGIC;
    signal frameStream_V_last_V_1_load_A : STD_LOGIC;
    signal frameStream_V_last_V_1_load_B : STD_LOGIC;
    signal frameStream_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_id_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_id_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_id_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_id_V_1_sel : STD_LOGIC;
    signal frameStream_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_dest_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_dest_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_dest_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_dest_V_1_sel : STD_LOGIC;
    signal frameStream_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal sliceDurationMs_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001010";
    signal currentStoreSliceIdx : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal hCntReg_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal vCntReg_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal glDVSSlice_V_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_ce0 : STD_LOGIC;
    signal glDVSSlice_V_0_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_ce1 : STD_LOGIC;
    signal glDVSSlice_V_0_we1 : STD_LOGIC;
    signal glDVSSlice_V_0_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_ce0 : STD_LOGIC;
    signal glDVSSlice_V_1_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_ce1 : STD_LOGIC;
    signal glDVSSlice_V_1_we1 : STD_LOGIC;
    signal glDVSSlice_V_1_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal vgaOutputEn : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cntReg_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal startX_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal startY_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal evCntReg_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal polStream_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal frameStream_TDATA_blk_n : STD_LOGIC;
    signal p_01431_1_reg_439 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_01431_1_reg_439_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_01431_1_reg_439_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal hCntReg_V_load_2_reg_497 : STD_LOGIC_VECTOR (11 downto 0);
    signal hCntReg_V_load_2_reg_497_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal hCntReg_V_load_2_reg_497_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_2_reg_510 : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_2_reg_510_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_2_reg_510_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal p_01427_s_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_01427_s_reg_568_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_reg_584_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_2_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_2_reg_614_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_715 : STD_LOGIC_VECTOR (1 downto 0);
    signal currentStoreSliceIdx_1_load_fu_786_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_719 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_n_fu_723_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_reg_2740_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_2744 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2744_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2744_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2744_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_n_1_fu_731_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_1_reg_2752_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_1_reg_2756 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_1_reg_2756_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_3_reg_2762 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_3_reg_2762_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_4_reg_2767 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_4_reg_2767_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ctrl_V_read_reg_2772 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_747_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_2778 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_fu_757_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_reg_2782 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_770_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_fu_2734_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_reg_2792 : STD_LOGIC_VECTOR (33 downto 0);
    signal currentStoreSliceIdx_1_reg_2797 : STD_LOGIC_VECTOR (0 downto 0);
    signal currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal vCntReg_V_load_reg_2801 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_addr_reg_2807 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_addr_reg_2807_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_addr_reg_2813 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_addr_reg_2813_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_2819 : STD_LOGIC_VECTOR (0 downto 0);
    signal glDVSSlice_V_1_addr_1_reg_2825 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_addr_1_reg_2825_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_2831 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_2831_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_2835 : STD_LOGIC_VECTOR (0 downto 0);
    signal glDVSSlice_V_0_addr_1_reg_2841 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_addr_1_reg_2841_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_61_reg_2847 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_2847_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal vgaOutputEn_load_load_fu_899_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_2855 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_2855_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_2861 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_2861_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_2868 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_91_reg_2868_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_3_fu_985_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_3_reg_2876 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_3_reg_2876_pp0_iter4_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_3_reg_2876_pp0_iter5_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_97_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_2881 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_2881_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_reg_2881_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1042_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_reg_2885 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_reg_2885_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_134_fu_1444_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_134_reg_2890 : STD_LOGIC_VECTOR (511 downto 0);
    signal newSel5_fu_1714_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_159_fu_1792_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_159_reg_2900 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_64_fu_2201_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_64_reg_2905 : STD_LOGIC_VECTOR (511 downto 0);
    signal newSel3_fu_2471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_151_fu_2549_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_151_reg_2915 : STD_LOGIC_VECTOR (511 downto 0);
    signal rgbStreamData_data_V_fu_2623_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_user_V_fu_2632_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_ctrl_V_buf_reg_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_ctrl_V_buf_reg_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_430 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_01431_1_reg_439 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_01431_1_reg_439 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_01431_1_reg_439 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_01431_1_reg_439 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_hCntReg_V_flag_phi_fu_457_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_454 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vCntReg_V_flag_phi_fu_472_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_469 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_flag_phi_fu_487_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_484 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_92_fu_938_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter3_hCntReg_V_load_2_reg_497 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_vCntReg_V_load_2_phi_fu_513_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter3_vCntReg_V_load_2_reg_510 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_tmp_1_fu_964_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_val_assign_1_phi_fu_525_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_val_assign_1_reg_522 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_flag_1_phi_fu_538_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_535 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_new_1_phi_fu_550_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_547 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_t_V_2_phi_fu_561_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_2_reg_558 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_p_01427_s_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_01427_s_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_p_01427_s_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_p_01427_s_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_p_01427_s_reg_568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_2_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_2_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_p_2_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_p_2_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_p_2_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_tmpPixVal_V_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_tmpPixVal_V_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_tmpPixVal_V_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_tmpPixVal_V_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_tmpPixVal_V_reg_600 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_val_assign_2_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_val_assign_2_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_val_assign_2_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_val_assign_2_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_val_assign_2_reg_614 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_8_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_8_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_8_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_8_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_8_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_8_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_val_assign_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_val_assign_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_val_assign_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_val_assign_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_val_assign_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_val_assign_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_val_assign_reg_641 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_cast_fu_847_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_111_cast_fu_871_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_106_cast_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_s_fu_790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_1016_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_tmp_s_fu_2660_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge1_fu_2690_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_103_fu_2708_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_count_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_vgaEn_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_vCnt_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_hCnt_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_regX_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_regY_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_polReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_tsReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_skipFlgOutput_V_dummy_ack : STD_LOGIC := '0';
    signal tmp_12_fu_815_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_803_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_761_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_20_fu_824_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_cast_fu_833_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_fu_820_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_841_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_669_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_678_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_109_fu_857_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_36_cast_fu_853_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_111_fu_865_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_73_fu_880_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_31_cast_fu_876_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_74_fu_888_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_160_fu_904_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_90_fu_926_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_94_fu_951_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_96_cast_fu_989_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_105_fu_1045_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_63_fu_1048_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_fu_1056_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_1068_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_1_fu_1076_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_1088_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_2_fu_1096_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_1108_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_3_fu_1116_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_1128_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_4_fu_1136_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_1148_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_5_fu_1156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_1168_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_6_fu_1176_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_fu_1188_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_7_fu_1196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_117_fu_1200_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_1180_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_1160_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_1140_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_fu_1120_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_fu_1100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_1080_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_fu_1060_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_57_7_fu_1208_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal polVal_cast_cast_fu_1034_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal addconv1_fu_1228_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1242_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_22_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpPixVal_V_2_fu_1234_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpPixVal_V_4_fu_1256_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_01419_0_1_fu_1266_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_fu_1274_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_119_fu_1282_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_1286_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_121_fu_1300_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_120_fu_1290_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_1_fu_1308_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_123_fu_1322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_122_fu_1312_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_2_fu_1330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_125_fu_1344_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_124_fu_1334_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_3_fu_1352_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_127_fu_1366_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_126_fu_1356_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_4_fu_1374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_129_fu_1388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_1378_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_5_fu_1396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_131_fu_1410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_1400_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_6_fu_1418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_133_fu_1432_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_fu_1422_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_7_fu_1440_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_706_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_77_fu_1459_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_3_fu_1467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_1479_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_1_fu_1487_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_1499_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_2_fu_1507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_1519_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_3_fu_1527_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_1539_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_4_fu_1547_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_1559_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_5_fu_1567_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_1579_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_6_fu_1587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_96_fu_1599_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_7_fu_1607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_143_fu_1611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_fu_1591_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_fu_1571_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_140_fu_1551_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_fu_1531_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_fu_1511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_fu_1491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_fu_1471_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_65_7_fu_1619_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp4_demorgan_fu_1657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_10_fu_1454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp38_demorgan_fu_1674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_1680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_1686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vgaReadPixVal_V_3_fu_1651_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal vgaReadPixVal_V_1_fu_1645_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp5_fu_1668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_1692_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel4_fu_1706_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_152_fu_1722_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_153_fu_1732_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_154_fu_1742_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_155_fu_1752_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_156_fu_1762_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_157_fu_1772_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_158_fu_1782_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_21_fu_1802_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_1805_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_s_fu_1813_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1825_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_1_fu_1833_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1845_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_2_fu_1853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1865_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_3_fu_1873_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1885_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_4_fu_1893_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1905_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_5_fu_1913_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1925_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_6_fu_1933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1945_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_7_fu_1953_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1957_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1937_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_1897_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1857_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1837_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1817_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_73_7_fu_1965_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal addconv_fu_1985_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1999_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_19_fu_2017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpPixVal_V_1_fu_1991_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_2007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpPixVal_V_3_fu_2013_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_01419_0_s_fu_2023_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_2031_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_2039_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_8_fu_2043_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_2057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_2047_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_1_fu_2065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_2079_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_2069_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_2_fu_2087_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_2101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_2091_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_3_fu_2109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_2123_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_2113_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_4_fu_2131_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_2145_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_2135_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_5_fu_2153_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_2167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_2157_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_6_fu_2175_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_2189_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_2179_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_7_fu_2197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_2216_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_2_fu_2224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_2236_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_1_fu_2244_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_2256_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_2_fu_2264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_2276_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_3_fu_2284_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_2296_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_4_fu_2304_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_2316_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_5_fu_2324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_2336_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_6_fu_2344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_2356_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_7_fu_2364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_2368_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_2348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_87_fu_2328_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_fu_2308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_fu_2288_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_2268_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_fu_2248_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_2228_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_81_7_fu_2376_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp_demorgan_fu_2414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_2396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_2419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_11_fu_2211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp19_demorgan_fu_2431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_2437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_2443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal vgaReadPixVal_V_2_fu_2408_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal vgaReadPixVal_V_fu_2402_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp1_fu_2425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_2457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel1_fu_2449_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel2_fu_2463_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_144_fu_2479_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_145_fu_2489_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_146_fu_2499_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_147_fu_2509_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_148_fu_2519_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_149_fu_2529_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_150_fu_2539_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal vgaReadPixVal_V_5_fu_2571_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_163_fu_2583_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_161_fu_2559_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_2577_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel6_fu_2600_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp8_fu_2595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_2_fu_2587_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixVal_V_fu_2567_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_cond2_fu_2611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel57_cast_fu_2607_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal newSel7_fu_2616_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_98_fu_2648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_99_fu_2654_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_100_fu_2678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_2684_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_2734_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_fu_2734_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal r_V_fu_2734_p10 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_condition_121 : BOOLEAN;
    signal ap_condition_939 : BOOLEAN;

    component eventStreamToConsdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component eventStreamToConsbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component eventStreamToConstEncntFrameStream_config_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        configRegs_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        ctrl_V : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    glDVSSlice_V_0_U : component eventStreamToConsbkb
    generic map (
        DataWidth => 512,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => glDVSSlice_V_0_address0,
        ce0 => glDVSSlice_V_0_ce0,
        q0 => glDVSSlice_V_0_q0,
        address1 => glDVSSlice_V_0_address1,
        ce1 => glDVSSlice_V_0_ce1,
        we1 => glDVSSlice_V_0_we1,
        d1 => glDVSSlice_V_0_d1);

    glDVSSlice_V_1_U : component eventStreamToConsbkb
    generic map (
        DataWidth => 512,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => glDVSSlice_V_1_address0,
        ce0 => glDVSSlice_V_1_ce0,
        q0 => glDVSSlice_V_1_q0,
        address1 => glDVSSlice_V_1_address1,
        ce1 => glDVSSlice_V_1_ce1,
        we1 => glDVSSlice_V_1_we1,
        d1 => glDVSSlice_V_1_d1);

    eventStreamToConstEncntFrameStream_config_s_axi_U : component eventStreamToConstEncntFrameStream_config_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONFIG_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONFIG_DATA_WIDTH)
    port map (
        AWVALID => s_axi_config_AWVALID,
        AWREADY => s_axi_config_AWREADY,
        AWADDR => s_axi_config_AWADDR,
        WVALID => s_axi_config_WVALID,
        WREADY => s_axi_config_WREADY,
        WDATA => s_axi_config_WDATA,
        WSTRB => s_axi_config_WSTRB,
        ARVALID => s_axi_config_ARVALID,
        ARREADY => s_axi_config_ARREADY,
        ARADDR => s_axi_config_ARADDR,
        RVALID => s_axi_config_RVALID,
        RREADY => s_axi_config_RREADY,
        RDATA => s_axi_config_RDATA,
        RRESP => s_axi_config_RRESP,
        BVALID => s_axi_config_BVALID,
        BREADY => s_axi_config_BREADY,
        BRESP => s_axi_config_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        configRegs_V => configRegs_V,
        ctrl_V => ctrl_V);

    eventStreamToConsdEe_U1 : component eventStreamToConsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 16,
        dout_WIDTH => 34)
    port map (
        din0 => r_V_fu_2734_p0,
        din1 => r_V_fu_2734_p1,
        dout => r_V_fu_2734_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_count_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_hCnt_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_polReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_polReg_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_polReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_polReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_regX_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_regY_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_skipFlgOutput_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_skipFlgOutput_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_skipFlgOutput_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_skipFlgOutput_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_tsReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_tsReg_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_tsReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_tsReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_vCnt_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_vgaEn_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter6 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
                        ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_data_V_1_sel_rd <= not(frameStream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_data_V_1_ack_in = ap_const_logic_1) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_data_V_1_sel_wr <= not(frameStream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_state = ap_const_lv2_2)) or ((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_state = ap_const_lv2_1)) or ((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_data_V_1_state = ap_const_lv2_3)) or ((frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_1)) or ((frameStream_V_data_V_1_vld_in = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_dest_V_1_sel_rd <= not(frameStream_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_state = ap_const_lv2_2)) or ((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_state = ap_const_lv2_1)) or ((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_vld_in = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)) or ((frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_1)) or ((frameStream_V_dest_V_1_vld_in = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_id_V_1_sel_rd <= not(frameStream_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_state = ap_const_lv2_2)) or ((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_state = ap_const_lv2_1)) or ((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_vld_in = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_id_V_1_state = ap_const_lv2_3)) or ((frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_1)) or ((frameStream_V_id_V_1_vld_in = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_keep_V_1_sel_rd <= not(frameStream_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_state = ap_const_lv2_2)) or ((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_state = ap_const_lv2_1)) or ((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_vld_in = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)) or ((frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_1)) or ((frameStream_V_keep_V_1_vld_in = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_last_V_1_sel_rd <= not(frameStream_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_last_V_1_ack_in = ap_const_logic_1) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_last_V_1_sel_wr <= not(frameStream_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_state = ap_const_lv2_2)) or ((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_state = ap_const_lv2_1)) or ((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_last_V_1_state = ap_const_lv2_3)) or ((frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_1)) or ((frameStream_V_last_V_1_vld_in = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_strb_V_1_sel_rd <= not(frameStream_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_state = ap_const_lv2_2)) or ((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_state = ap_const_lv2_1)) or ((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_vld_in = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)) or ((frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_1)) or ((frameStream_V_strb_V_1_vld_in = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_user_V_1_sel_rd <= not(frameStream_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_user_V_1_ack_in = ap_const_logic_1) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_user_V_1_sel_wr <= not(frameStream_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_state = ap_const_lv2_2)) or ((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_state = ap_const_lv2_1)) or ((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_user_V_1_state = ap_const_lv2_3)) or ((frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_1)) or ((frameStream_V_user_V_1_vld_in = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    polStream_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStream_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((polStream_V_V_0_vld_out = ap_const_logic_1) and (polStream_V_V_0_ack_out = ap_const_logic_1))) then 
                                        polStream_V_V_0_sel_rd <= not(polStream_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    polStream_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStream_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((polStream_V_V_0_ack_in = ap_const_logic_1) and (polStream_V_V_0_vld_in = ap_const_logic_1))) then 
                                        polStream_V_V_0_sel_wr <= not(polStream_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    polStream_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStream_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((polStream_V_V_0_vld_in = ap_const_logic_0) and (polStream_V_V_0_state = ap_const_lv2_2)) or ((polStream_V_V_0_vld_in = ap_const_logic_0) and (polStream_V_V_0_ack_out = ap_const_logic_1) and (polStream_V_V_0_state = ap_const_lv2_3)))) then 
                    polStream_V_V_0_state <= ap_const_lv2_2;
                elsif ((((polStream_V_V_0_ack_out = ap_const_logic_0) and (polStream_V_V_0_state = ap_const_lv2_1)) or ((polStream_V_V_0_ack_out = ap_const_logic_0) and (polStream_V_V_0_vld_in = ap_const_logic_1) and (polStream_V_V_0_state = ap_const_lv2_3)))) then 
                    polStream_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((polStream_V_V_0_vld_in = ap_const_logic_0) and (polStream_V_V_0_ack_out = ap_const_logic_1))) and not(((polStream_V_V_0_ack_out = ap_const_logic_0) and (polStream_V_V_0_vld_in = ap_const_logic_1))) and (polStream_V_V_0_state = ap_const_lv2_3)) or ((polStream_V_V_0_ack_out = ap_const_logic_1) and (polStream_V_V_0_state = ap_const_lv2_1)) or ((polStream_V_V_0_vld_in = ap_const_logic_1) and (polStream_V_V_0_state = ap_const_lv2_2)))) then 
                    polStream_V_V_0_state <= ap_const_lv2_3;
                else 
                    polStream_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_01431_1_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_121)) then
                if (((empty_n_fu_723_p1 = ap_const_lv1_1) and (empty_n_1_fu_731_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_01431_1_reg_439 <= yStream_V_V_TDATA;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_01431_1_reg_439 <= ap_phi_reg_pp0_iter0_p_01431_1_reg_439;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_2_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_n_1_fu_731_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_n_fu_723_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_p_2_reg_584 <= ap_const_lv32_0;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_p_2_reg_584 <= ap_phi_reg_pp0_iter0_p_2_reg_584;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_tmpPixVal_V_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_n_1_fu_731_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_n_fu_723_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_tmpPixVal_V_reg_600 <= ap_const_lv8_0;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_tmpPixVal_V_reg_600 <= ap_phi_reg_pp0_iter0_tmpPixVal_V_reg_600;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_val_assign_2_reg_614_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_n_1_fu_731_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (empty_n_fu_723_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                ap_phi_reg_pp0_iter1_val_assign_2_reg_614 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_val_assign_2_reg_614 <= ap_phi_reg_pp0_iter0_val_assign_2_reg_614;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_939)) then
                if ((tmp_5_fu_747_p1 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_430 <= ctrl_V_0_data_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_430 <= ap_phi_reg_pp0_iter1_ctrl_V_buf_reg_430;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((tmp_5_reg_2778 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_430 <= tmp_2_fu_770_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_430 <= ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_430;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_p_01427_s_reg_568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((empty_n_1_reg_2752_pp0_iter1_reg = ap_const_lv1_1) and (empty_n_reg_2740_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_p_01427_s_reg_568 <= tmp_V_2_reg_2782;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_p_01427_s_reg_568 <= ap_phi_reg_pp0_iter2_p_01427_s_reg_568;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_p_01431_1_reg_439_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((empty_n_1_reg_2752_pp0_iter1_reg = ap_const_lv1_1) and (empty_n_reg_2740_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_p_01431_1_reg_439 <= tmp_V_1_reg_2756_pp0_iter1_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_p_01431_1_reg_439 <= ap_phi_reg_pp0_iter2_p_01431_1_reg_439;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_p_2_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((empty_n_1_reg_2752_pp0_iter1_reg = ap_const_lv1_1) and (empty_n_reg_2740_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_p_2_reg_584 <= tmp_V_3_reg_2762_pp0_iter1_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_p_2_reg_584 <= ap_phi_reg_pp0_iter2_p_2_reg_584;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_tmpPixVal_V_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((empty_n_1_reg_2752_pp0_iter1_reg = ap_const_lv1_1) and (empty_n_reg_2740_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_tmpPixVal_V_reg_600 <= tmp_V_4_reg_2767_pp0_iter1_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_tmpPixVal_V_reg_600 <= ap_phi_reg_pp0_iter2_tmpPixVal_V_reg_600;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_val_assign_2_reg_614_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((empty_n_1_reg_2752_pp0_iter1_reg = ap_const_lv1_1) and (empty_n_reg_2740_pp0_iter1_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_val_assign_2_reg_614 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_val_assign_2_reg_614 <= ap_phi_reg_pp0_iter2_val_assign_2_reg_614;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_val_assign_reg_641_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((tmp_97_fu_993_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter4_val_assign_reg_641 <= ap_phi_mux_val_assign_1_phi_fu_525_p6;
                elsif ((tmp_97_fu_993_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter4_val_assign_reg_641 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_val_assign_reg_641 <= ap_phi_reg_pp0_iter3_val_assign_reg_641;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter5_p_Val2_8_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((currentStoreSliceIdx_1_reg_2797 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter5_p_Val2_8_reg_632 <= newSel3_fu_2471_p3;
                elsif ((currentStoreSliceIdx_1_reg_2797 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter5_p_Val2_8_reg_632 <= newSel5_fu_1714_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter5_p_Val2_8_reg_632 <= ap_phi_reg_pp0_iter4_p_Val2_8_reg_632;
                end if;
            end if; 
        end if;
    end process;

    configRegs_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    ctrl_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hCntReg_V_load_2_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1))) then 
                    hCntReg_V_load_2_reg_497 <= ap_const_lv12_0;
                elsif ((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0)) then 
                    hCntReg_V_load_2_reg_497 <= hCntReg_V;
                elsif (((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0))) then 
                    hCntReg_V_load_2_reg_497 <= tmp_92_fu_938_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    hCntReg_V_load_2_reg_497 <= ap_phi_reg_pp0_iter3_hCntReg_V_load_2_reg_497;
                end if;
            end if; 
        end if;
    end process;

    vCntReg_V_load_2_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                vCntReg_V_load_2_reg_510 <= p_tmp_1_fu_964_p3;
            elsif ((((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                vCntReg_V_load_2_reg_510 <= vCntReg_V;
            elsif (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                vCntReg_V_load_2_reg_510 <= ap_phi_reg_pp0_iter3_vCntReg_V_load_2_reg_510;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_ctrl_V_buf_reg_430 <= ap_phi_reg_pp0_iter0_ctrl_V_buf_reg_430;
                ap_phi_reg_pp0_iter1_p_01427_s_reg_568 <= ap_phi_reg_pp0_iter0_p_01427_s_reg_568;
                ap_phi_reg_pp0_iter1_p_Val2_8_reg_632 <= ap_phi_reg_pp0_iter0_p_Val2_8_reg_632;
                ap_phi_reg_pp0_iter1_val_assign_reg_641 <= ap_phi_reg_pp0_iter0_val_assign_reg_641;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_p_01427_s_reg_568 <= ap_phi_reg_pp0_iter1_p_01427_s_reg_568;
                ap_phi_reg_pp0_iter2_p_01431_1_reg_439 <= ap_phi_reg_pp0_iter1_p_01431_1_reg_439;
                ap_phi_reg_pp0_iter2_p_2_reg_584 <= ap_phi_reg_pp0_iter1_p_2_reg_584;
                ap_phi_reg_pp0_iter2_p_Val2_8_reg_632 <= ap_phi_reg_pp0_iter1_p_Val2_8_reg_632;
                ap_phi_reg_pp0_iter2_tmpPixVal_V_reg_600 <= ap_phi_reg_pp0_iter1_tmpPixVal_V_reg_600;
                ap_phi_reg_pp0_iter2_val_assign_2_reg_614 <= ap_phi_reg_pp0_iter1_val_assign_2_reg_614;
                ap_phi_reg_pp0_iter2_val_assign_reg_641 <= ap_phi_reg_pp0_iter1_val_assign_reg_641;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_p_Val2_8_reg_632 <= ap_phi_reg_pp0_iter2_p_Val2_8_reg_632;
                ap_phi_reg_pp0_iter3_val_assign_reg_641 <= ap_phi_reg_pp0_iter2_val_assign_reg_641;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_p_01427_s_reg_568 <= ap_phi_reg_pp0_iter3_p_01427_s_reg_568;
                ap_phi_reg_pp0_iter4_p_2_reg_584 <= ap_phi_reg_pp0_iter3_p_2_reg_584;
                ap_phi_reg_pp0_iter4_p_Val2_8_reg_632 <= ap_phi_reg_pp0_iter3_p_Val2_8_reg_632;
                ap_phi_reg_pp0_iter4_tmpPixVal_V_reg_600 <= ap_phi_reg_pp0_iter3_tmpPixVal_V_reg_600;
                ap_phi_reg_pp0_iter4_val_assign_2_reg_614 <= ap_phi_reg_pp0_iter3_val_assign_2_reg_614;
                cntReg_V <= tmp_102_fu_1016_p2;
                p_01431_1_reg_439 <= ap_phi_reg_pp0_iter3_p_01431_1_reg_439;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_val_assign_reg_641 <= ap_phi_reg_pp0_iter4_val_assign_reg_641;
                p_01427_s_reg_568 <= ap_phi_reg_pp0_iter4_p_01427_s_reg_568;
                p_2_reg_584 <= ap_phi_reg_pp0_iter4_p_2_reg_584;
                val_assign_2_reg_614 <= ap_phi_reg_pp0_iter4_val_assign_2_reg_614;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_val_assign_reg_641 <= ap_phi_reg_pp0_iter5_val_assign_reg_641;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (configRegs_V_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (configRegs_V_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (configRegs_V_0_vld_reg = ap_const_logic_1)))) then
                configRegs_V_0_data_reg <= configRegs_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ctrl_V_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ctrl_V_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (ctrl_V_0_vld_reg = ap_const_logic_1)))) then
                ctrl_V_0_data_reg <= ctrl_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ctrl_V_read_reg_2772 <= ctrl_V_0_data_reg;
                empty_n_1_reg_2752_pp0_iter1_reg <= empty_n_1_reg_2752;
                empty_n_reg_2740 <= (0=>xStream_V_V_TVALID, others=>'-');
                empty_n_reg_2740_pp0_iter1_reg <= empty_n_reg_2740;
                tmp_5_reg_2778 <= tmp_5_fu_747_p1;
                tmp_V_1_reg_2756_pp0_iter1_reg <= tmp_V_1_reg_2756;
                tmp_V_3_reg_2762_pp0_iter1_reg <= tmp_V_3_reg_2762;
                tmp_V_4_reg_2767_pp0_iter1_reg <= tmp_V_4_reg_2767;
                tmp_V_reg_2744 <= xStream_V_V_TDATA;
                tmp_V_reg_2744_pp0_iter1_reg <= tmp_V_reg_2744;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_97_fu_993_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                currentStoreSliceIdx <= p_s_fu_790_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                currentStoreSliceIdx_1_reg_2797 <= currentStoreSliceIdx;
                currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg <= currentStoreSliceIdx_1_reg_2797;
                glDVSSlice_V_0_addr_1_reg_2841_pp0_iter4_reg <= glDVSSlice_V_0_addr_1_reg_2841;
                glDVSSlice_V_0_addr_reg_2807 <= tmp_54_cast_fu_847_p1(12 - 1 downto 0);
                glDVSSlice_V_0_addr_reg_2807_pp0_iter4_reg <= glDVSSlice_V_0_addr_reg_2807;
                glDVSSlice_V_1_addr_1_reg_2825_pp0_iter4_reg <= glDVSSlice_V_1_addr_1_reg_2825;
                glDVSSlice_V_1_addr_reg_2813 <= tmp_54_cast_fu_847_p1(12 - 1 downto 0);
                glDVSSlice_V_1_addr_reg_2813_pp0_iter4_reg <= glDVSSlice_V_1_addr_reg_2813;
                hCntReg_V_load_2_reg_497_pp0_iter4_reg <= hCntReg_V_load_2_reg_497;
                hCntReg_V_load_2_reg_497_pp0_iter5_reg <= hCntReg_V_load_2_reg_497_pp0_iter4_reg;
                icmp_reg_2855_pp0_iter4_reg <= icmp_reg_2855;
                p_01427_s_reg_568_pp0_iter5_reg <= p_01427_s_reg_568;
                p_01431_1_reg_439_pp0_iter4_reg <= p_01431_1_reg_439;
                p_01431_1_reg_439_pp0_iter5_reg <= p_01431_1_reg_439_pp0_iter4_reg;
                p_2_reg_584_pp0_iter5_reg <= p_2_reg_584;
                r_V_3_reg_2876 <= r_V_3_fu_985_p1;
                r_V_3_reg_2876_pp0_iter4_reg <= r_V_3_reg_2876;
                r_V_3_reg_2876_pp0_iter5_reg <= r_V_3_reg_2876_pp0_iter4_reg;
                r_V_reg_2792 <= r_V_fu_2734_p2;
                tmp_61_reg_2847_pp0_iter4_reg <= tmp_61_reg_2847;
                tmp_66_reg_2831_pp0_iter4_reg <= tmp_66_reg_2831;
                tmp_91_reg_2868_pp0_iter4_reg <= tmp_91_reg_2868;
                tmp_97_reg_2881 <= tmp_97_fu_993_p2;
                tmp_97_reg_2881_pp0_iter4_reg <= tmp_97_reg_2881;
                tmp_97_reg_2881_pp0_iter5_reg <= tmp_97_reg_2881_pp0_iter4_reg;
                tmp_9_reg_2885 <= tmp_9_fu_1042_p1;
                tmp_9_reg_2885_pp0_iter5_reg <= tmp_9_reg_2885;
                tmp_V_reg_2744_pp0_iter2_reg <= tmp_V_reg_2744_pp0_iter1_reg;
                tmp_V_reg_2744_pp0_iter3_reg <= tmp_V_reg_2744_pp0_iter2_reg;
                tmp_last_V_reg_2861_pp0_iter4_reg <= tmp_last_V_reg_2861;
                vCntReg_V_load_2_reg_510_pp0_iter4_reg <= vCntReg_V_load_2_reg_510;
                vCntReg_V_load_2_reg_510_pp0_iter5_reg <= vCntReg_V_load_2_reg_510_pp0_iter4_reg;
                vCntReg_V_load_reg_2801 <= vCntReg_V;
                val_assign_2_reg_614_pp0_iter5_reg <= val_assign_2_reg_614;
                vgaOutputEn_load_reg_2851 <= vgaOutputEn;
                vgaOutputEn_load_reg_2851_pp0_iter4_reg <= vgaOutputEn_load_reg_2851;
                vgaOutputEn_load_reg_2851_pp0_iter5_reg <= vgaOutputEn_load_reg_2851_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_n_1_reg_2752 <= (0=>yStream_V_V_TVALID, others=>'-');
                tmp_V_1_reg_2756 <= yStream_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (val_assign_2_reg_614_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                evCntReg_V <= tmp_103_fu_2708_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_data_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_data_V_1_payload_A <= rgbStreamData_data_V_fu_2623_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_data_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_data_V_1_payload_B <= rgbStreamData_data_V_fu_2623_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_last_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_last_V_1_payload_A <= tmp_last_V_reg_2861_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_last_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_last_V_1_payload_B <= tmp_last_V_reg_2861_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_user_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_user_V_1_payload_A <= tmp_user_V_fu_2632_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_user_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_user_V_1_payload_B <= tmp_user_V_fu_2632_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                glDVSSlice_V_0_addr_1_reg_2841 <= tmp_106_cast_fu_894_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                glDVSSlice_V_1_addr_1_reg_2825 <= tmp_111_cast_fu_871_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_hCntReg_V_flag_phi_fu_457_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                hCntReg_V <= ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_reg_2855 <= icmp_fu_914_p2;
                tmp_91_reg_2868 <= tmp_91_fu_932_p2;
                tmp_last_V_reg_2861 <= tmp_last_V_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStream_V_V_0_load_A = ap_const_logic_1)) then
                polStream_V_V_0_payload_A <= polStream_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStream_V_V_0_load_B = ap_const_logic_1)) then
                polStream_V_V_0_payload_B <= polStream_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_715 <= ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_430(17 downto 16);
                reg_719 <= ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_430(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_fu_747_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sliceDurationMs_V <= configRegs_V_0_data_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_97_reg_2881_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                startX_V <= p_tmp_s_fu_2660_p3;
                startY_V <= storemerge1_fu_2690_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentStoreSliceIdx_1_reg_2797 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_134_reg_2890 <= tmp_134_fu_1444_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_61_reg_2847 = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_151_reg_2915 <= tmp_151_fu_2549_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_66_reg_2831 = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_159_reg_2900 <= tmp_159_fu_1792_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_26_reg_2835 <= grp_fu_664_p2;
                tmp_61_reg_2847 <= grp_fu_697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_30_reg_2819 <= grp_fu_664_p2;
                tmp_66_reg_2831 <= grp_fu_697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((currentStoreSliceIdx_1_reg_2797 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_64_reg_2905 <= tmp_64_fu_2201_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op28_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_2_reg_2782 <= tmp_V_2_fu_757_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_n_1_fu_731_p1 = ap_const_lv1_1) and (empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_V_3_reg_2762 <= tsStream_V_V_TDATA;
                tmp_V_4_reg_2767 <= custDataStream_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_vCntReg_V_flag_phi_fu_472_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                vCntReg_V <= ap_phi_mux_vCntReg_V_load_2_phi_fu_513_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_vgaOutputEn_flag_1_phi_fu_538_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                vgaOutputEn <= ap_phi_mux_vgaOutputEn_new_1_phi_fu_550_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    addconv1_fu_1228_p2 <= std_logic_vector(unsigned(p_Result_57_7_fu_1208_p9) + unsigned(polVal_cast_cast_fu_1034_p3));
    addconv_fu_1985_p2 <= std_logic_vector(unsigned(p_Result_73_7_fu_1965_p9) + unsigned(polVal_cast_cast_fu_1034_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter6, polStream_V_V_0_vld_out, ap_predicate_op28_read_state2, frameStream_V_data_V_1_ack_in, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in)
    begin
                ap_block_pp0_stage0_01001 <= (((polStream_V_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op28_read_state2 = ap_const_boolean_1)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, polStream_V_V_0_vld_out, ap_predicate_op28_read_state2, frameStream_V_data_V_1_ack_in, ap_block_state6_io, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((polStream_V_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op28_read_state2 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_io))) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, polStream_V_V_0_vld_out, ap_predicate_op28_read_state2, frameStream_V_data_V_1_ack_in, ap_block_state6_io, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((polStream_V_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op28_read_state2 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and ((frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_io))) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(polStream_V_V_0_vld_out, ap_predicate_op28_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((polStream_V_V_0_vld_out = ap_const_logic_0) and (ap_predicate_op28_read_state2 = ap_const_boolean_1));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(frameStream_V_data_V_1_ack_in, vgaOutputEn_load_reg_2851_pp0_iter4_reg)
    begin
                ap_block_state6_io <= ((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(frameStream_V_data_V_1_ack_in, vgaOutputEn_load_reg_2851_pp0_iter5_reg)
    begin
                ap_block_state7_io <= ((vgaOutputEn_load_reg_2851_pp0_iter5_reg = ap_const_lv1_1) and (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state7_pp0_stage0_iter6_assign_proc : process(frameStream_V_data_V_1_ack_in, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in)
    begin
                ap_block_state7_pp0_stage0_iter6 <= ((frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_121_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_121 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_939_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_939 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_hCntReg_V_flag_phi_fu_457_p6_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_899_p1, ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_454, tmp_93_fu_945_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0))) then 
            ap_phi_mux_hCntReg_V_flag_phi_fu_457_p6 <= ap_const_lv1_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_hCntReg_V_flag_phi_fu_457_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_hCntReg_V_flag_phi_fu_457_p6 <= ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_454;
        end if; 
    end process;


    ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6_assign_proc : process(ap_enable_reg_pp0_iter3, hCntReg_V, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_899_p1, tmp_93_fu_945_p2, tmp_92_fu_938_p2, ap_phi_reg_pp0_iter3_hCntReg_V_load_2_reg_497)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if (((tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1))) then 
                ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6 <= ap_const_lv12_0;
            elsif ((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6 <= hCntReg_V;
            elsif (((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6 <= tmp_92_fu_938_p2;
            else 
                ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6 <= ap_phi_reg_pp0_iter3_hCntReg_V_load_2_reg_497;
            end if;
        else 
            ap_phi_mux_hCntReg_V_load_2_phi_fu_500_p6 <= ap_phi_reg_pp0_iter3_hCntReg_V_load_2_reg_497;
        end if; 
    end process;


    ap_phi_mux_t_V_2_phi_fu_561_p4_assign_proc : process(ap_enable_reg_pp0_iter3, cntReg_V, ap_block_pp0_stage0, tmp_97_fu_993_p2, ap_phi_reg_pp0_iter3_t_V_2_reg_558)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((tmp_97_fu_993_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_t_V_2_phi_fu_561_p4 <= cntReg_V;
            elsif ((tmp_97_fu_993_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_t_V_2_phi_fu_561_p4 <= ap_const_lv32_0;
            else 
                ap_phi_mux_t_V_2_phi_fu_561_p4 <= ap_phi_reg_pp0_iter3_t_V_2_reg_558;
            end if;
        else 
            ap_phi_mux_t_V_2_phi_fu_561_p4 <= ap_phi_reg_pp0_iter3_t_V_2_reg_558;
        end if; 
    end process;


    ap_phi_mux_vCntReg_V_flag_phi_fu_472_p6_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_899_p1, tmp_93_fu_945_p2, ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_469)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_vCntReg_V_flag_phi_fu_472_p6 <= ap_const_lv1_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vCntReg_V_flag_phi_fu_472_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_vCntReg_V_flag_phi_fu_472_p6 <= ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_469;
        end if; 
    end process;


    ap_phi_mux_vCntReg_V_load_2_phi_fu_513_p6_assign_proc : process(ap_enable_reg_pp0_iter3, vCntReg_V, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_899_p1, tmp_93_fu_945_p2, ap_phi_reg_pp0_iter3_vCntReg_V_load_2_reg_510, p_tmp_1_fu_964_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_vCntReg_V_load_2_phi_fu_513_p6 <= p_tmp_1_fu_964_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vCntReg_V_load_2_phi_fu_513_p6 <= vCntReg_V;
        else 
            ap_phi_mux_vCntReg_V_load_2_phi_fu_513_p6 <= ap_phi_reg_pp0_iter3_vCntReg_V_load_2_reg_510;
        end if; 
    end process;


    ap_phi_mux_val_assign_1_phi_fu_525_p6_assign_proc : process(ap_enable_reg_pp0_iter3, vgaOutputEn, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_899_p1, tmp_93_fu_945_p2, ap_phi_reg_pp0_iter3_val_assign_1_reg_522, not_tmp_s_fu_973_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if (((tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1))) then 
                ap_phi_mux_val_assign_1_phi_fu_525_p6 <= not_tmp_s_fu_973_p2;
            elsif ((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_val_assign_1_phi_fu_525_p6 <= vgaOutputEn;
            elsif (((vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_val_assign_1_phi_fu_525_p6 <= ap_const_lv1_1;
            else 
                ap_phi_mux_val_assign_1_phi_fu_525_p6 <= ap_phi_reg_pp0_iter3_val_assign_1_reg_522;
            end if;
        else 
            ap_phi_mux_val_assign_1_phi_fu_525_p6 <= ap_phi_reg_pp0_iter3_val_assign_1_reg_522;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_flag_1_phi_fu_538_p4_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, tmp_97_fu_993_p2, ap_phi_mux_vgaOutputEn_flag_phi_fu_487_p6, ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_535)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((tmp_97_fu_993_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_538_p4 <= ap_phi_mux_vgaOutputEn_flag_phi_fu_487_p6;
            elsif ((tmp_97_fu_993_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_538_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_538_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_535;
            end if;
        else 
            ap_phi_mux_vgaOutputEn_flag_1_phi_fu_538_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_535;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_flag_phi_fu_487_p6_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_899_p1, tmp_93_fu_945_p2, ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_484, tmp_95_fu_957_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_93_fu_945_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_487_p6 <= tmp_95_fu_957_p2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_899_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_93_fu_945_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_487_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_487_p6 <= ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_484;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_new_1_phi_fu_550_p4_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, tmp_97_fu_993_p2, ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_547)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((tmp_97_fu_993_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_550_p4 <= ap_const_lv1_0;
            elsif ((tmp_97_fu_993_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_550_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_550_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_547;
            end if;
        else 
            ap_phi_mux_vgaOutputEn_new_1_phi_fu_550_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_547;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ctrl_V_buf_reg_430 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_01427_s_reg_568 <= "X";
    ap_phi_reg_pp0_iter0_p_01431_1_reg_439 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_2_reg_584 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_8_reg_632 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_tmpPixVal_V_reg_600 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_val_assign_2_reg_614 <= "X";
    ap_phi_reg_pp0_iter0_val_assign_reg_641 <= "X";
    ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_454 <= "X";
    ap_phi_reg_pp0_iter3_hCntReg_V_load_2_reg_497 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_t_V_2_reg_558 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_469 <= "X";
    ap_phi_reg_pp0_iter3_vCntReg_V_load_2_reg_510 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_val_assign_1_reg_522 <= "X";
    ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_535 <= "X";
    ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_484 <= "X";
    ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_547 <= "X";

    ap_predicate_op28_read_state2_assign_proc : process(empty_n_reg_2740, empty_n_1_reg_2752)
    begin
                ap_predicate_op28_read_state2 <= ((empty_n_1_reg_2752 = ap_const_lv1_1) and (empty_n_reg_2740 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    configRegs_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            configRegs_V_0_ack_out <= ap_const_logic_1;
        else 
            configRegs_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    count_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_reg_2876_pp0_iter5_reg),64));

    count_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_count_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_count_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            count_V_ap_vld <= ap_const_logic_1;
        else 
            count_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ctrl_V_0_ack_out <= ap_const_logic_1;
        else 
            ctrl_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    currentStoreSliceIdx_1_load_fu_786_p1 <= currentStoreSliceIdx;

    custDataStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, empty_n_fu_723_p1, empty_n_1_fu_731_p1)
    begin
        if (((empty_n_1_fu_731_p1 = ap_const_lv1_1) and (empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            custDataStream_V_V_TREADY <= ap_const_logic_1;
        else 
            custDataStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    empty_n_1_fu_731_p1 <= (0=>yStream_V_V_TVALID, others=>'-');
    empty_n_fu_723_p1 <= (0=>xStream_V_V_TVALID, others=>'-');
    frameStream_TDATA <= frameStream_V_data_V_1_data_out;

    frameStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, vgaOutputEn_load_reg_2851_pp0_iter4_reg, vgaOutputEn_load_reg_2851_pp0_iter5_reg, frameStream_V_data_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_reg_2851_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1)))) then 
            frameStream_TDATA_blk_n <= frameStream_V_data_V_1_state(1);
        else 
            frameStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frameStream_TDEST <= frameStream_V_dest_V_1_data_out;
    frameStream_TID <= frameStream_V_id_V_1_data_out;
    frameStream_TKEEP <= frameStream_V_keep_V_1_data_out;
    frameStream_TLAST <= frameStream_V_last_V_1_data_out;
    frameStream_TSTRB <= frameStream_V_strb_V_1_data_out;
    frameStream_TUSER <= frameStream_V_user_V_1_data_out;
    frameStream_TVALID <= frameStream_V_dest_V_1_state(0);
    frameStream_V_data_V_1_ack_in <= frameStream_V_data_V_1_state(1);
    frameStream_V_data_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_data_V_1_data_out_assign_proc : process(frameStream_V_data_V_1_payload_A, frameStream_V_data_V_1_payload_B, frameStream_V_data_V_1_sel)
    begin
        if ((frameStream_V_data_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_data_V_1_data_out <= frameStream_V_data_V_1_payload_B;
        else 
            frameStream_V_data_V_1_data_out <= frameStream_V_data_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_data_V_1_load_A <= (frameStream_V_data_V_1_state_cmp_full and not(frameStream_V_data_V_1_sel_wr));
    frameStream_V_data_V_1_load_B <= (frameStream_V_data_V_1_state_cmp_full and frameStream_V_data_V_1_sel_wr);
    frameStream_V_data_V_1_sel <= frameStream_V_data_V_1_sel_rd;
    frameStream_V_data_V_1_state_cmp_full <= '0' when (frameStream_V_data_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2851_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_data_V_1_vld_out <= frameStream_V_data_V_1_state(0);
    frameStream_V_dest_V_1_ack_in <= frameStream_V_dest_V_1_state(1);
    frameStream_V_dest_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_dest_V_1_data_out <= ap_const_lv1_0;
    frameStream_V_dest_V_1_sel <= frameStream_V_dest_V_1_sel_rd;

    frameStream_V_dest_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2851_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_dest_V_1_vld_out <= frameStream_V_dest_V_1_state(0);
    frameStream_V_id_V_1_ack_in <= frameStream_V_id_V_1_state(1);
    frameStream_V_id_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_id_V_1_data_out <= ap_const_lv1_0;
    frameStream_V_id_V_1_sel <= frameStream_V_id_V_1_sel_rd;

    frameStream_V_id_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2851_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_id_V_1_vld_out <= frameStream_V_id_V_1_state(0);
    frameStream_V_keep_V_1_ack_in <= frameStream_V_keep_V_1_state(1);
    frameStream_V_keep_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_keep_V_1_data_out <= ap_const_lv3_7;
    frameStream_V_keep_V_1_sel <= frameStream_V_keep_V_1_sel_rd;

    frameStream_V_keep_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2851_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_keep_V_1_vld_out <= frameStream_V_keep_V_1_state(0);
    frameStream_V_last_V_1_ack_in <= frameStream_V_last_V_1_state(1);
    frameStream_V_last_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_last_V_1_data_out_assign_proc : process(frameStream_V_last_V_1_payload_A, frameStream_V_last_V_1_payload_B, frameStream_V_last_V_1_sel)
    begin
        if ((frameStream_V_last_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_last_V_1_data_out <= frameStream_V_last_V_1_payload_B;
        else 
            frameStream_V_last_V_1_data_out <= frameStream_V_last_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_last_V_1_load_A <= (frameStream_V_last_V_1_state_cmp_full and not(frameStream_V_last_V_1_sel_wr));
    frameStream_V_last_V_1_load_B <= (frameStream_V_last_V_1_state_cmp_full and frameStream_V_last_V_1_sel_wr);
    frameStream_V_last_V_1_sel <= frameStream_V_last_V_1_sel_rd;
    frameStream_V_last_V_1_state_cmp_full <= '0' when (frameStream_V_last_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2851_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_last_V_1_vld_out <= frameStream_V_last_V_1_state(0);
    frameStream_V_strb_V_1_ack_in <= frameStream_V_strb_V_1_state(1);
    frameStream_V_strb_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_strb_V_1_data_out <= ap_const_lv3_7;
    frameStream_V_strb_V_1_sel <= frameStream_V_strb_V_1_sel_rd;

    frameStream_V_strb_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2851_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_strb_V_1_vld_out <= frameStream_V_strb_V_1_state(0);
    frameStream_V_user_V_1_ack_in <= frameStream_V_user_V_1_state(1);
    frameStream_V_user_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_user_V_1_data_out_assign_proc : process(frameStream_V_user_V_1_payload_A, frameStream_V_user_V_1_payload_B, frameStream_V_user_V_1_sel)
    begin
        if ((frameStream_V_user_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_user_V_1_data_out <= frameStream_V_user_V_1_payload_B;
        else 
            frameStream_V_user_V_1_data_out <= frameStream_V_user_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_user_V_1_load_A <= (frameStream_V_user_V_1_state_cmp_full and not(frameStream_V_user_V_1_sel_wr));
    frameStream_V_user_V_1_load_B <= (frameStream_V_user_V_1_state_cmp_full and frameStream_V_user_V_1_sel_wr);
    frameStream_V_user_V_1_sel <= frameStream_V_user_V_1_sel_rd;
    frameStream_V_user_V_1_state_cmp_full <= '0' when (frameStream_V_user_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_user_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2851_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((vgaOutputEn_load_reg_2851_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            frameStream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_user_V_1_vld_out <= frameStream_V_user_V_1_state(0);

    glDVSSlice_V_0_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, currentStoreSliceIdx_1_load_fu_786_p1, tmp_54_cast_fu_847_p1, tmp_106_cast_fu_894_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_1)) then 
                glDVSSlice_V_0_address0 <= tmp_106_cast_fu_894_p1(12 - 1 downto 0);
            elsif ((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_0)) then 
                glDVSSlice_V_0_address0 <= tmp_54_cast_fu_847_p1(12 - 1 downto 0);
            else 
                glDVSSlice_V_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_address1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, glDVSSlice_V_0_addr_reg_2807_pp0_iter4_reg, glDVSSlice_V_0_addr_1_reg_2841_pp0_iter4_reg, tmp_61_reg_2847_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
            if (((tmp_61_reg_2847_pp0_iter4_reg = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1))) then 
                glDVSSlice_V_0_address1 <= glDVSSlice_V_0_addr_1_reg_2841_pp0_iter4_reg;
            elsif ((currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0)) then 
                glDVSSlice_V_0_address1 <= glDVSSlice_V_0_addr_reg_2807_pp0_iter4_reg;
            else 
                glDVSSlice_V_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_load_fu_786_p1)
    begin
        if ((((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glDVSSlice_V_0_ce0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, tmp_61_reg_2847_pp0_iter4_reg)
    begin
        if ((((tmp_61_reg_2847_pp0_iter4_reg = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glDVSSlice_V_0_ce1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_0_d1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, tmp_61_reg_2847_pp0_iter4_reg, tmp_134_reg_2890, tmp_151_reg_2915)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
            if (((tmp_61_reg_2847_pp0_iter4_reg = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1))) then 
                glDVSSlice_V_0_d1 <= tmp_151_reg_2915;
            elsif ((currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0)) then 
                glDVSSlice_V_0_d1 <= tmp_134_reg_2890;
            else 
                glDVSSlice_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_we1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, tmp_61_reg_2847_pp0_iter4_reg)
    begin
        if ((((tmp_61_reg_2847_pp0_iter4_reg = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glDVSSlice_V_0_we1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, currentStoreSliceIdx_1_load_fu_786_p1, tmp_54_cast_fu_847_p1, tmp_111_cast_fu_871_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_1)) then 
                glDVSSlice_V_1_address0 <= tmp_54_cast_fu_847_p1(12 - 1 downto 0);
            elsif ((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_0)) then 
                glDVSSlice_V_1_address0 <= tmp_111_cast_fu_871_p1(12 - 1 downto 0);
            else 
                glDVSSlice_V_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_address1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, glDVSSlice_V_1_addr_reg_2813_pp0_iter4_reg, glDVSSlice_V_1_addr_1_reg_2825_pp0_iter4_reg, tmp_66_reg_2831_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1)) then 
                glDVSSlice_V_1_address1 <= glDVSSlice_V_1_addr_reg_2813_pp0_iter4_reg;
            elsif (((tmp_66_reg_2831_pp0_iter4_reg = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0))) then 
                glDVSSlice_V_1_address1 <= glDVSSlice_V_1_addr_1_reg_2825_pp0_iter4_reg;
            else 
                glDVSSlice_V_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_load_fu_786_p1)
    begin
        if ((((currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (currentStoreSliceIdx_1_load_fu_786_p1 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glDVSSlice_V_1_ce0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, tmp_66_reg_2831_pp0_iter4_reg)
    begin
        if ((((currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_66_reg_2831_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glDVSSlice_V_1_ce1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_d1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, tmp_66_reg_2831_pp0_iter4_reg, tmp_159_reg_2900, tmp_64_reg_2905)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1)) then 
                glDVSSlice_V_1_d1 <= tmp_64_reg_2905;
            elsif (((tmp_66_reg_2831_pp0_iter4_reg = ap_const_lv1_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0))) then 
                glDVSSlice_V_1_d1 <= tmp_159_reg_2900;
            else 
                glDVSSlice_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_we1_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg, tmp_66_reg_2831_pp0_iter4_reg)
    begin
        if ((((currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((tmp_66_reg_2831_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2797_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            glDVSSlice_V_1_we1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_664_p2 <= "1" when (unsigned(hCntReg_V) > unsigned(ap_const_lv12_2B3)) else "0";
    grp_fu_669_p4 <= hCntReg_V(11 downto 1);
    grp_fu_678_p4 <= vCntReg_V(11 downto 7);
    grp_fu_697_p2 <= (tmp_12_fu_815_p1 and tmp_10_fu_803_p1);
    grp_fu_701_p2 <= "1" when (unsigned(vCntReg_V_load_reg_2801) > unsigned(ap_const_lv12_207)) else "0";
    grp_fu_706_p4 <= vCntReg_V_load_reg_2801(6 downto 1);
    hCnt_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hCntReg_V_load_2_reg_497_pp0_iter5_reg),16));

    hCnt_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_hCnt_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_hCnt_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            hCnt_V_ap_vld <= ap_const_logic_1;
        else 
            hCnt_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_fu_914_p2 <= "1" when (tmp_160_fu_904_p4 = ap_const_lv2_0) else "0";
    index_assign_10_1_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_1068_p3),32));
    index_assign_10_2_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_1088_p3),32));
    index_assign_10_3_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_1108_p3),32));
    index_assign_10_4_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_1128_p3),32));
    index_assign_10_5_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_1148_p3),32));
    index_assign_10_6_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_72_fu_1168_p3),32));
    index_assign_10_7_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_fu_1188_p3),32));
    index_assign_14_1_fu_1487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_1479_p3),32));
    index_assign_14_2_fu_1507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_fu_1499_p3),32));
    index_assign_14_3_fu_1527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_1519_p3),32));
    index_assign_14_4_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_1539_p3),32));
    index_assign_14_5_fu_1567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_1559_p3),32));
    index_assign_14_6_fu_1587_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_88_fu_1579_p3),32));
    index_assign_14_7_fu_1607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_96_fu_1599_p3),32));
    index_assign_18_1_fu_1833_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1825_p3),32));
    index_assign_18_2_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1845_p3),32));
    index_assign_18_3_fu_1873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1865_p3),32));
    index_assign_18_4_fu_1893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1885_p3),32));
    index_assign_18_5_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1905_p3),32));
    index_assign_18_6_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_1925_p3),32));
    index_assign_18_7_fu_1953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_1945_p3),32));
    index_assign_1_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_63_fu_1048_p3),32));
    index_assign_22_1_fu_2244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_2236_p3),32));
    index_assign_22_2_fu_2264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_2256_p3),32));
    index_assign_22_3_fu_2284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_2276_p3),32));
    index_assign_22_4_fu_2304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_2296_p3),32));
    index_assign_22_5_fu_2324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_58_fu_2316_p3),32));
    index_assign_22_6_fu_2344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_60_fu_2336_p3),32));
    index_assign_22_7_fu_2364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_62_fu_2356_p3),32));
    index_assign_2_fu_2224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_2216_p3),32));
    index_assign_3_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_77_fu_1459_p3),32));
    index_assign_s_fu_1813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1805_p3),32));
    newSel1_fu_2449_p3 <= 
        vgaReadPixVal_V_2_fu_2408_p2 when (sel_tmp3_fu_2443_p2(0) = '1') else 
        vgaReadPixVal_V_fu_2402_p2;
    newSel2_fu_2463_p3 <= 
        ap_const_lv8_AA when (or_cond1_11_fu_2211_p2(0) = '1') else 
        p_Result_81_7_fu_2376_p9;
    newSel3_fu_2471_p3 <= 
        newSel1_fu_2449_p3 when (or_cond1_fu_2457_p2(0) = '1') else 
        newSel2_fu_2463_p3;
    newSel4_fu_1706_p3 <= 
        ap_const_lv8_AA when (or_cond_10_fu_1454_p2(0) = '1') else 
        p_Result_65_7_fu_1619_p9;
    newSel57_cast_fu_2607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(newSel6_fu_2600_p3),24));
    newSel5_fu_1714_p3 <= 
        newSel_fu_1692_p3 when (or_cond_fu_1700_p2(0) = '1') else 
        newSel4_fu_1706_p3;
    newSel6_fu_2600_p3 <= 
        ap_const_lv8_0 when (tmp_last_V_reg_2861_pp0_iter4_reg(0) = '1') else 
        r_V_1_fu_2577_p2;
    newSel7_fu_2616_p3 <= 
        r_V_2_fu_2587_p3 when (icmp_reg_2855_pp0_iter4_reg(0) = '1') else 
        pixVal_V_fu_2567_p1;
    newSel_fu_1692_p3 <= 
        vgaReadPixVal_V_3_fu_1651_p2 when (sel_tmp7_fu_1686_p2(0) = '1') else 
        vgaReadPixVal_V_1_fu_1645_p2;
    not_tmp_s_fu_973_p2 <= (tmp_95_fu_957_p2 xor ap_const_lv1_1);
    or_cond1_11_fu_2211_p2 <= (tmp_26_reg_2835 or grp_fu_701_p2);
    or_cond1_fu_2457_p2 <= (sel_tmp3_fu_2443_p2 or sel_tmp1_fu_2425_p2);
    or_cond2_fu_2611_p2 <= (tmp_last_V_reg_2861_pp0_iter4_reg or sel_tmp8_fu_2595_p2);
    or_cond_10_fu_1454_p2 <= (tmp_30_reg_2819 or grp_fu_701_p2);
    or_cond_fu_1700_p2 <= (sel_tmp7_fu_1686_p2 or sel_tmp5_fu_1668_p2);
    p_01419_0_1_fu_1266_p3 <= 
        ap_phi_reg_pp0_iter4_tmpPixVal_V_reg_600 when (tmp_22_fu_1260_p2(0) = '1') else 
        tmpPixVal_V_2_fu_1234_p3;
    p_01419_0_s_fu_2023_p3 <= 
        ap_phi_reg_pp0_iter4_tmpPixVal_V_reg_600 when (tmp_19_fu_2017_p2(0) = '1') else 
        tmpPixVal_V_1_fu_1991_p3;
    p_Repl2_11_1_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_121_fu_1300_p3),64));
    p_Repl2_11_2_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_123_fu_1322_p3),64));
    p_Repl2_11_3_fu_1352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_125_fu_1344_p3),64));
    p_Repl2_11_4_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_127_fu_1366_p3),64));
    p_Repl2_11_5_fu_1396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_129_fu_1388_p3),64));
    p_Repl2_11_6_fu_1418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_131_fu_1410_p3),64));
    p_Repl2_11_7_fu_1440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_133_fu_1432_p3),64));
    p_Repl2_8_1_fu_2065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_2057_p3),64));
    p_Repl2_8_2_fu_2087_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_2079_p3),64));
    p_Repl2_8_3_fu_2109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_2101_p3),64));
    p_Repl2_8_4_fu_2131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_2123_p3),64));
    p_Repl2_8_5_fu_2153_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_2145_p3),64));
    p_Repl2_8_6_fu_2175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_56_fu_2167_p3),64));
    p_Repl2_8_7_fu_2197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_fu_2189_p3),64));
    p_Repl2_8_fu_2043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_2039_p1),64));
    p_Repl2_s_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_1282_p1),64));
    p_Result_57_7_fu_1208_p9 <= (((((((tmp_117_fu_1200_p3 & tmp_116_fu_1180_p3) & tmp_115_fu_1160_p3) & tmp_114_fu_1140_p3) & tmp_113_fu_1120_p3) & tmp_112_fu_1100_p3) & tmp_110_fu_1080_p3) & tmp_106_fu_1060_p3);
    p_Result_65_7_fu_1619_p9 <= (((((((tmp_143_fu_1611_p3 & tmp_142_fu_1591_p3) & tmp_141_fu_1571_p3) & tmp_140_fu_1551_p3) & tmp_139_fu_1531_p3) & tmp_138_fu_1511_p3) & tmp_137_fu_1491_p3) & tmp_136_fu_1471_p3);
    p_Result_73_7_fu_1965_p9 <= (((((((tmp_34_fu_1957_p3 & tmp_33_fu_1937_p3) & tmp_32_fu_1917_p3) & tmp_31_fu_1897_p3) & tmp_29_fu_1877_p3) & tmp_28_fu_1857_p3) & tmp_25_fu_1837_p3) & tmp_24_fu_1817_p3);
    p_Result_81_7_fu_2376_p9 <= (((((((tmp_104_fu_2368_p3 & tmp_89_fu_2348_p3) & tmp_87_fu_2328_p3) & tmp_86_fu_2308_p3) & tmp_81_fu_2288_p3) & tmp_80_fu_2268_p3) & tmp_79_fu_2248_p3) & tmp_75_fu_2228_p3);
    p_Val2_2_fu_2031_p3 <= 
        tmpPixVal_V_3_fu_2013_p1 when (tmp_14_fu_2007_p2(0) = '1') else 
        p_01419_0_s_fu_2023_p3;
    p_Val2_4_fu_1274_p3 <= 
        tmpPixVal_V_4_fu_1256_p1 when (tmp_18_fu_1250_p2(0) = '1') else 
        p_01419_0_1_fu_1266_p3;
    p_s_fu_790_p2 <= (currentStoreSliceIdx xor ap_const_lv1_1);
    p_tmp_1_fu_964_p3 <= 
        ap_const_lv12_0 when (tmp_95_fu_957_p2(0) = '1') else 
        tmp_94_fu_951_p2;
    p_tmp_s_fu_2660_p3 <= 
        ap_const_lv16_0 when (tmp_98_fu_2648_p2(0) = '1') else 
        tmp_99_fu_2654_p2;
        pixVal_V_fu_2567_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_reg_pp0_iter5_p_Val2_8_reg_632),24));

    polReg_V <= p_01427_s_reg_568_pp0_iter5_reg;

    polReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_polReg_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_polReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            polReg_V_ap_vld <= ap_const_logic_1;
        else 
            polReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    polStream_V_V_0_ack_in <= polStream_V_V_0_state(1);

    polStream_V_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op28_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op28_read_state2 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            polStream_V_V_0_ack_out <= ap_const_logic_1;
        else 
            polStream_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    polStream_V_V_0_data_out_assign_proc : process(polStream_V_V_0_payload_A, polStream_V_V_0_payload_B, polStream_V_V_0_sel)
    begin
        if ((polStream_V_V_0_sel = ap_const_logic_1)) then 
            polStream_V_V_0_data_out <= polStream_V_V_0_payload_B;
        else 
            polStream_V_V_0_data_out <= polStream_V_V_0_payload_A;
        end if; 
    end process;

    polStream_V_V_0_load_A <= (polStream_V_V_0_state_cmp_full and not(polStream_V_V_0_sel_wr));
    polStream_V_V_0_load_B <= (polStream_V_V_0_state_cmp_full and polStream_V_V_0_sel_wr);
    polStream_V_V_0_sel <= polStream_V_V_0_sel_rd;
    polStream_V_V_0_state_cmp_full <= '0' when (polStream_V_V_0_state = ap_const_lv2_1) else '1';
    polStream_V_V_0_vld_in <= polStream_V_V_TVALID;
    polStream_V_V_0_vld_out <= polStream_V_V_0_state(0);

    polStream_V_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op28_read_state2, polStream_V_V_0_state, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op28_read_state2 = ap_const_boolean_1))) then 
            polStream_V_V_TDATA_blk_n <= polStream_V_V_0_state(0);
        else 
            polStream_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    polStream_V_V_TREADY <= polStream_V_V_0_state(1);
    polVal_cast_cast_fu_1034_p3 <= 
        ap_const_lv8_1 when (ap_phi_reg_pp0_iter4_p_01427_s_reg_568(0) = '1') else 
        ap_const_lv8_FF;
    r_V_1_fu_2577_p2 <= std_logic_vector(shift_left(unsigned(vgaReadPixVal_V_5_fu_2571_p2),to_integer(unsigned('0' & ap_const_lv8_4(8-1 downto 0)))));
    r_V_2_fu_2587_p3 <= (tmp_163_fu_2583_p1 & ap_const_lv20_0);
    r_V_3_fu_985_p1 <= cntReg_V(20 - 1 downto 0);
    r_V_fu_2734_p0 <= ap_const_lv34_186A0(18 - 1 downto 0);
    r_V_fu_2734_p1 <= r_V_fu_2734_p10(16 - 1 downto 0);
    r_V_fu_2734_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sliceDurationMs_V),34));
    regX_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_2885_pp0_iter5_reg),16));

    regX_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_regX_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_regX_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            regX_V_ap_vld <= ap_const_logic_1;
        else 
            regX_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    regY_V <= p_01431_1_reg_439_pp0_iter5_reg;

    regY_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_regY_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_regY_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            regY_V_ap_vld <= ap_const_logic_1;
        else 
            regY_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rgbStreamData_data_V_fu_2623_p3 <= 
        newSel57_cast_fu_2607_p1 when (or_cond2_fu_2611_p2(0) = '1') else 
        newSel7_fu_2616_p3;
    sel_tmp19_demorgan_fu_2431_p2 <= (tmp_48_fu_2396_p2 or or_cond1_11_fu_2211_p2);
    sel_tmp1_fu_2425_p2 <= (tmp_48_fu_2396_p2 and sel_tmp_fu_2419_p2);
    sel_tmp2_fu_2437_p2 <= (sel_tmp19_demorgan_fu_2431_p2 xor ap_const_lv1_1);
    sel_tmp38_demorgan_fu_1674_p2 <= (tmp_51_fu_1639_p2 or or_cond_10_fu_1454_p2);
    sel_tmp3_fu_2443_p2 <= (tmp_104_fu_2368_p3 and sel_tmp2_fu_2437_p2);
    sel_tmp4_demorgan_fu_1657_p2 <= (tmp_30_reg_2819 or grp_fu_701_p2);
    sel_tmp4_fu_1662_p2 <= (sel_tmp4_demorgan_fu_1657_p2 xor ap_const_lv1_1);
    sel_tmp5_fu_1668_p2 <= (tmp_51_fu_1639_p2 and sel_tmp4_fu_1662_p2);
    sel_tmp6_fu_1680_p2 <= (sel_tmp38_demorgan_fu_1674_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_1686_p2 <= (tmp_143_fu_1611_p3 and sel_tmp6_fu_1680_p2);
    sel_tmp8_fu_2595_p2 <= (tmp_161_fu_2559_p3 and icmp_reg_2855_pp0_iter4_reg);
    sel_tmp_demorgan_fu_2414_p2 <= (tmp_26_reg_2835 or grp_fu_701_p2);
    sel_tmp_fu_2419_p2 <= (sel_tmp_demorgan_fu_2414_p2 xor ap_const_lv1_1);
    skipFlgOutput_V <= val_assign_2_reg_614_pp0_iter5_reg;

    skipFlgOutput_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_skipFlgOutput_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_skipFlgOutput_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            skipFlgOutput_V_ap_vld <= ap_const_logic_1;
        else 
            skipFlgOutput_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    storemerge1_fu_2690_p3 <= 
        ap_const_lv16_0 when (tmp_100_fu_2678_p2(0) = '1') else 
        tmp_101_fu_2684_p2;
    tmpPixVal_V_1_fu_1991_p3 <= 
        p_Result_73_7_fu_1965_p9 when (ap_phi_reg_pp0_iter4_val_assign_2_reg_614(0) = '1') else 
        addconv_fu_1985_p2;
    tmpPixVal_V_2_fu_1234_p3 <= 
        p_Result_57_7_fu_1208_p9 when (ap_phi_reg_pp0_iter4_val_assign_2_reg_614(0) = '1') else 
        addconv1_fu_1228_p2;
    tmpPixVal_V_3_fu_2013_p1 <= ap_phi_reg_pp0_iter4_p_2_reg_584(8 - 1 downto 0);
    tmpPixVal_V_4_fu_1256_p1 <= ap_phi_reg_pp0_iter4_p_2_reg_584(8 - 1 downto 0);
    tmp_100_fu_2678_p2 <= "1" when (unsigned(startY_V) > unsigned(ap_const_lv16_C7)) else "0";
    tmp_101_fu_2684_p2 <= std_logic_vector(unsigned(startY_V) + unsigned(ap_const_lv16_1));
    tmp_102_fu_1016_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_2_phi_fu_561_p4) + unsigned(ap_const_lv32_1));
    tmp_103_fu_2708_p2 <= std_logic_vector(unsigned(evCntReg_V) + unsigned(ap_const_lv64_1));
    tmp_104_fu_2368_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_7_fu_2364_p1)) downto to_integer(unsigned(index_assign_22_7_fu_2364_p1))) when (to_integer(unsigned(index_assign_22_7_fu_2364_p1))>= 0 and to_integer(unsigned(index_assign_22_7_fu_2364_p1))<=511) else "-";
    tmp_105_fu_1045_p1 <= tmp_V_reg_2744_pp0_iter3_reg(6 - 1 downto 0);
    tmp_106_cast_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_74_fu_888_p2),64));
    tmp_106_fu_1060_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_1_fu_1056_p1)) downto to_integer(unsigned(index_assign_1_fu_1056_p1))) when (to_integer(unsigned(index_assign_1_fu_1056_p1))>= 0 and to_integer(unsigned(index_assign_1_fu_1056_p1))<=511) else "-";
    tmp_109_fu_857_p3 <= (grp_fu_678_p4 & ap_const_lv9_0);
    tmp_10_fu_803_p1 <= hCntReg_V(1 - 1 downto 0);
    tmp_110_fu_1080_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_1_fu_1076_p1)) downto to_integer(unsigned(index_assign_10_1_fu_1076_p1))) when (to_integer(unsigned(index_assign_10_1_fu_1076_p1))>= 0 and to_integer(unsigned(index_assign_10_1_fu_1076_p1))<=511) else "-";
    tmp_111_cast_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_111_fu_865_p2),64));
    tmp_111_fu_865_p2 <= std_logic_vector(unsigned(tmp_109_fu_857_p3) + unsigned(tmp_36_cast_fu_853_p1));
    tmp_112_fu_1100_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_2_fu_1096_p1)) downto to_integer(unsigned(index_assign_10_2_fu_1096_p1))) when (to_integer(unsigned(index_assign_10_2_fu_1096_p1))>= 0 and to_integer(unsigned(index_assign_10_2_fu_1096_p1))<=511) else "-";
    tmp_113_fu_1120_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_3_fu_1116_p1)) downto to_integer(unsigned(index_assign_10_3_fu_1116_p1))) when (to_integer(unsigned(index_assign_10_3_fu_1116_p1))>= 0 and to_integer(unsigned(index_assign_10_3_fu_1116_p1))<=511) else "-";
    tmp_114_fu_1140_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_4_fu_1136_p1)) downto to_integer(unsigned(index_assign_10_4_fu_1136_p1))) when (to_integer(unsigned(index_assign_10_4_fu_1136_p1))>= 0 and to_integer(unsigned(index_assign_10_4_fu_1136_p1))<=511) else "-";
    tmp_115_fu_1160_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_5_fu_1156_p1)) downto to_integer(unsigned(index_assign_10_5_fu_1156_p1))) when (to_integer(unsigned(index_assign_10_5_fu_1156_p1))>= 0 and to_integer(unsigned(index_assign_10_5_fu_1156_p1))<=511) else "-";
    tmp_116_fu_1180_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_6_fu_1176_p1)) downto to_integer(unsigned(index_assign_10_6_fu_1176_p1))) when (to_integer(unsigned(index_assign_10_6_fu_1176_p1))>= 0 and to_integer(unsigned(index_assign_10_6_fu_1176_p1))<=511) else "-";
    tmp_117_fu_1200_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_7_fu_1196_p1)) downto to_integer(unsigned(index_assign_10_7_fu_1196_p1))) when (to_integer(unsigned(index_assign_10_7_fu_1196_p1))>= 0 and to_integer(unsigned(index_assign_10_7_fu_1196_p1))<=511) else "-";
    tmp_119_fu_1282_p1 <= p_Val2_4_fu_1274_p3(1 - 1 downto 0);
    tmp_11_fu_1905_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_5);
    
    tmp_120_fu_1290_p4_proc : process(glDVSSlice_V_0_q0, index_assign_1_fu_1056_p1, p_Repl2_s_fu_1286_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_120_fu_1290_p4 <= glDVSSlice_V_0_q0;
        if to_integer(unsigned(index_assign_1_fu_1056_p1)) >= glDVSSlice_V_0_q0'low and to_integer(unsigned(index_assign_1_fu_1056_p1)) <= glDVSSlice_V_0_q0'high then
            result(0) := '0';
            for i in p_Repl2_s_fu_1286_p1'range loop
                result(0) := result(0) or p_Repl2_s_fu_1286_p1(i);
            end loop;
            tmp_120_fu_1290_p4(to_integer(unsigned(index_assign_1_fu_1056_p1))) <= result(0);
        end if;
    end process;

    tmp_121_fu_1300_p3 <= p_Val2_4_fu_1274_p3(1 downto 1);
    
    tmp_122_fu_1312_p4_proc : process(tmp_120_fu_1290_p4, index_assign_10_1_fu_1076_p1, p_Repl2_11_1_fu_1308_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_122_fu_1312_p4 <= tmp_120_fu_1290_p4;
        if to_integer(unsigned(index_assign_10_1_fu_1076_p1)) >= tmp_120_fu_1290_p4'low and to_integer(unsigned(index_assign_10_1_fu_1076_p1)) <= tmp_120_fu_1290_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_1_fu_1308_p1'range loop
                result(0) := result(0) or p_Repl2_11_1_fu_1308_p1(i);
            end loop;
            tmp_122_fu_1312_p4(to_integer(unsigned(index_assign_10_1_fu_1076_p1))) <= result(0);
        end if;
    end process;

    tmp_123_fu_1322_p3 <= p_Val2_4_fu_1274_p3(2 downto 2);
    
    tmp_124_fu_1334_p4_proc : process(tmp_122_fu_1312_p4, index_assign_10_2_fu_1096_p1, p_Repl2_11_2_fu_1330_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_124_fu_1334_p4 <= tmp_122_fu_1312_p4;
        if to_integer(unsigned(index_assign_10_2_fu_1096_p1)) >= tmp_122_fu_1312_p4'low and to_integer(unsigned(index_assign_10_2_fu_1096_p1)) <= tmp_122_fu_1312_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_2_fu_1330_p1'range loop
                result(0) := result(0) or p_Repl2_11_2_fu_1330_p1(i);
            end loop;
            tmp_124_fu_1334_p4(to_integer(unsigned(index_assign_10_2_fu_1096_p1))) <= result(0);
        end if;
    end process;

    tmp_125_fu_1344_p3 <= p_Val2_4_fu_1274_p3(3 downto 3);
    
    tmp_126_fu_1356_p4_proc : process(tmp_124_fu_1334_p4, index_assign_10_3_fu_1116_p1, p_Repl2_11_3_fu_1352_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_126_fu_1356_p4 <= tmp_124_fu_1334_p4;
        if to_integer(unsigned(index_assign_10_3_fu_1116_p1)) >= tmp_124_fu_1334_p4'low and to_integer(unsigned(index_assign_10_3_fu_1116_p1)) <= tmp_124_fu_1334_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_3_fu_1352_p1'range loop
                result(0) := result(0) or p_Repl2_11_3_fu_1352_p1(i);
            end loop;
            tmp_126_fu_1356_p4(to_integer(unsigned(index_assign_10_3_fu_1116_p1))) <= result(0);
        end if;
    end process;

    tmp_127_fu_1366_p3 <= p_Val2_4_fu_1274_p3(4 downto 4);
    
    tmp_128_fu_1378_p4_proc : process(tmp_126_fu_1356_p4, index_assign_10_4_fu_1136_p1, p_Repl2_11_4_fu_1374_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_128_fu_1378_p4 <= tmp_126_fu_1356_p4;
        if to_integer(unsigned(index_assign_10_4_fu_1136_p1)) >= tmp_126_fu_1356_p4'low and to_integer(unsigned(index_assign_10_4_fu_1136_p1)) <= tmp_126_fu_1356_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_4_fu_1374_p1'range loop
                result(0) := result(0) or p_Repl2_11_4_fu_1374_p1(i);
            end loop;
            tmp_128_fu_1378_p4(to_integer(unsigned(index_assign_10_4_fu_1136_p1))) <= result(0);
        end if;
    end process;

    tmp_129_fu_1388_p3 <= p_Val2_4_fu_1274_p3(5 downto 5);
    tmp_12_fu_815_p1 <= vCntReg_V(1 - 1 downto 0);
    
    tmp_130_fu_1400_p4_proc : process(tmp_128_fu_1378_p4, index_assign_10_5_fu_1156_p1, p_Repl2_11_5_fu_1396_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_130_fu_1400_p4 <= tmp_128_fu_1378_p4;
        if to_integer(unsigned(index_assign_10_5_fu_1156_p1)) >= tmp_128_fu_1378_p4'low and to_integer(unsigned(index_assign_10_5_fu_1156_p1)) <= tmp_128_fu_1378_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_5_fu_1396_p1'range loop
                result(0) := result(0) or p_Repl2_11_5_fu_1396_p1(i);
            end loop;
            tmp_130_fu_1400_p4(to_integer(unsigned(index_assign_10_5_fu_1156_p1))) <= result(0);
        end if;
    end process;

    tmp_131_fu_1410_p3 <= p_Val2_4_fu_1274_p3(6 downto 6);
    
    tmp_132_fu_1422_p4_proc : process(tmp_130_fu_1400_p4, index_assign_10_6_fu_1176_p1, p_Repl2_11_6_fu_1418_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_132_fu_1422_p4 <= tmp_130_fu_1400_p4;
        if to_integer(unsigned(index_assign_10_6_fu_1176_p1)) >= tmp_130_fu_1400_p4'low and to_integer(unsigned(index_assign_10_6_fu_1176_p1)) <= tmp_130_fu_1400_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_6_fu_1418_p1'range loop
                result(0) := result(0) or p_Repl2_11_6_fu_1418_p1(i);
            end loop;
            tmp_132_fu_1422_p4(to_integer(unsigned(index_assign_10_6_fu_1176_p1))) <= result(0);
        end if;
    end process;

    tmp_133_fu_1432_p3 <= p_Val2_4_fu_1274_p3(7 downto 7);
    
    tmp_134_fu_1444_p4_proc : process(tmp_132_fu_1422_p4, index_assign_10_7_fu_1196_p1, p_Repl2_11_7_fu_1440_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_134_fu_1444_p4 <= tmp_132_fu_1422_p4;
        if to_integer(unsigned(index_assign_10_7_fu_1196_p1)) >= tmp_132_fu_1422_p4'low and to_integer(unsigned(index_assign_10_7_fu_1196_p1)) <= tmp_132_fu_1422_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_7_fu_1440_p1'range loop
                result(0) := result(0) or p_Repl2_11_7_fu_1440_p1(i);
            end loop;
            tmp_134_fu_1444_p4(to_integer(unsigned(index_assign_10_7_fu_1196_p1))) <= result(0);
        end if;
    end process;

    tmp_136_fu_1471_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_3_fu_1467_p1)) downto to_integer(unsigned(index_assign_3_fu_1467_p1))) when (to_integer(unsigned(index_assign_3_fu_1467_p1))>= 0 and to_integer(unsigned(index_assign_3_fu_1467_p1))<=511) else "-";
    tmp_137_fu_1491_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_1_fu_1487_p1)) downto to_integer(unsigned(index_assign_14_1_fu_1487_p1))) when (to_integer(unsigned(index_assign_14_1_fu_1487_p1))>= 0 and to_integer(unsigned(index_assign_14_1_fu_1487_p1))<=511) else "-";
    tmp_138_fu_1511_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_2_fu_1507_p1)) downto to_integer(unsigned(index_assign_14_2_fu_1507_p1))) when (to_integer(unsigned(index_assign_14_2_fu_1507_p1))>= 0 and to_integer(unsigned(index_assign_14_2_fu_1507_p1))<=511) else "-";
    tmp_139_fu_1531_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_3_fu_1527_p1)) downto to_integer(unsigned(index_assign_14_3_fu_1527_p1))) when (to_integer(unsigned(index_assign_14_3_fu_1527_p1))>= 0 and to_integer(unsigned(index_assign_14_3_fu_1527_p1))<=511) else "-";
    tmp_13_fu_1925_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_6);
    tmp_140_fu_1551_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_4_fu_1547_p1)) downto to_integer(unsigned(index_assign_14_4_fu_1547_p1))) when (to_integer(unsigned(index_assign_14_4_fu_1547_p1))>= 0 and to_integer(unsigned(index_assign_14_4_fu_1547_p1))<=511) else "-";
    tmp_141_fu_1571_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_5_fu_1567_p1)) downto to_integer(unsigned(index_assign_14_5_fu_1567_p1))) when (to_integer(unsigned(index_assign_14_5_fu_1567_p1))>= 0 and to_integer(unsigned(index_assign_14_5_fu_1567_p1))<=511) else "-";
    tmp_142_fu_1591_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_6_fu_1587_p1)) downto to_integer(unsigned(index_assign_14_6_fu_1587_p1))) when (to_integer(unsigned(index_assign_14_6_fu_1587_p1))>= 0 and to_integer(unsigned(index_assign_14_6_fu_1587_p1))<=511) else "-";
    tmp_143_fu_1611_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_7_fu_1607_p1)) downto to_integer(unsigned(index_assign_14_7_fu_1607_p1))) when (to_integer(unsigned(index_assign_14_7_fu_1607_p1))>= 0 and to_integer(unsigned(index_assign_14_7_fu_1607_p1))<=511) else "-";
    
    tmp_144_fu_2479_p4_proc : process(glDVSSlice_V_0_q0, index_assign_2_fu_2224_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_144_fu_2479_p4 <= glDVSSlice_V_0_q0;
        if to_integer(unsigned(index_assign_2_fu_2224_p1)) >= glDVSSlice_V_0_q0'low and to_integer(unsigned(index_assign_2_fu_2224_p1)) <= glDVSSlice_V_0_q0'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_144_fu_2479_p4(to_integer(unsigned(index_assign_2_fu_2224_p1))) <= result(0);
        end if;
    end process;

    
    tmp_145_fu_2489_p4_proc : process(tmp_144_fu_2479_p4, index_assign_22_1_fu_2244_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_145_fu_2489_p4 <= tmp_144_fu_2479_p4;
        if to_integer(unsigned(index_assign_22_1_fu_2244_p1)) >= tmp_144_fu_2479_p4'low and to_integer(unsigned(index_assign_22_1_fu_2244_p1)) <= tmp_144_fu_2479_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_145_fu_2489_p4(to_integer(unsigned(index_assign_22_1_fu_2244_p1))) <= result(0);
        end if;
    end process;

    
    tmp_146_fu_2499_p4_proc : process(tmp_145_fu_2489_p4, index_assign_22_2_fu_2264_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_146_fu_2499_p4 <= tmp_145_fu_2489_p4;
        if to_integer(unsigned(index_assign_22_2_fu_2264_p1)) >= tmp_145_fu_2489_p4'low and to_integer(unsigned(index_assign_22_2_fu_2264_p1)) <= tmp_145_fu_2489_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_146_fu_2499_p4(to_integer(unsigned(index_assign_22_2_fu_2264_p1))) <= result(0);
        end if;
    end process;

    
    tmp_147_fu_2509_p4_proc : process(tmp_146_fu_2499_p4, index_assign_22_3_fu_2284_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_147_fu_2509_p4 <= tmp_146_fu_2499_p4;
        if to_integer(unsigned(index_assign_22_3_fu_2284_p1)) >= tmp_146_fu_2499_p4'low and to_integer(unsigned(index_assign_22_3_fu_2284_p1)) <= tmp_146_fu_2499_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_147_fu_2509_p4(to_integer(unsigned(index_assign_22_3_fu_2284_p1))) <= result(0);
        end if;
    end process;

    
    tmp_148_fu_2519_p4_proc : process(tmp_147_fu_2509_p4, index_assign_22_4_fu_2304_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_148_fu_2519_p4 <= tmp_147_fu_2509_p4;
        if to_integer(unsigned(index_assign_22_4_fu_2304_p1)) >= tmp_147_fu_2509_p4'low and to_integer(unsigned(index_assign_22_4_fu_2304_p1)) <= tmp_147_fu_2509_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_148_fu_2519_p4(to_integer(unsigned(index_assign_22_4_fu_2304_p1))) <= result(0);
        end if;
    end process;

    
    tmp_149_fu_2529_p4_proc : process(tmp_148_fu_2519_p4, index_assign_22_5_fu_2324_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_149_fu_2529_p4 <= tmp_148_fu_2519_p4;
        if to_integer(unsigned(index_assign_22_5_fu_2324_p1)) >= tmp_148_fu_2519_p4'low and to_integer(unsigned(index_assign_22_5_fu_2324_p1)) <= tmp_148_fu_2519_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_149_fu_2529_p4(to_integer(unsigned(index_assign_22_5_fu_2324_p1))) <= result(0);
        end if;
    end process;

    tmp_14_fu_2007_p2 <= "1" when (tmp_7_fu_1999_p3 = ap_const_lv18_10000) else "0";
    
    tmp_150_fu_2539_p4_proc : process(tmp_149_fu_2529_p4, index_assign_22_6_fu_2344_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_150_fu_2539_p4 <= tmp_149_fu_2529_p4;
        if to_integer(unsigned(index_assign_22_6_fu_2344_p1)) >= tmp_149_fu_2529_p4'low and to_integer(unsigned(index_assign_22_6_fu_2344_p1)) <= tmp_149_fu_2529_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_150_fu_2539_p4(to_integer(unsigned(index_assign_22_6_fu_2344_p1))) <= result(0);
        end if;
    end process;

    
    tmp_151_fu_2549_p4_proc : process(tmp_150_fu_2539_p4, index_assign_22_7_fu_2364_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_151_fu_2549_p4 <= tmp_150_fu_2539_p4;
        if to_integer(unsigned(index_assign_22_7_fu_2364_p1)) >= tmp_150_fu_2539_p4'low and to_integer(unsigned(index_assign_22_7_fu_2364_p1)) <= tmp_150_fu_2539_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_151_fu_2549_p4(to_integer(unsigned(index_assign_22_7_fu_2364_p1))) <= result(0);
        end if;
    end process;

    
    tmp_152_fu_1722_p4_proc : process(glDVSSlice_V_1_q0, index_assign_3_fu_1467_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_152_fu_1722_p4 <= glDVSSlice_V_1_q0;
        if to_integer(unsigned(index_assign_3_fu_1467_p1)) >= glDVSSlice_V_1_q0'low and to_integer(unsigned(index_assign_3_fu_1467_p1)) <= glDVSSlice_V_1_q0'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_152_fu_1722_p4(to_integer(unsigned(index_assign_3_fu_1467_p1))) <= result(0);
        end if;
    end process;

    
    tmp_153_fu_1732_p4_proc : process(tmp_152_fu_1722_p4, index_assign_14_1_fu_1487_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_153_fu_1732_p4 <= tmp_152_fu_1722_p4;
        if to_integer(unsigned(index_assign_14_1_fu_1487_p1)) >= tmp_152_fu_1722_p4'low and to_integer(unsigned(index_assign_14_1_fu_1487_p1)) <= tmp_152_fu_1722_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_153_fu_1732_p4(to_integer(unsigned(index_assign_14_1_fu_1487_p1))) <= result(0);
        end if;
    end process;

    
    tmp_154_fu_1742_p4_proc : process(tmp_153_fu_1732_p4, index_assign_14_2_fu_1507_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_154_fu_1742_p4 <= tmp_153_fu_1732_p4;
        if to_integer(unsigned(index_assign_14_2_fu_1507_p1)) >= tmp_153_fu_1732_p4'low and to_integer(unsigned(index_assign_14_2_fu_1507_p1)) <= tmp_153_fu_1732_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_154_fu_1742_p4(to_integer(unsigned(index_assign_14_2_fu_1507_p1))) <= result(0);
        end if;
    end process;

    
    tmp_155_fu_1752_p4_proc : process(tmp_154_fu_1742_p4, index_assign_14_3_fu_1527_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_155_fu_1752_p4 <= tmp_154_fu_1742_p4;
        if to_integer(unsigned(index_assign_14_3_fu_1527_p1)) >= tmp_154_fu_1742_p4'low and to_integer(unsigned(index_assign_14_3_fu_1527_p1)) <= tmp_154_fu_1742_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_155_fu_1752_p4(to_integer(unsigned(index_assign_14_3_fu_1527_p1))) <= result(0);
        end if;
    end process;

    
    tmp_156_fu_1762_p4_proc : process(tmp_155_fu_1752_p4, index_assign_14_4_fu_1547_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_156_fu_1762_p4 <= tmp_155_fu_1752_p4;
        if to_integer(unsigned(index_assign_14_4_fu_1547_p1)) >= tmp_155_fu_1752_p4'low and to_integer(unsigned(index_assign_14_4_fu_1547_p1)) <= tmp_155_fu_1752_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_156_fu_1762_p4(to_integer(unsigned(index_assign_14_4_fu_1547_p1))) <= result(0);
        end if;
    end process;

    
    tmp_157_fu_1772_p4_proc : process(tmp_156_fu_1762_p4, index_assign_14_5_fu_1567_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_157_fu_1772_p4 <= tmp_156_fu_1762_p4;
        if to_integer(unsigned(index_assign_14_5_fu_1567_p1)) >= tmp_156_fu_1762_p4'low and to_integer(unsigned(index_assign_14_5_fu_1567_p1)) <= tmp_156_fu_1762_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_157_fu_1772_p4(to_integer(unsigned(index_assign_14_5_fu_1567_p1))) <= result(0);
        end if;
    end process;

    
    tmp_158_fu_1782_p4_proc : process(tmp_157_fu_1772_p4, index_assign_14_6_fu_1587_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_158_fu_1782_p4 <= tmp_157_fu_1772_p4;
        if to_integer(unsigned(index_assign_14_6_fu_1587_p1)) >= tmp_157_fu_1772_p4'low and to_integer(unsigned(index_assign_14_6_fu_1587_p1)) <= tmp_157_fu_1772_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_158_fu_1782_p4(to_integer(unsigned(index_assign_14_6_fu_1587_p1))) <= result(0);
        end if;
    end process;

    
    tmp_159_fu_1792_p4_proc : process(tmp_158_fu_1782_p4, index_assign_14_7_fu_1607_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_159_fu_1792_p4 <= tmp_158_fu_1782_p4;
        if to_integer(unsigned(index_assign_14_7_fu_1607_p1)) >= tmp_158_fu_1782_p4'low and to_integer(unsigned(index_assign_14_7_fu_1607_p1)) <= tmp_158_fu_1782_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_159_fu_1792_p4(to_integer(unsigned(index_assign_14_7_fu_1607_p1))) <= result(0);
        end if;
    end process;

    tmp_15_fu_1242_p3 <= (reg_715 & ap_const_lv16_0);
    tmp_160_fu_904_p4 <= ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_430(17 downto 16);
    tmp_161_fu_2559_p3 <= ap_phi_reg_pp0_iter5_p_Val2_8_reg_632(7 downto 7);
    tmp_163_fu_2583_p1 <= ap_phi_reg_pp0_iter5_p_Val2_8_reg_632(4 - 1 downto 0);
    tmp_16_fu_820_p1 <= ap_phi_reg_pp0_iter3_p_01431_1_reg_439(14 - 1 downto 0);
    tmp_17_fu_1945_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_7);
    tmp_18_fu_1250_p2 <= "1" when (tmp_15_fu_1242_p3 = ap_const_lv18_10000) else "0";
    tmp_19_fu_2017_p2 <= "1" when (tmp_7_fu_1999_p3 = ap_const_lv18_20000) else "0";
    tmp_1_fu_1825_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_1);
    tmp_20_fu_824_p4 <= tmp_V_reg_2744_pp0_iter2_reg(10 downto 6);
    tmp_21_fu_1802_p1 <= tmp_V_reg_2744_pp0_iter3_reg(6 - 1 downto 0);
    tmp_22_fu_1260_p2 <= "1" when (tmp_15_fu_1242_p3 = ap_const_lv18_20000) else "0";
    tmp_24_fu_1817_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_s_fu_1813_p1)) downto to_integer(unsigned(index_assign_s_fu_1813_p1))) when (to_integer(unsigned(index_assign_s_fu_1813_p1))>= 0 and to_integer(unsigned(index_assign_s_fu_1813_p1))<=511) else "-";
    tmp_25_fu_1837_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_1_fu_1833_p1)) downto to_integer(unsigned(index_assign_18_1_fu_1833_p1))) when (to_integer(unsigned(index_assign_18_1_fu_1833_p1))>= 0 and to_integer(unsigned(index_assign_18_1_fu_1833_p1))<=511) else "-";
    tmp_28_fu_1857_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_2_fu_1853_p1)) downto to_integer(unsigned(index_assign_18_2_fu_1853_p1))) when (to_integer(unsigned(index_assign_18_2_fu_1853_p1))>= 0 and to_integer(unsigned(index_assign_18_2_fu_1853_p1))<=511) else "-";
    tmp_29_fu_1877_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_3_fu_1873_p1)) downto to_integer(unsigned(index_assign_18_3_fu_1873_p1))) when (to_integer(unsigned(index_assign_18_3_fu_1873_p1))>= 0 and to_integer(unsigned(index_assign_18_3_fu_1873_p1))<=511) else "-";
    tmp_2_fu_770_p3 <= (tmp_4_fu_761_p4 & ap_const_lv1_0);
    tmp_31_cast_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_669_p4),14));
    tmp_31_fu_1897_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_4_fu_1893_p1)) downto to_integer(unsigned(index_assign_18_4_fu_1893_p1))) when (to_integer(unsigned(index_assign_18_4_fu_1893_p1))>= 0 and to_integer(unsigned(index_assign_18_4_fu_1893_p1))<=511) else "-";
    tmp_32_fu_1917_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_5_fu_1913_p1)) downto to_integer(unsigned(index_assign_18_5_fu_1913_p1))) when (to_integer(unsigned(index_assign_18_5_fu_1913_p1))>= 0 and to_integer(unsigned(index_assign_18_5_fu_1913_p1))<=511) else "-";
    tmp_33_fu_1937_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_6_fu_1933_p1)) downto to_integer(unsigned(index_assign_18_6_fu_1933_p1))) when (to_integer(unsigned(index_assign_18_6_fu_1933_p1))>= 0 and to_integer(unsigned(index_assign_18_6_fu_1933_p1))<=511) else "-";
    tmp_34_fu_1957_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_7_fu_1953_p1)) downto to_integer(unsigned(index_assign_18_7_fu_1953_p1))) when (to_integer(unsigned(index_assign_18_7_fu_1953_p1))>= 0 and to_integer(unsigned(index_assign_18_7_fu_1953_p1))<=511) else "-";
    tmp_36_cast_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_669_p4),14));
    tmp_37_fu_2039_p1 <= p_Val2_2_fu_2031_p3(1 - 1 downto 0);
    tmp_38_fu_2216_p3 <= (grp_fu_706_p4 & ap_const_lv3_0);
    
    tmp_39_fu_2047_p4_proc : process(glDVSSlice_V_1_q0, index_assign_s_fu_1813_p1, p_Repl2_8_fu_2043_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_39_fu_2047_p4 <= glDVSSlice_V_1_q0;
        if to_integer(unsigned(index_assign_s_fu_1813_p1)) >= glDVSSlice_V_1_q0'low and to_integer(unsigned(index_assign_s_fu_1813_p1)) <= glDVSSlice_V_1_q0'high then
            result(0) := '0';
            for i in p_Repl2_8_fu_2043_p1'range loop
                result(0) := result(0) or p_Repl2_8_fu_2043_p1(i);
            end loop;
            tmp_39_fu_2047_p4(to_integer(unsigned(index_assign_s_fu_1813_p1))) <= result(0);
        end if;
    end process;

    tmp_3_fu_1845_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_2);
    tmp_40_fu_2057_p3 <= p_Val2_2_fu_2031_p3(1 downto 1);
    tmp_41_fu_2236_p3 <= (grp_fu_706_p4 & ap_const_lv3_1);
    tmp_42_cast_fu_833_p3 <= (tmp_20_fu_824_p4 & ap_const_lv9_0);
    
    tmp_42_fu_2069_p4_proc : process(tmp_39_fu_2047_p4, index_assign_18_1_fu_1833_p1, p_Repl2_8_1_fu_2065_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_42_fu_2069_p4 <= tmp_39_fu_2047_p4;
        if to_integer(unsigned(index_assign_18_1_fu_1833_p1)) >= tmp_39_fu_2047_p4'low and to_integer(unsigned(index_assign_18_1_fu_1833_p1)) <= tmp_39_fu_2047_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_1_fu_2065_p1'range loop
                result(0) := result(0) or p_Repl2_8_1_fu_2065_p1(i);
            end loop;
            tmp_42_fu_2069_p4(to_integer(unsigned(index_assign_18_1_fu_1833_p1))) <= result(0);
        end if;
    end process;

    tmp_43_fu_2079_p3 <= p_Val2_2_fu_2031_p3(2 downto 2);
    tmp_44_fu_2256_p3 <= (grp_fu_706_p4 & ap_const_lv3_2);
    
    tmp_45_fu_2091_p4_proc : process(tmp_42_fu_2069_p4, index_assign_18_2_fu_1853_p1, p_Repl2_8_2_fu_2087_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_45_fu_2091_p4 <= tmp_42_fu_2069_p4;
        if to_integer(unsigned(index_assign_18_2_fu_1853_p1)) >= tmp_42_fu_2069_p4'low and to_integer(unsigned(index_assign_18_2_fu_1853_p1)) <= tmp_42_fu_2069_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_2_fu_2087_p1'range loop
                result(0) := result(0) or p_Repl2_8_2_fu_2087_p1(i);
            end loop;
            tmp_45_fu_2091_p4(to_integer(unsigned(index_assign_18_2_fu_1853_p1))) <= result(0);
        end if;
    end process;

    tmp_46_fu_2276_p3 <= (grp_fu_706_p4 & ap_const_lv3_3);
    tmp_47_fu_2101_p3 <= p_Val2_2_fu_2031_p3(3 downto 3);
    tmp_48_fu_2396_p2 <= "1" when (signed(p_Result_81_7_fu_2376_p9) > signed(ap_const_lv8_0)) else "0";
    tmp_49_fu_2296_p3 <= (grp_fu_706_p4 & ap_const_lv3_4);
    tmp_4_fu_761_p4 <= ctrl_V_read_reg_2772(31 downto 1);
    
    tmp_50_fu_2113_p4_proc : process(tmp_45_fu_2091_p4, index_assign_18_3_fu_1873_p1, p_Repl2_8_3_fu_2109_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_50_fu_2113_p4 <= tmp_45_fu_2091_p4;
        if to_integer(unsigned(index_assign_18_3_fu_1873_p1)) >= tmp_45_fu_2091_p4'low and to_integer(unsigned(index_assign_18_3_fu_1873_p1)) <= tmp_45_fu_2091_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_3_fu_2109_p1'range loop
                result(0) := result(0) or p_Repl2_8_3_fu_2109_p1(i);
            end loop;
            tmp_50_fu_2113_p4(to_integer(unsigned(index_assign_18_3_fu_1873_p1))) <= result(0);
        end if;
    end process;

    tmp_51_fu_1639_p2 <= "1" when (signed(p_Result_65_7_fu_1619_p9) > signed(ap_const_lv8_0)) else "0";
    tmp_52_fu_2123_p3 <= p_Val2_2_fu_2031_p3(4 downto 4);
    
    tmp_53_fu_2135_p4_proc : process(tmp_50_fu_2113_p4, index_assign_18_4_fu_1893_p1, p_Repl2_8_4_fu_2131_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_53_fu_2135_p4 <= tmp_50_fu_2113_p4;
        if to_integer(unsigned(index_assign_18_4_fu_1893_p1)) >= tmp_50_fu_2113_p4'low and to_integer(unsigned(index_assign_18_4_fu_1893_p1)) <= tmp_50_fu_2113_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_4_fu_2131_p1'range loop
                result(0) := result(0) or p_Repl2_8_4_fu_2131_p1(i);
            end loop;
            tmp_53_fu_2135_p4(to_integer(unsigned(index_assign_18_4_fu_1893_p1))) <= result(0);
        end if;
    end process;

    tmp_54_cast_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_841_p2),64));
    tmp_54_fu_2145_p3 <= p_Val2_2_fu_2031_p3(5 downto 5);
    
    tmp_55_fu_2157_p4_proc : process(tmp_53_fu_2135_p4, index_assign_18_5_fu_1913_p1, p_Repl2_8_5_fu_2153_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_55_fu_2157_p4 <= tmp_53_fu_2135_p4;
        if to_integer(unsigned(index_assign_18_5_fu_1913_p1)) >= tmp_53_fu_2135_p4'low and to_integer(unsigned(index_assign_18_5_fu_1913_p1)) <= tmp_53_fu_2135_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_5_fu_2153_p1'range loop
                result(0) := result(0) or p_Repl2_8_5_fu_2153_p1(i);
            end loop;
            tmp_55_fu_2157_p4(to_integer(unsigned(index_assign_18_5_fu_1913_p1))) <= result(0);
        end if;
    end process;

    tmp_56_fu_2167_p3 <= p_Val2_2_fu_2031_p3(6 downto 6);
    
    tmp_57_fu_2179_p4_proc : process(tmp_55_fu_2157_p4, index_assign_18_6_fu_1933_p1, p_Repl2_8_6_fu_2175_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_57_fu_2179_p4 <= tmp_55_fu_2157_p4;
        if to_integer(unsigned(index_assign_18_6_fu_1933_p1)) >= tmp_55_fu_2157_p4'low and to_integer(unsigned(index_assign_18_6_fu_1933_p1)) <= tmp_55_fu_2157_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_6_fu_2175_p1'range loop
                result(0) := result(0) or p_Repl2_8_6_fu_2175_p1(i);
            end loop;
            tmp_57_fu_2179_p4(to_integer(unsigned(index_assign_18_6_fu_1933_p1))) <= result(0);
        end if;
    end process;

    tmp_58_fu_2316_p3 <= (grp_fu_706_p4 & ap_const_lv3_5);
    tmp_59_fu_2189_p3 <= p_Val2_2_fu_2031_p3(7 downto 7);
    tmp_5_fu_747_p1 <= ctrl_V_0_data_reg(1 - 1 downto 0);
    tmp_60_fu_2336_p3 <= (grp_fu_706_p4 & ap_const_lv3_6);
    tmp_62_fu_2356_p3 <= (grp_fu_706_p4 & ap_const_lv3_7);
    tmp_63_fu_1048_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_0);
    
    tmp_64_fu_2201_p4_proc : process(tmp_57_fu_2179_p4, index_assign_18_7_fu_1953_p1, p_Repl2_8_7_fu_2197_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_64_fu_2201_p4 <= tmp_57_fu_2179_p4;
        if to_integer(unsigned(index_assign_18_7_fu_1953_p1)) >= tmp_57_fu_2179_p4'low and to_integer(unsigned(index_assign_18_7_fu_1953_p1)) <= tmp_57_fu_2179_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_7_fu_2197_p1'range loop
                result(0) := result(0) or p_Repl2_8_7_fu_2197_p1(i);
            end loop;
            tmp_64_fu_2201_p4(to_integer(unsigned(index_assign_18_7_fu_1953_p1))) <= result(0);
        end if;
    end process;

    tmp_65_fu_1068_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_1);
    tmp_67_fu_1088_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_2);
    tmp_68_fu_1108_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_3);
    tmp_69_fu_1128_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_4);
    tmp_6_fu_1865_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_3);
    tmp_71_fu_1148_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_5);
    tmp_72_fu_1168_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_6);
    tmp_73_fu_880_p3 <= (grp_fu_678_p4 & ap_const_lv9_0);
    tmp_74_fu_888_p2 <= std_logic_vector(unsigned(tmp_73_fu_880_p3) + unsigned(tmp_31_cast_fu_876_p1));
    tmp_75_fu_2228_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_2_fu_2224_p1)) downto to_integer(unsigned(index_assign_2_fu_2224_p1))) when (to_integer(unsigned(index_assign_2_fu_2224_p1))>= 0 and to_integer(unsigned(index_assign_2_fu_2224_p1))<=511) else "-";
    tmp_76_fu_1188_p3 <= (tmp_105_fu_1045_p1 & ap_const_lv3_7);
    tmp_77_fu_1459_p3 <= (grp_fu_706_p4 & ap_const_lv3_0);
    tmp_78_fu_1479_p3 <= (grp_fu_706_p4 & ap_const_lv3_1);
    tmp_79_fu_2248_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_1_fu_2244_p1)) downto to_integer(unsigned(index_assign_22_1_fu_2244_p1))) when (to_integer(unsigned(index_assign_22_1_fu_2244_p1))>= 0 and to_integer(unsigned(index_assign_22_1_fu_2244_p1))<=511) else "-";
    tmp_7_fu_1999_p3 <= (reg_715 & ap_const_lv16_0);
    tmp_80_fu_2268_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_2_fu_2264_p1)) downto to_integer(unsigned(index_assign_22_2_fu_2264_p1))) when (to_integer(unsigned(index_assign_22_2_fu_2264_p1))>= 0 and to_integer(unsigned(index_assign_22_2_fu_2264_p1))<=511) else "-";
    tmp_81_fu_2288_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_3_fu_2284_p1)) downto to_integer(unsigned(index_assign_22_3_fu_2284_p1))) when (to_integer(unsigned(index_assign_22_3_fu_2284_p1))>= 0 and to_integer(unsigned(index_assign_22_3_fu_2284_p1))<=511) else "-";
    tmp_82_fu_1499_p3 <= (grp_fu_706_p4 & ap_const_lv3_2);
    tmp_83_fu_1519_p3 <= (grp_fu_706_p4 & ap_const_lv3_3);
    tmp_84_fu_1539_p3 <= (grp_fu_706_p4 & ap_const_lv3_4);
    tmp_85_fu_1559_p3 <= (grp_fu_706_p4 & ap_const_lv3_5);
    tmp_86_fu_2308_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_4_fu_2304_p1)) downto to_integer(unsigned(index_assign_22_4_fu_2304_p1))) when (to_integer(unsigned(index_assign_22_4_fu_2304_p1))>= 0 and to_integer(unsigned(index_assign_22_4_fu_2304_p1))<=511) else "-";
    tmp_87_fu_2328_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_5_fu_2324_p1)) downto to_integer(unsigned(index_assign_22_5_fu_2324_p1))) when (to_integer(unsigned(index_assign_22_5_fu_2324_p1))>= 0 and to_integer(unsigned(index_assign_22_5_fu_2324_p1))<=511) else "-";
    tmp_88_fu_1579_p3 <= (grp_fu_706_p4 & ap_const_lv3_6);
    tmp_89_fu_2348_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_6_fu_2344_p1)) downto to_integer(unsigned(index_assign_22_6_fu_2344_p1))) when (to_integer(unsigned(index_assign_22_6_fu_2344_p1))>= 0 and to_integer(unsigned(index_assign_22_6_fu_2344_p1))<=511) else "-";
    tmp_8_fu_1885_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_4);
    tmp_90_fu_926_p2 <= (vCntReg_V or hCntReg_V);
    tmp_91_fu_932_p2 <= "1" when (tmp_90_fu_926_p2 = ap_const_lv12_0) else "0";
    tmp_92_fu_938_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(hCntReg_V));
    tmp_93_fu_945_p2 <= "1" when (tmp_92_fu_938_p2 = ap_const_lv12_320) else "0";
    tmp_94_fu_951_p2 <= std_logic_vector(unsigned(vCntReg_V) + unsigned(ap_const_lv12_1));
    tmp_95_fu_957_p2 <= "1" when (tmp_94_fu_951_p2 = ap_const_lv12_258) else "0";
    tmp_96_cast_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cntReg_V),34));
    tmp_96_fu_1599_p3 <= (grp_fu_706_p4 & ap_const_lv3_7);
    tmp_97_fu_993_p2 <= "1" when (tmp_96_cast_fu_989_p1 = r_V_reg_2792) else "0";
    tmp_98_fu_2648_p2 <= "1" when (unsigned(startX_V) > unsigned(ap_const_lv16_C7)) else "0";
    tmp_99_fu_2654_p2 <= std_logic_vector(unsigned(startX_V) + unsigned(ap_const_lv16_1));
    tmp_9_fu_1042_p1 <= tmp_V_reg_2744_pp0_iter3_reg(12 - 1 downto 0);
    tmp_V_2_fu_757_p1 <= polStream_V_V_0_data_out(1 - 1 downto 0);
    tmp_fu_1805_p3 <= (tmp_21_fu_1802_p1 & ap_const_lv3_0);
    tmp_last_V_fu_920_p2 <= "1" when (hCntReg_V = ap_const_lv12_31F) else "0";
    tmp_s_fu_841_p2 <= std_logic_vector(unsigned(tmp_42_cast_fu_833_p3) + unsigned(tmp_16_fu_820_p1));
    tmp_user_V_fu_2632_p3 <= 
        ap_const_lv2_3 when (tmp_91_reg_2868_pp0_iter4_reg(0) = '1') else 
        ap_const_lv2_0;
    tsReg_V <= p_2_reg_584_pp0_iter5_reg;

    tsReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_tsReg_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_tsReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            tsReg_V_ap_vld <= ap_const_logic_1;
        else 
            tsReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    tsStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, empty_n_fu_723_p1, empty_n_1_fu_731_p1)
    begin
        if (((empty_n_1_fu_731_p1 = ap_const_lv1_1) and (empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            tsStream_V_V_TREADY <= ap_const_logic_1;
        else 
            tsStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    vCnt_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vCntReg_V_load_2_reg_510_pp0_iter5_reg),16));

    vCnt_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_vCnt_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_vCnt_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            vCnt_V_ap_vld <= ap_const_logic_1;
        else 
            vCnt_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    vgaEn_V <= ap_phi_reg_pp0_iter6_val_assign_reg_641;

    vgaEn_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_01001, ap_reg_ioackin_vgaEn_V_dummy_ack)
    begin
        if (((ap_reg_ioackin_vgaEn_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001))) then 
            vgaEn_V_ap_vld <= ap_const_logic_1;
        else 
            vgaEn_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    vgaOutputEn_load_load_fu_899_p1 <= vgaOutputEn;
    vgaReadPixVal_V_1_fu_1645_p2 <= std_logic_vector(unsigned(reg_719) + unsigned(p_Result_65_7_fu_1619_p9));
    vgaReadPixVal_V_2_fu_2408_p2 <= std_logic_vector(unsigned(p_Result_81_7_fu_2376_p9) - unsigned(reg_719));
    vgaReadPixVal_V_3_fu_1651_p2 <= std_logic_vector(unsigned(p_Result_65_7_fu_1619_p9) - unsigned(reg_719));
    vgaReadPixVal_V_5_fu_2571_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(ap_phi_reg_pp0_iter5_p_Val2_8_reg_632));
    vgaReadPixVal_V_fu_2402_p2 <= std_logic_vector(unsigned(reg_719) + unsigned(p_Result_81_7_fu_2376_p9));

    xStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            xStream_V_V_TREADY <= ap_const_logic_1;
        else 
            xStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    yStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, empty_n_fu_723_p1)
    begin
        if (((empty_n_fu_723_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            yStream_V_V_TREADY <= ap_const_logic_1;
        else 
            yStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

end behav;

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity EVABMOFStreamWithControl is
generic (
    C_S_AXI_CONFIG_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONFIG_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_config_AWVALID : IN STD_LOGIC;
    s_axi_config_AWREADY : OUT STD_LOGIC;
    s_axi_config_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_config_WVALID : IN STD_LOGIC;
    s_axi_config_WREADY : OUT STD_LOGIC;
    s_axi_config_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_config_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH/8-1 downto 0);
    s_axi_config_ARVALID : IN STD_LOGIC;
    s_axi_config_ARREADY : OUT STD_LOGIC;
    s_axi_config_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONFIG_ADDR_WIDTH-1 downto 0);
    s_axi_config_RVALID : OUT STD_LOGIC;
    s_axi_config_RREADY : IN STD_LOGIC;
    s_axi_config_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONFIG_DATA_WIDTH-1 downto 0);
    s_axi_config_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_config_BVALID : OUT STD_LOGIC;
    s_axi_config_BREADY : IN STD_LOGIC;
    s_axi_config_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    xStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    yStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    tsStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    polStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    controlStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    xStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    yStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    tsStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    polStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixelDataStream_V_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    xStreamIn_V_V_TVALID : IN STD_LOGIC;
    xStreamIn_V_V_TREADY : OUT STD_LOGIC;
    yStreamIn_V_V_TVALID : IN STD_LOGIC;
    yStreamIn_V_V_TREADY : OUT STD_LOGIC;
    polStreamIn_V_V_TVALID : IN STD_LOGIC;
    polStreamIn_V_V_TREADY : OUT STD_LOGIC;
    tsStreamIn_V_V_TVALID : IN STD_LOGIC;
    tsStreamIn_V_V_TREADY : OUT STD_LOGIC;
    controlStreamIn_V_V_TVALID : IN STD_LOGIC;
    controlStreamIn_V_V_TREADY : OUT STD_LOGIC;
    xStreamOut_V_V_TVALID : OUT STD_LOGIC;
    xStreamOut_V_V_TREADY : IN STD_LOGIC;
    yStreamOut_V_V_TVALID : OUT STD_LOGIC;
    yStreamOut_V_V_TREADY : IN STD_LOGIC;
    polStreamOut_V_V_TVALID : OUT STD_LOGIC;
    polStreamOut_V_V_TREADY : IN STD_LOGIC;
    tsStreamOut_V_V_TVALID : OUT STD_LOGIC;
    tsStreamOut_V_V_TREADY : IN STD_LOGIC;
    pixelDataStream_V_V_TVALID : OUT STD_LOGIC;
    pixelDataStream_V_V_TREADY : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of EVABMOFStreamWithControl is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "EVABMOFStreamWithControl,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.890000,HLS_SYN_LAT=93,HLS_SYN_TPT=52,HLS_SYN_MEM=350,HLS_SYN_DSP=670,HLS_SYN_FF=41578,HLS_SYN_LUT=71887}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal config_V : STD_LOGIC_VECTOR (31 downto 0);
    signal EVABMOFStreamWithCon_2_U0_ap_start : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_ap_done : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_ap_continue : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_ap_idle : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_ap_ready : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_start_out : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_start_write : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_config_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal EVABMOFStreamWithCon_2_U0_config_V_out_write : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_ap_start : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_ap_done : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_ap_continue : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_ap_idle : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_ap_ready : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_start_out : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_start_write : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_config_V_read : STD_LOGIC;
    signal EVABMOFStreamWithCon_1_U0_config_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal EVABMOFStreamWithCon_1_U0_config_V_out_write : STD_LOGIC;
    signal Block_proc_U0_ap_start : STD_LOGIC;
    signal Block_proc_U0_ap_done : STD_LOGIC;
    signal Block_proc_U0_ap_continue : STD_LOGIC;
    signal Block_proc_U0_ap_idle : STD_LOGIC;
    signal Block_proc_U0_ap_ready : STD_LOGIC;
    signal Block_proc_U0_config_V_read : STD_LOGIC;
    signal Block_proc_U0_glConfig_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc_U0_glConfig_V_out_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_ap_start : STD_LOGIC;
    signal truncateStreamWithCo_U0_start_full_n : STD_LOGIC;
    signal truncateStreamWithCo_U0_ap_done : STD_LOGIC;
    signal truncateStreamWithCo_U0_ap_continue : STD_LOGIC;
    signal truncateStreamWithCo_U0_ap_idle : STD_LOGIC;
    signal truncateStreamWithCo_U0_ap_ready : STD_LOGIC;
    signal truncateStreamWithCo_U0_packetEventDataStream_V_V_din : STD_LOGIC_VECTOR (95 downto 0);
    signal truncateStreamWithCo_U0_packetEventDataStream_V_V_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_xStreamOut_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal truncateStreamWithCo_U0_xStreamOut_V_V_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_yStreamOut_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal truncateStreamWithCo_U0_yStreamOut_V_V_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_tsStreamOut_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal truncateStreamWithCo_U0_tsStreamOut_V_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V1_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V1_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V2_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V2_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V3_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V3_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V4_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V4_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V5_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V5_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V6_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V6_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V7_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V7_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V8_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V8_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V9_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V9_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V10_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V10_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V11_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V11_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V12_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V12_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V13_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V13_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V14_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V14_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V15_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V15_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_select_V_2_din : STD_LOGIC_VECTOR (0 downto 0);
    signal truncateStreamWithCo_U0_select_V_2_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_start_out : STD_LOGIC;
    signal truncateStreamWithCo_U0_start_write : STD_LOGIC;
    signal truncateStreamWithCo_U0_xStreamIn_V_V_TREADY : STD_LOGIC;
    signal truncateStreamWithCo_U0_yStreamIn_V_V_TREADY : STD_LOGIC;
    signal truncateStreamWithCo_U0_polStreamIn_V_V_TREADY : STD_LOGIC;
    signal truncateStreamWithCo_U0_tsStreamIn_V_V_TREADY : STD_LOGIC;
    signal truncateStreamWithCo_U0_controlStreamIn_V_V_TREADY : STD_LOGIC;
    signal rotateSliceAllScales_U0_ap_start : STD_LOGIC;
    signal rotateSliceAllScales_U0_ap_done : STD_LOGIC;
    signal rotateSliceAllScales_U0_ap_continue : STD_LOGIC;
    signal rotateSliceAllScales_U0_ap_idle : STD_LOGIC;
    signal rotateSliceAllScales_U0_ap_ready : STD_LOGIC;
    signal rotateSliceAllScales_U0_xInStream_V_V_read : STD_LOGIC;
    signal rotateSliceAllScales_U0_yInStream_V_V_read : STD_LOGIC;
    signal rotateSliceAllScales_U0_tsInStream_V_read : STD_LOGIC;
    signal rotateSliceAllScales_U0_xOutStream_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal rotateSliceAllScales_U0_xOutStream_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_yOutStream_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal rotateSliceAllScales_U0_yOutStream_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_idxStream_V_V_din : STD_LOGIC_VECTOR (1 downto 0);
    signal rotateSliceAllScales_U0_idxStream_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_xOutStreamScale1_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal rotateSliceAllScales_U0_xOutStreamScale1_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_yOutStreamScale1_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal rotateSliceAllScales_U0_yOutStreamScale1_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_idxStreamScale1_V_V_din : STD_LOGIC_VECTOR (1 downto 0);
    signal rotateSliceAllScales_U0_idxStreamScale1_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_xOutStreamScale2_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal rotateSliceAllScales_U0_xOutStreamScale2_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_yOutStreamScale2_V_V_din : STD_LOGIC_VECTOR (9 downto 0);
    signal rotateSliceAllScales_U0_yOutStreamScale2_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_idxStreamScale2_V_V_din : STD_LOGIC_VECTOR (1 downto 0);
    signal rotateSliceAllScales_U0_idxStreamScale2_V_V_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_glConfig_V_read : STD_LOGIC;
    signal rotateSliceAllScales_U0_deltaTsHWBak_V_out_din : STD_LOGIC_VECTOR (8 downto 0);
    signal rotateSliceAllScales_U0_deltaTsHWBak_V_out_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_glConfig_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal rotateSliceAllScales_U0_glConfig_V_out_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_glRotateFlg_V_out_din : STD_LOGIC_VECTOR (0 downto 0);
    signal rotateSliceAllScales_U0_glRotateFlg_V_out_write : STD_LOGIC;
    signal rotateSliceAllScales_U0_glSFASTAreaCntThrBak_out_din : STD_LOGIC_VECTOR (15 downto 0);
    signal rotateSliceAllScales_U0_glSFASTAreaCntThrBak_out_write : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_ap_start : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_ap_done : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_ap_continue : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_ap_idle : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_ap_ready : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_select_V_read : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_xStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_yStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_idxStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_refStreamOutScale2_V_V_din : STD_LOGIC_VECTOR (51 downto 0);
    signal rwSlicesScale2WithSe_U0_refStreamOutScale2_V_V_write : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_tagStreamOutScale2_V_V_din : STD_LOGIC_VECTOR (51 downto 0);
    signal rwSlicesScale2WithSe_U0_tagStreamOutScale2_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_U0_ap_start : STD_LOGIC;
    signal colStreamToColSumSca_U0_ap_done : STD_LOGIC;
    signal colStreamToColSumSca_U0_ap_continue : STD_LOGIC;
    signal colStreamToColSumSca_U0_ap_idle : STD_LOGIC;
    signal colStreamToColSumSca_U0_ap_ready : STD_LOGIC;
    signal colStreamToColSumSca_U0_select_V_read : STD_LOGIC;
    signal colStreamToColSumSca_U0_colStream0_V_V_read : STD_LOGIC;
    signal colStreamToColSumSca_U0_colStream1_V_V_read : STD_LOGIC;
    signal colStreamToColSumSca_U0_outStream_V_V_din : STD_LOGIC_VECTOR (111 downto 0);
    signal colStreamToColSumSca_U0_outStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_U0_refZeroCntStream_V_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal colStreamToColSumSca_U0_refZeroCntStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_U0_tagColValidCntStream_V_V_din : STD_LOGIC_VECTOR (41 downto 0);
    signal colStreamToColSumSca_U0_tagColValidCntStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_U0_refTagValidCntStream_V_V_din : STD_LOGIC_VECTOR (41 downto 0);
    signal colStreamToColSumSca_U0_refTagValidCntStream_V_V_write : STD_LOGIC;
    signal accumulateStreamScal_U0_ap_start : STD_LOGIC;
    signal accumulateStreamScal_U0_ap_done : STD_LOGIC;
    signal accumulateStreamScal_U0_ap_continue : STD_LOGIC;
    signal accumulateStreamScal_U0_ap_idle : STD_LOGIC;
    signal accumulateStreamScal_U0_ap_ready : STD_LOGIC;
    signal accumulateStreamScal_U0_select_V_read : STD_LOGIC;
    signal accumulateStreamScal_U0_inStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_U0_outStream_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal accumulateStreamScal_U0_outStream_V_write : STD_LOGIC;
    signal accumulateStreamScal_U0_OF_yStream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal accumulateStreamScal_U0_OF_yStream_V_write : STD_LOGIC;
    signal accumulateStreamScal_U0_refZeroCntStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_U0_tagColValidCntStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_U0_refTagValidCntStream_V_V_read : STD_LOGIC;
    signal findStreamMinScale2W_U0_ap_start : STD_LOGIC;
    signal findStreamMinScale2W_U0_ap_done : STD_LOGIC;
    signal findStreamMinScale2W_U0_ap_continue : STD_LOGIC;
    signal findStreamMinScale2W_U0_ap_idle : STD_LOGIC;
    signal findStreamMinScale2W_U0_ap_ready : STD_LOGIC;
    signal findStreamMinScale2W_U0_select_V_read : STD_LOGIC;
    signal findStreamMinScale2W_U0_inStream_V_read : STD_LOGIC;
    signal findStreamMinScale2W_U0_OF_yStream_V_read : STD_LOGIC;
    signal findStreamMinScale2W_U0_minStream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal findStreamMinScale2W_U0_minStream_V_V_write : STD_LOGIC;
    signal findStreamMinScale2W_U0_OFStream_V_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal findStreamMinScale2W_U0_OFStream_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_U0_ap_start : STD_LOGIC;
    signal getInitOffsetForNext_U0_ap_done : STD_LOGIC;
    signal getInitOffsetForNext_U0_ap_continue : STD_LOGIC;
    signal getInitOffsetForNext_U0_ap_idle : STD_LOGIC;
    signal getInitOffsetForNext_U0_ap_ready : STD_LOGIC;
    signal getInitOffsetForNext_U0_select_V_read : STD_LOGIC;
    signal getInitOffsetForNext_U0_miniSumStreamScale2_V_V_read : STD_LOGIC;
    signal getInitOffsetForNext_U0_OFRetStreamScale2_V_V_read : STD_LOGIC;
    signal getInitOffsetForNext_U0_xInitOffsetScale1Stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal getInitOffsetForNext_U0_xInitOffsetScale1Stream_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_U0_yInitOffsetScale1Stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal getInitOffsetForNext_U0_yInitOffsetScale1Stream_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_U0_xInitOffsetScale1StreamCopy_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal getInitOffsetForNext_U0_xInitOffsetScale1StreamCopy_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_U0_yInitOffsetScale1StreamCopy_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal getInitOffsetForNext_U0_yInitOffsetScale1StreamCopy_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_U0_miniSumStreamScale2Copy_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal getInitOffsetForNext_U0_miniSumStreamScale2Copy_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_U0_OFRetStreamScale2Copy_V_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal getInitOffsetForNext_U0_OFRetStreamScale2Copy_V_V_write : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_ap_start : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_ap_done : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_ap_continue : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_ap_idle : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_ap_ready : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_select_V_read : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_xStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_yStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_xInitOffsetStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_yInitOffsetStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_idxStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_refStreamOutScale1_V_V_din : STD_LOGIC_VECTOR (75 downto 0);
    signal rwSlicesScale1WithSe_U0_refStreamOutScale1_V_V_write : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_tagStreamOutScale1_V_V_din : STD_LOGIC_VECTOR (75 downto 0);
    signal rwSlicesScale1WithSe_U0_tagStreamOutScale1_V_V_write : STD_LOGIC;
    signal reOrderStreamScale1W_U0_ap_start : STD_LOGIC;
    signal reOrderStreamScale1W_U0_ap_done : STD_LOGIC;
    signal reOrderStreamScale1W_U0_ap_continue : STD_LOGIC;
    signal reOrderStreamScale1W_U0_ap_idle : STD_LOGIC;
    signal reOrderStreamScale1W_U0_ap_ready : STD_LOGIC;
    signal reOrderStreamScale1W_U0_select_V_read : STD_LOGIC;
    signal reOrderStreamScale1W_U0_refSingleStreamOut_V_V_read : STD_LOGIC;
    signal reOrderStreamScale1W_U0_tagSingleStreamOut_V_V_read : STD_LOGIC;
    signal reOrderStreamScale1W_U0_refNPCStreamOut_V_V_din : STD_LOGIC_VECTOR (75 downto 0);
    signal reOrderStreamScale1W_U0_refNPCStreamOut_V_V_write : STD_LOGIC;
    signal reOrderStreamScale1W_U0_tagNPCStreamOut_V_V_din : STD_LOGIC_VECTOR (75 downto 0);
    signal reOrderStreamScale1W_U0_tagNPCStreamOut_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_ap_start : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_ap_done : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_ap_continue : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_ap_idle : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_ap_ready : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_select_V_read : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_colStream0_V_V_read : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_colStream1_V_V_read : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_outStream_V_V_din : STD_LOGIC_VECTOR (111 downto 0);
    signal colStreamToColSumSca_2_U0_outStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_refZeroCntStream_V_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal colStreamToColSumSca_2_U0_refZeroCntStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_tagColValidCntStream_V_V_din : STD_LOGIC_VECTOR (41 downto 0);
    signal colStreamToColSumSca_2_U0_tagColValidCntStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_refTagValidCntStream_V_V_din : STD_LOGIC_VECTOR (41 downto 0);
    signal colStreamToColSumSca_2_U0_refTagValidCntStream_V_V_write : STD_LOGIC;
    signal accumulateStreamScal_2_U0_ap_start : STD_LOGIC;
    signal accumulateStreamScal_2_U0_ap_done : STD_LOGIC;
    signal accumulateStreamScal_2_U0_ap_continue : STD_LOGIC;
    signal accumulateStreamScal_2_U0_ap_idle : STD_LOGIC;
    signal accumulateStreamScal_2_U0_ap_ready : STD_LOGIC;
    signal accumulateStreamScal_2_U0_select_V_read : STD_LOGIC;
    signal accumulateStreamScal_2_U0_inStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_2_U0_outStream_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal accumulateStreamScal_2_U0_outStream_V_write : STD_LOGIC;
    signal accumulateStreamScal_2_U0_OF_yStream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal accumulateStreamScal_2_U0_OF_yStream_V_write : STD_LOGIC;
    signal accumulateStreamScal_2_U0_refZeroCntStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_2_U0_tagColValidCntStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_2_U0_refTagValidCntStream_V_V_read : STD_LOGIC;
    signal findStreamMinScale1W_U0_ap_start : STD_LOGIC;
    signal findStreamMinScale1W_U0_ap_done : STD_LOGIC;
    signal findStreamMinScale1W_U0_ap_continue : STD_LOGIC;
    signal findStreamMinScale1W_U0_ap_idle : STD_LOGIC;
    signal findStreamMinScale1W_U0_ap_ready : STD_LOGIC;
    signal findStreamMinScale1W_U0_select_V_read : STD_LOGIC;
    signal findStreamMinScale1W_U0_inStream_V_read : STD_LOGIC;
    signal findStreamMinScale1W_U0_OF_yStream_V_read : STD_LOGIC;
    signal findStreamMinScale1W_U0_minStream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal findStreamMinScale1W_U0_minStream_V_V_write : STD_LOGIC;
    signal findStreamMinScale1W_U0_OFStream_V_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal findStreamMinScale1W_U0_OFStream_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_ap_start : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_ap_done : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_ap_continue : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_ap_idle : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_ap_ready : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_select_V_read : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_miniSumStreamScale1_V_V_read : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_OFRetStreamScale1_V_V_read : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_xInitOffsetScale1StreamCopy_V_V_read : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_yInitOffsetScale1StreamCopy_V_V_read : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_xInitOffsetScale0Stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal getInitOffsetForNext_1_U0_xInitOffsetScale0Stream_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_yInitOffsetScale0Stream_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal getInitOffsetForNext_1_U0_yInitOffsetScale0Stream_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_miniSumStreamScale1Copy_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal getInitOffsetForNext_1_U0_miniSumStreamScale1Copy_V_V_write : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_OFRetStreamScale1Copy_V_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal getInitOffsetForNext_1_U0_OFRetStreamScale1Copy_V_V_write : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_ap_start : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_ap_done : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_ap_continue : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_ap_idle : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_ap_ready : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_select_V_read : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_xStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_yStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_xInitOffsetStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_yInitOffsetStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_idxStream_V_V_read : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_refSingleStreamOut_V_V_din : STD_LOGIC_VECTOR (123 downto 0);
    signal rwSlicesScale0WithSe_U0_refSingleStreamOut_V_V_write : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_tagSingleStreamOut_V_V_din : STD_LOGIC_VECTOR (123 downto 0);
    signal rwSlicesScale0WithSe_U0_tagSingleStreamOut_V_V_write : STD_LOGIC;
    signal reOrderStreamScale0W_U0_ap_start : STD_LOGIC;
    signal reOrderStreamScale0W_U0_ap_done : STD_LOGIC;
    signal reOrderStreamScale0W_U0_ap_continue : STD_LOGIC;
    signal reOrderStreamScale0W_U0_ap_idle : STD_LOGIC;
    signal reOrderStreamScale0W_U0_ap_ready : STD_LOGIC;
    signal reOrderStreamScale0W_U0_select_V_read : STD_LOGIC;
    signal reOrderStreamScale0W_U0_refSingleStreamOut_V_V_read : STD_LOGIC;
    signal reOrderStreamScale0W_U0_tagSingleStreamOut_V_V_read : STD_LOGIC;
    signal reOrderStreamScale0W_U0_refNPCStreamOut_V_V_din : STD_LOGIC_VECTOR (371 downto 0);
    signal reOrderStreamScale0W_U0_refNPCStreamOut_V_V_write : STD_LOGIC;
    signal reOrderStreamScale0W_U0_tagNPCStreamOut_V_V_din : STD_LOGIC_VECTOR (371 downto 0);
    signal reOrderStreamScale0W_U0_tagNPCStreamOut_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_ap_start : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_ap_done : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_ap_continue : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_ap_idle : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_ap_ready : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_select_V_read : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_colStream0_V_V_read : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_colStream1_V_V_read : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_outStream_V_V_din : STD_LOGIC_VECTOR (335 downto 0);
    signal colStreamToColSumSca_4_U0_outStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_refZeroCntStream_V_V_din : STD_LOGIC_VECTOR (17 downto 0);
    signal colStreamToColSumSca_4_U0_refZeroCntStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_tagColValidCntStream_V_V_din : STD_LOGIC_VECTOR (125 downto 0);
    signal colStreamToColSumSca_4_U0_tagColValidCntStream_V_V_write : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_refTagValidCntStream_V_V_din : STD_LOGIC_VECTOR (125 downto 0);
    signal colStreamToColSumSca_4_U0_refTagValidCntStream_V_V_write : STD_LOGIC;
    signal accumulateStreamScal_4_U0_ap_start : STD_LOGIC;
    signal accumulateStreamScal_4_U0_ap_done : STD_LOGIC;
    signal accumulateStreamScal_4_U0_ap_continue : STD_LOGIC;
    signal accumulateStreamScal_4_U0_ap_idle : STD_LOGIC;
    signal accumulateStreamScal_4_U0_ap_ready : STD_LOGIC;
    signal accumulateStreamScal_4_U0_select_V_read : STD_LOGIC;
    signal accumulateStreamScal_4_U0_inStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_4_U0_outStream_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal accumulateStreamScal_4_U0_outStream_V_write : STD_LOGIC;
    signal accumulateStreamScal_4_U0_OF_yStream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal accumulateStreamScal_4_U0_OF_yStream_V_write : STD_LOGIC;
    signal accumulateStreamScal_4_U0_refZeroCntStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_4_U0_tagColValidCntStream_V_V_read : STD_LOGIC;
    signal accumulateStreamScal_4_U0_refTagValidCntStream_V_V_read : STD_LOGIC;
    signal findStreamMinScale0W_U0_ap_start : STD_LOGIC;
    signal findStreamMinScale0W_U0_ap_done : STD_LOGIC;
    signal findStreamMinScale0W_U0_ap_continue : STD_LOGIC;
    signal findStreamMinScale0W_U0_ap_idle : STD_LOGIC;
    signal findStreamMinScale0W_U0_ap_ready : STD_LOGIC;
    signal findStreamMinScale0W_U0_select_V_read : STD_LOGIC;
    signal findStreamMinScale0W_U0_inStream_V_read : STD_LOGIC;
    signal findStreamMinScale0W_U0_OF_yStream_V_read : STD_LOGIC;
    signal findStreamMinScale0W_U0_minStream_V_V_din : STD_LOGIC_VECTOR (14 downto 0);
    signal findStreamMinScale0W_U0_minStream_V_V_write : STD_LOGIC;
    signal findStreamMinScale0W_U0_OFStream_V_V_din : STD_LOGIC_VECTOR (5 downto 0);
    signal findStreamMinScale0W_U0_OFStream_V_V_write : STD_LOGIC;
    signal Block_proc479_U0_ap_start : STD_LOGIC;
    signal Block_proc479_U0_ap_done : STD_LOGIC;
    signal Block_proc479_U0_ap_continue : STD_LOGIC;
    signal Block_proc479_U0_ap_idle : STD_LOGIC;
    signal Block_proc479_U0_ap_ready : STD_LOGIC;
    signal Block_proc479_U0_select_V_read : STD_LOGIC;
    signal Block_proc479_U0_pktEventDataStream_V_V_read : STD_LOGIC;
    signal Block_proc479_U0_miniSumStreamScale0_V_V_read : STD_LOGIC;
    signal Block_proc479_U0_OFRetStreamScale0_V_V_read : STD_LOGIC;
    signal Block_proc479_U0_miniSumStreamScale1Copy_V_V_read : STD_LOGIC;
    signal Block_proc479_U0_OFRetStreamScale1Copy_V_V_read : STD_LOGIC;
    signal Block_proc479_U0_miniSumStreamScale2Copy_V_V_read : STD_LOGIC;
    signal Block_proc479_U0_OFRetStreamScale2Copy_V_V_read : STD_LOGIC;
    signal Block_proc479_U0_xStreamOut_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_proc479_U0_xStreamOut_V_V_TVALID : STD_LOGIC;
    signal Block_proc479_U0_yStreamOut_V_V_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_proc479_U0_yStreamOut_V_V_TVALID : STD_LOGIC;
    signal Block_proc479_U0_polStreamOut_V_V_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal Block_proc479_U0_polStreamOut_V_V_TVALID : STD_LOGIC;
    signal Block_proc479_U0_tsStreamOut_V_V_TDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_proc479_U0_tsStreamOut_V_V_TVALID : STD_LOGIC;
    signal Block_proc479_U0_pixelDataStream_V_V_TDATA : STD_LOGIC_VECTOR (23 downto 0);
    signal Block_proc479_U0_pixelDataStream_V_V_TVALID : STD_LOGIC;
    signal Block_proc479_U0_status_currentDeltaTSHW : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc479_U0_status_currentDeltaTSHW_ap_vld : STD_LOGIC;
    signal Block_proc479_U0_status_currentAreaCntThr : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc479_U0_status_currentAreaCntThr_ap_vld : STD_LOGIC;
    signal Block_proc479_U0_status_currentFeedbackAreaCntThr : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc479_U0_status_currentFeedbackAreaCntThr_ap_vld : STD_LOGIC;
    signal Block_proc479_U0_status_currentOFHistCntSum : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc479_U0_status_currentOFHistCntSum_ap_vld : STD_LOGIC;
    signal Block_proc479_U0_status_currentOFHistRadiusSum : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc479_U0_status_currentOFHistRadiusSum_ap_vld : STD_LOGIC;
    signal Block_proc479_U0_status_currentAverageTgtValue : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_proc479_U0_status_currentAverageTgtValue_ap_vld : STD_LOGIC;
    signal Block_proc479_U0_deltaTsHWBak_V_read : STD_LOGIC;
    signal Block_proc479_U0_glConfig_V_read : STD_LOGIC;
    signal Block_proc479_U0_glRotateFlg_V_read : STD_LOGIC;
    signal Block_proc479_U0_glSFASTAreaCntThrBak_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal config_V_c1_full_n : STD_LOGIC;
    signal config_V_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal config_V_c1_empty_n : STD_LOGIC;
    signal config_V_c_full_n : STD_LOGIC;
    signal config_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal config_V_c_empty_n : STD_LOGIC;
    signal glConfig_V_c_full_n : STD_LOGIC;
    signal glConfig_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal glConfig_V_c_empty_n : STD_LOGIC;
    signal xInStream_V_V_full_n : STD_LOGIC;
    signal xInStream_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal xInStream_V_V_empty_n : STD_LOGIC;
    signal yInStream_V_V_full_n : STD_LOGIC;
    signal yInStream_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal yInStream_V_V_empty_n : STD_LOGIC;
    signal tsInStream_V_full_n : STD_LOGIC;
    signal tsInStream_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tsInStream_V_empty_n : STD_LOGIC;
    signal pktEventDataStream_V_full_n : STD_LOGIC;
    signal pktEventDataStream_V_dout : STD_LOGIC_VECTOR (95 downto 0);
    signal pktEventDataStream_V_empty_n : STD_LOGIC;
    signal select_V_full_n : STD_LOGIC;
    signal select_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_empty_n : STD_LOGIC;
    signal select_V_channel19_full_n : STD_LOGIC;
    signal select_V_channel19_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel19_empty_n : STD_LOGIC;
    signal select_V_channel20_full_n : STD_LOGIC;
    signal select_V_channel20_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel20_empty_n : STD_LOGIC;
    signal select_V_channel21_full_n : STD_LOGIC;
    signal select_V_channel21_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel21_empty_n : STD_LOGIC;
    signal select_V_channel22_full_n : STD_LOGIC;
    signal select_V_channel22_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel22_empty_n : STD_LOGIC;
    signal select_V_channel23_full_n : STD_LOGIC;
    signal select_V_channel23_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel23_empty_n : STD_LOGIC;
    signal select_V_channel24_full_n : STD_LOGIC;
    signal select_V_channel24_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel24_empty_n : STD_LOGIC;
    signal select_V_channel25_full_n : STD_LOGIC;
    signal select_V_channel25_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel25_empty_n : STD_LOGIC;
    signal select_V_channel26_full_n : STD_LOGIC;
    signal select_V_channel26_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel26_empty_n : STD_LOGIC;
    signal select_V_channel27_full_n : STD_LOGIC;
    signal select_V_channel27_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel27_empty_n : STD_LOGIC;
    signal select_V_channel28_full_n : STD_LOGIC;
    signal select_V_channel28_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel28_empty_n : STD_LOGIC;
    signal select_V_channel29_full_n : STD_LOGIC;
    signal select_V_channel29_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel29_empty_n : STD_LOGIC;
    signal select_V_channel30_full_n : STD_LOGIC;
    signal select_V_channel30_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel30_empty_n : STD_LOGIC;
    signal select_V_channel31_full_n : STD_LOGIC;
    signal select_V_channel31_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel31_empty_n : STD_LOGIC;
    signal select_V_channel32_full_n : STD_LOGIC;
    signal select_V_channel32_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel32_empty_n : STD_LOGIC;
    signal select_V_channel33_full_n : STD_LOGIC;
    signal select_V_channel33_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel33_empty_n : STD_LOGIC;
    signal select_V_channel34_full_n : STD_LOGIC;
    signal select_V_channel34_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal select_V_channel34_empty_n : STD_LOGIC;
    signal xOutStream_V_V_full_n : STD_LOGIC;
    signal xOutStream_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal xOutStream_V_V_empty_n : STD_LOGIC;
    signal yOutStream_V_V_full_n : STD_LOGIC;
    signal yOutStream_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal yOutStream_V_V_empty_n : STD_LOGIC;
    signal idxStream_V_V_full_n : STD_LOGIC;
    signal idxStream_V_V_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal idxStream_V_V_empty_n : STD_LOGIC;
    signal xOutStreamScale1_V_V_full_n : STD_LOGIC;
    signal xOutStreamScale1_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal xOutStreamScale1_V_V_empty_n : STD_LOGIC;
    signal yOutStreamScale1_V_V_full_n : STD_LOGIC;
    signal yOutStreamScale1_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal yOutStreamScale1_V_V_empty_n : STD_LOGIC;
    signal idxStreamScale1_V_V_full_n : STD_LOGIC;
    signal idxStreamScale1_V_V_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal idxStreamScale1_V_V_empty_n : STD_LOGIC;
    signal xOutStreamScale2_V_V_full_n : STD_LOGIC;
    signal xOutStreamScale2_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal xOutStreamScale2_V_V_empty_n : STD_LOGIC;
    signal yOutStreamScale2_V_V_full_n : STD_LOGIC;
    signal yOutStreamScale2_V_V_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal yOutStreamScale2_V_V_empty_n : STD_LOGIC;
    signal idxStreamScale2_V_V_full_n : STD_LOGIC;
    signal idxStreamScale2_V_V_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal idxStreamScale2_V_V_empty_n : STD_LOGIC;
    signal deltaTsHWBak_V_c_full_n : STD_LOGIC;
    signal deltaTsHWBak_V_c_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal deltaTsHWBak_V_c_empty_n : STD_LOGIC;
    signal glConfig_V_c18_full_n : STD_LOGIC;
    signal glConfig_V_c18_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal glConfig_V_c18_empty_n : STD_LOGIC;
    signal glRotateFlg_V_c_full_n : STD_LOGIC;
    signal glRotateFlg_V_c_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal glRotateFlg_V_c_empty_n : STD_LOGIC;
    signal glSFASTAreaCntThrBak_2_full_n : STD_LOGIC;
    signal glSFASTAreaCntThrBak_2_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal glSFASTAreaCntThrBak_2_empty_n : STD_LOGIC;
    signal refStreamScale2_V_V_full_n : STD_LOGIC;
    signal refStreamScale2_V_V_dout : STD_LOGIC_VECTOR (51 downto 0);
    signal refStreamScale2_V_V_empty_n : STD_LOGIC;
    signal tagStreamInScale2_V_s_full_n : STD_LOGIC;
    signal tagStreamInScale2_V_s_dout : STD_LOGIC_VECTOR (51 downto 0);
    signal tagStreamInScale2_V_s_empty_n : STD_LOGIC;
    signal outStreamScale2_V_V_full_n : STD_LOGIC;
    signal outStreamScale2_V_V_dout : STD_LOGIC_VECTOR (111 downto 0);
    signal outStreamScale2_V_V_empty_n : STD_LOGIC;
    signal refZeroCntStreamScal_3_full_n : STD_LOGIC;
    signal refZeroCntStreamScal_3_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal refZeroCntStreamScal_3_empty_n : STD_LOGIC;
    signal tagColValidCntStream_5_full_n : STD_LOGIC;
    signal tagColValidCntStream_5_dout : STD_LOGIC_VECTOR (41 downto 0);
    signal tagColValidCntStream_5_empty_n : STD_LOGIC;
    signal refTagValidCntStream_5_full_n : STD_LOGIC;
    signal refTagValidCntStream_5_dout : STD_LOGIC_VECTOR (41 downto 0);
    signal refTagValidCntStream_5_empty_n : STD_LOGIC;
    signal outSumStreamScale2_V_full_n : STD_LOGIC;
    signal outSumStreamScale2_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal outSumStreamScale2_V_empty_n : STD_LOGIC;
    signal OF_yStreamScale2_V_full_n : STD_LOGIC;
    signal OF_yStreamScale2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal OF_yStreamScale2_V_empty_n : STD_LOGIC;
    signal miniSumStreamScale2_s_full_n : STD_LOGIC;
    signal miniSumStreamScale2_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal miniSumStreamScale2_s_empty_n : STD_LOGIC;
    signal OFRetStreamScale2_V_s_full_n : STD_LOGIC;
    signal OFRetStreamScale2_V_s_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal OFRetStreamScale2_V_s_empty_n : STD_LOGIC;
    signal xInitOffsetScale1Str_2_full_n : STD_LOGIC;
    signal xInitOffsetScale1Str_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal xInitOffsetScale1Str_2_empty_n : STD_LOGIC;
    signal yInitOffsetScale1Str_2_full_n : STD_LOGIC;
    signal yInitOffsetScale1Str_2_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal yInitOffsetScale1Str_2_empty_n : STD_LOGIC;
    signal xInitOffsetScale1Str_3_full_n : STD_LOGIC;
    signal xInitOffsetScale1Str_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal xInitOffsetScale1Str_3_empty_n : STD_LOGIC;
    signal yInitOffsetScale1Str_3_full_n : STD_LOGIC;
    signal yInitOffsetScale1Str_3_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal yInitOffsetScale1Str_3_empty_n : STD_LOGIC;
    signal miniSumStreamScale2C_1_full_n : STD_LOGIC;
    signal miniSumStreamScale2C_1_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal miniSumStreamScale2C_1_empty_n : STD_LOGIC;
    signal OFRetStreamScale2Cop_1_full_n : STD_LOGIC;
    signal OFRetStreamScale2Cop_1_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal OFRetStreamScale2Cop_1_empty_n : STD_LOGIC;
    signal refStreamScale1_V_V_full_n : STD_LOGIC;
    signal refStreamScale1_V_V_dout : STD_LOGIC_VECTOR (75 downto 0);
    signal refStreamScale1_V_V_empty_n : STD_LOGIC;
    signal tagStreamInScale1_V_s_full_n : STD_LOGIC;
    signal tagStreamInScale1_V_s_dout : STD_LOGIC_VECTOR (75 downto 0);
    signal tagStreamInScale1_V_s_empty_n : STD_LOGIC;
    signal refNPCStreamScale1_V_full_n : STD_LOGIC;
    signal refNPCStreamScale1_V_dout : STD_LOGIC_VECTOR (75 downto 0);
    signal refNPCStreamScale1_V_empty_n : STD_LOGIC;
    signal tagNPCStreamInScale1_1_full_n : STD_LOGIC;
    signal tagNPCStreamInScale1_1_dout : STD_LOGIC_VECTOR (75 downto 0);
    signal tagNPCStreamInScale1_1_empty_n : STD_LOGIC;
    signal outStreamScale1_V_V_full_n : STD_LOGIC;
    signal outStreamScale1_V_V_dout : STD_LOGIC_VECTOR (111 downto 0);
    signal outStreamScale1_V_V_empty_n : STD_LOGIC;
    signal refZeroCntStreamScal_2_full_n : STD_LOGIC;
    signal refZeroCntStreamScal_2_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal refZeroCntStreamScal_2_empty_n : STD_LOGIC;
    signal tagColValidCntStream_4_full_n : STD_LOGIC;
    signal tagColValidCntStream_4_dout : STD_LOGIC_VECTOR (41 downto 0);
    signal tagColValidCntStream_4_empty_n : STD_LOGIC;
    signal refTagValidCntStream_4_full_n : STD_LOGIC;
    signal refTagValidCntStream_4_dout : STD_LOGIC_VECTOR (41 downto 0);
    signal refTagValidCntStream_4_empty_n : STD_LOGIC;
    signal outSumStreamScale1_V_full_n : STD_LOGIC;
    signal outSumStreamScale1_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal outSumStreamScale1_V_empty_n : STD_LOGIC;
    signal OF_yStreamScale1_V_full_n : STD_LOGIC;
    signal OF_yStreamScale1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal OF_yStreamScale1_V_empty_n : STD_LOGIC;
    signal miniSumStreamScale1_s_full_n : STD_LOGIC;
    signal miniSumStreamScale1_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal miniSumStreamScale1_s_empty_n : STD_LOGIC;
    signal OFRetStreamScale1_V_s_full_n : STD_LOGIC;
    signal OFRetStreamScale1_V_s_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal OFRetStreamScale1_V_s_empty_n : STD_LOGIC;
    signal xInitOffsetScale0Str_1_full_n : STD_LOGIC;
    signal xInitOffsetScale0Str_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal xInitOffsetScale0Str_1_empty_n : STD_LOGIC;
    signal yInitOffsetScale0Str_1_full_n : STD_LOGIC;
    signal yInitOffsetScale0Str_1_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal yInitOffsetScale0Str_1_empty_n : STD_LOGIC;
    signal miniSumStreamScale1C_1_full_n : STD_LOGIC;
    signal miniSumStreamScale1C_1_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal miniSumStreamScale1C_1_empty_n : STD_LOGIC;
    signal OFRetStreamScale1Cop_1_full_n : STD_LOGIC;
    signal OFRetStreamScale1Cop_1_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal OFRetStreamScale1Cop_1_empty_n : STD_LOGIC;
    signal refStream_V_V_full_n : STD_LOGIC;
    signal refStream_V_V_dout : STD_LOGIC_VECTOR (123 downto 0);
    signal refStream_V_V_empty_n : STD_LOGIC;
    signal tagStreamIn_V_V_full_n : STD_LOGIC;
    signal tagStreamIn_V_V_dout : STD_LOGIC_VECTOR (123 downto 0);
    signal tagStreamIn_V_V_empty_n : STD_LOGIC;
    signal refNPCStream_V_V_full_n : STD_LOGIC;
    signal refNPCStream_V_V_dout : STD_LOGIC_VECTOR (371 downto 0);
    signal refNPCStream_V_V_empty_n : STD_LOGIC;
    signal tagNPCStreamIn_V_V_full_n : STD_LOGIC;
    signal tagNPCStreamIn_V_V_dout : STD_LOGIC_VECTOR (371 downto 0);
    signal tagNPCStreamIn_V_V_empty_n : STD_LOGIC;
    signal outStream_V_V_full_n : STD_LOGIC;
    signal outStream_V_V_dout : STD_LOGIC_VECTOR (335 downto 0);
    signal outStream_V_V_empty_n : STD_LOGIC;
    signal refZeroCntStream_V_V_full_n : STD_LOGIC;
    signal refZeroCntStream_V_V_dout : STD_LOGIC_VECTOR (17 downto 0);
    signal refZeroCntStream_V_V_empty_n : STD_LOGIC;
    signal tagColValidCntStream_3_full_n : STD_LOGIC;
    signal tagColValidCntStream_3_dout : STD_LOGIC_VECTOR (125 downto 0);
    signal tagColValidCntStream_3_empty_n : STD_LOGIC;
    signal refTagValidCntStream_3_full_n : STD_LOGIC;
    signal refTagValidCntStream_3_dout : STD_LOGIC_VECTOR (125 downto 0);
    signal refTagValidCntStream_3_empty_n : STD_LOGIC;
    signal outSumStream_V_full_n : STD_LOGIC;
    signal outSumStream_V_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal outSumStream_V_empty_n : STD_LOGIC;
    signal OF_yStream_V_full_n : STD_LOGIC;
    signal OF_yStream_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal OF_yStream_V_empty_n : STD_LOGIC;
    signal miniSumStreamScale0_s_full_n : STD_LOGIC;
    signal miniSumStreamScale0_s_dout : STD_LOGIC_VECTOR (14 downto 0);
    signal miniSumStreamScale0_s_empty_n : STD_LOGIC;
    signal OFRetStreamScale0_V_s_full_n : STD_LOGIC;
    signal OFRetStreamScale0_V_s_dout : STD_LOGIC_VECTOR (5 downto 0);
    signal OFRetStreamScale0_V_s_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_truncateStreamWithCo_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_truncateStreamWithCo_U0_ap_ready : STD_LOGIC;
    signal truncateStreamWithCo_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_EVABMOFStreamWithCon_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_EVABMOFStreamWithCon_2_U0_ap_ready : STD_LOGIC;
    signal EVABMOFStreamWithCon_2_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_EVABMOFStreamWithCon_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_EVABMOFStreamWithCon_1_U0_full_n : STD_LOGIC;
    signal start_for_EVABMOFStreamWithCon_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_EVABMOFStreamWithCon_1_U0_empty_n : STD_LOGIC;
    signal start_for_Block_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc_U0_full_n : STD_LOGIC;
    signal start_for_Block_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc_U0_empty_n : STD_LOGIC;
    signal Block_proc_U0_start_full_n : STD_LOGIC;
    signal Block_proc_U0_start_write : STD_LOGIC;
    signal start_for_rotateSliceAllScales_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rotateSliceAllScales_U0_full_n : STD_LOGIC;
    signal start_for_rotateSliceAllScales_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rotateSliceAllScales_U0_empty_n : STD_LOGIC;
    signal start_for_rwSlicesScale2WithSe_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rwSlicesScale2WithSe_U0_full_n : STD_LOGIC;
    signal start_for_rwSlicesScale2WithSe_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rwSlicesScale2WithSe_U0_empty_n : STD_LOGIC;
    signal start_for_colStreamToColSumSca_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colStreamToColSumSca_U0_full_n : STD_LOGIC;
    signal start_for_colStreamToColSumSca_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colStreamToColSumSca_U0_empty_n : STD_LOGIC;
    signal start_for_accumulateStreamScal_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_accumulateStreamScal_U0_full_n : STD_LOGIC;
    signal start_for_accumulateStreamScal_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_accumulateStreamScal_U0_empty_n : STD_LOGIC;
    signal start_for_findStreamMinScale2W_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findStreamMinScale2W_U0_full_n : STD_LOGIC;
    signal start_for_findStreamMinScale2W_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findStreamMinScale2W_U0_empty_n : STD_LOGIC;
    signal start_for_getInitOffsetForNext_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_getInitOffsetForNext_U0_full_n : STD_LOGIC;
    signal start_for_getInitOffsetForNext_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_getInitOffsetForNext_U0_empty_n : STD_LOGIC;
    signal start_for_rwSlicesScale1WithSe_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rwSlicesScale1WithSe_U0_full_n : STD_LOGIC;
    signal start_for_rwSlicesScale1WithSe_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rwSlicesScale1WithSe_U0_empty_n : STD_LOGIC;
    signal start_for_reOrderStreamScale1W_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_reOrderStreamScale1W_U0_full_n : STD_LOGIC;
    signal start_for_reOrderStreamScale1W_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_reOrderStreamScale1W_U0_empty_n : STD_LOGIC;
    signal start_for_colStreamToColSumSca_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colStreamToColSumSca_2_U0_full_n : STD_LOGIC;
    signal start_for_colStreamToColSumSca_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colStreamToColSumSca_2_U0_empty_n : STD_LOGIC;
    signal start_for_accumulateStreamScal_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_accumulateStreamScal_2_U0_full_n : STD_LOGIC;
    signal start_for_accumulateStreamScal_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_accumulateStreamScal_2_U0_empty_n : STD_LOGIC;
    signal start_for_findStreamMinScale1W_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findStreamMinScale1W_U0_full_n : STD_LOGIC;
    signal start_for_findStreamMinScale1W_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findStreamMinScale1W_U0_empty_n : STD_LOGIC;
    signal start_for_getInitOffsetForNext_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_getInitOffsetForNext_1_U0_full_n : STD_LOGIC;
    signal start_for_getInitOffsetForNext_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_getInitOffsetForNext_1_U0_empty_n : STD_LOGIC;
    signal start_for_rwSlicesScale0WithSe_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rwSlicesScale0WithSe_U0_full_n : STD_LOGIC;
    signal start_for_rwSlicesScale0WithSe_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_rwSlicesScale0WithSe_U0_empty_n : STD_LOGIC;
    signal start_for_reOrderStreamScale0W_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_reOrderStreamScale0W_U0_full_n : STD_LOGIC;
    signal start_for_reOrderStreamScale0W_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_reOrderStreamScale0W_U0_empty_n : STD_LOGIC;
    signal start_for_colStreamToColSumSca_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colStreamToColSumSca_4_U0_full_n : STD_LOGIC;
    signal start_for_colStreamToColSumSca_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_colStreamToColSumSca_4_U0_empty_n : STD_LOGIC;
    signal start_for_accumulateStreamScal_4_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_accumulateStreamScal_4_U0_full_n : STD_LOGIC;
    signal start_for_accumulateStreamScal_4_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_accumulateStreamScal_4_U0_empty_n : STD_LOGIC;
    signal start_for_findStreamMinScale0W_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findStreamMinScale0W_U0_full_n : STD_LOGIC;
    signal start_for_findStreamMinScale0W_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_findStreamMinScale0W_U0_empty_n : STD_LOGIC;
    signal start_for_Block_proc479_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc479_U0_full_n : STD_LOGIC;
    signal start_for_Block_proc479_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_proc479_U0_empty_n : STD_LOGIC;
    signal rotateSliceAllScales_U0_start_full_n : STD_LOGIC;
    signal rotateSliceAllScales_U0_start_write : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_start_full_n : STD_LOGIC;
    signal rwSlicesScale2WithSe_U0_start_write : STD_LOGIC;
    signal colStreamToColSumSca_U0_start_full_n : STD_LOGIC;
    signal colStreamToColSumSca_U0_start_write : STD_LOGIC;
    signal accumulateStreamScal_U0_start_full_n : STD_LOGIC;
    signal accumulateStreamScal_U0_start_write : STD_LOGIC;
    signal findStreamMinScale2W_U0_start_full_n : STD_LOGIC;
    signal findStreamMinScale2W_U0_start_write : STD_LOGIC;
    signal getInitOffsetForNext_U0_start_full_n : STD_LOGIC;
    signal getInitOffsetForNext_U0_start_write : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_start_full_n : STD_LOGIC;
    signal rwSlicesScale1WithSe_U0_start_write : STD_LOGIC;
    signal reOrderStreamScale1W_U0_start_full_n : STD_LOGIC;
    signal reOrderStreamScale1W_U0_start_write : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_start_full_n : STD_LOGIC;
    signal colStreamToColSumSca_2_U0_start_write : STD_LOGIC;
    signal accumulateStreamScal_2_U0_start_full_n : STD_LOGIC;
    signal accumulateStreamScal_2_U0_start_write : STD_LOGIC;
    signal findStreamMinScale1W_U0_start_full_n : STD_LOGIC;
    signal findStreamMinScale1W_U0_start_write : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_start_full_n : STD_LOGIC;
    signal getInitOffsetForNext_1_U0_start_write : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_start_full_n : STD_LOGIC;
    signal rwSlicesScale0WithSe_U0_start_write : STD_LOGIC;
    signal reOrderStreamScale0W_U0_start_full_n : STD_LOGIC;
    signal reOrderStreamScale0W_U0_start_write : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_start_full_n : STD_LOGIC;
    signal colStreamToColSumSca_4_U0_start_write : STD_LOGIC;
    signal accumulateStreamScal_4_U0_start_full_n : STD_LOGIC;
    signal accumulateStreamScal_4_U0_start_write : STD_LOGIC;
    signal findStreamMinScale0W_U0_start_full_n : STD_LOGIC;
    signal findStreamMinScale0W_U0_start_write : STD_LOGIC;
    signal Block_proc479_U0_start_full_n : STD_LOGIC;
    signal Block_proc479_U0_start_write : STD_LOGIC;

    component EVABMOFStreamWithCon_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        config_V : IN STD_LOGIC_VECTOR (31 downto 0);
        config_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        config_V_out_full_n : IN STD_LOGIC;
        config_V_out_write : OUT STD_LOGIC );
    end component;


    component EVABMOFStreamWithCon_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        config_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        config_V_empty_n : IN STD_LOGIC;
        config_V_read : OUT STD_LOGIC;
        config_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        config_V_out_full_n : IN STD_LOGIC;
        config_V_out_write : OUT STD_LOGIC );
    end component;


    component Block_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        config_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        config_V_empty_n : IN STD_LOGIC;
        config_V_read : OUT STD_LOGIC;
        glConfig_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        glConfig_V_out_full_n : IN STD_LOGIC;
        glConfig_V_out_write : OUT STD_LOGIC );
    end component;


    component truncateStreamWithCo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        packetEventDataStream_V_V_din : OUT STD_LOGIC_VECTOR (95 downto 0);
        packetEventDataStream_V_V_full_n : IN STD_LOGIC;
        packetEventDataStream_V_V_write : OUT STD_LOGIC;
        xStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        xStreamOut_V_V_full_n : IN STD_LOGIC;
        xStreamOut_V_V_write : OUT STD_LOGIC;
        yStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        yStreamOut_V_V_full_n : IN STD_LOGIC;
        yStreamOut_V_V_write : OUT STD_LOGIC;
        tsStreamOut_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tsStreamOut_V_full_n : IN STD_LOGIC;
        tsStreamOut_V_write : OUT STD_LOGIC;
        select_V1_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V1_full_n : IN STD_LOGIC;
        select_V1_write : OUT STD_LOGIC;
        select_V2_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V2_full_n : IN STD_LOGIC;
        select_V2_write : OUT STD_LOGIC;
        select_V3_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V3_full_n : IN STD_LOGIC;
        select_V3_write : OUT STD_LOGIC;
        select_V4_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V4_full_n : IN STD_LOGIC;
        select_V4_write : OUT STD_LOGIC;
        select_V5_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V5_full_n : IN STD_LOGIC;
        select_V5_write : OUT STD_LOGIC;
        select_V6_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V6_full_n : IN STD_LOGIC;
        select_V6_write : OUT STD_LOGIC;
        select_V7_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V7_full_n : IN STD_LOGIC;
        select_V7_write : OUT STD_LOGIC;
        select_V8_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V8_full_n : IN STD_LOGIC;
        select_V8_write : OUT STD_LOGIC;
        select_V9_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V9_full_n : IN STD_LOGIC;
        select_V9_write : OUT STD_LOGIC;
        select_V10_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V10_full_n : IN STD_LOGIC;
        select_V10_write : OUT STD_LOGIC;
        select_V11_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V11_full_n : IN STD_LOGIC;
        select_V11_write : OUT STD_LOGIC;
        select_V12_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V12_full_n : IN STD_LOGIC;
        select_V12_write : OUT STD_LOGIC;
        select_V13_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V13_full_n : IN STD_LOGIC;
        select_V13_write : OUT STD_LOGIC;
        select_V14_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V14_full_n : IN STD_LOGIC;
        select_V14_write : OUT STD_LOGIC;
        select_V15_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V15_full_n : IN STD_LOGIC;
        select_V15_write : OUT STD_LOGIC;
        select_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V_full_n : IN STD_LOGIC;
        select_V_write : OUT STD_LOGIC;
        select_V_2_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        select_V_2_full_n : IN STD_LOGIC;
        select_V_2_write : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        xStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        xStreamIn_V_V_TVALID : IN STD_LOGIC;
        xStreamIn_V_V_TREADY : OUT STD_LOGIC;
        yStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        yStreamIn_V_V_TVALID : IN STD_LOGIC;
        yStreamIn_V_V_TREADY : OUT STD_LOGIC;
        polStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        polStreamIn_V_V_TVALID : IN STD_LOGIC;
        polStreamIn_V_V_TREADY : OUT STD_LOGIC;
        tsStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        tsStreamIn_V_V_TVALID : IN STD_LOGIC;
        tsStreamIn_V_V_TREADY : OUT STD_LOGIC;
        controlStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        controlStreamIn_V_V_TVALID : IN STD_LOGIC;
        controlStreamIn_V_V_TREADY : OUT STD_LOGIC );
    end component;


    component rotateSliceAllScales IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        xInStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        xInStream_V_V_empty_n : IN STD_LOGIC;
        xInStream_V_V_read : OUT STD_LOGIC;
        yInStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        yInStream_V_V_empty_n : IN STD_LOGIC;
        yInStream_V_V_read : OUT STD_LOGIC;
        tsInStream_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tsInStream_V_empty_n : IN STD_LOGIC;
        tsInStream_V_read : OUT STD_LOGIC;
        xOutStream_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        xOutStream_V_V_full_n : IN STD_LOGIC;
        xOutStream_V_V_write : OUT STD_LOGIC;
        yOutStream_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        yOutStream_V_V_full_n : IN STD_LOGIC;
        yOutStream_V_V_write : OUT STD_LOGIC;
        idxStream_V_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        idxStream_V_V_full_n : IN STD_LOGIC;
        idxStream_V_V_write : OUT STD_LOGIC;
        xOutStreamScale1_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        xOutStreamScale1_V_V_full_n : IN STD_LOGIC;
        xOutStreamScale1_V_V_write : OUT STD_LOGIC;
        yOutStreamScale1_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        yOutStreamScale1_V_V_full_n : IN STD_LOGIC;
        yOutStreamScale1_V_V_write : OUT STD_LOGIC;
        idxStreamScale1_V_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        idxStreamScale1_V_V_full_n : IN STD_LOGIC;
        idxStreamScale1_V_V_write : OUT STD_LOGIC;
        xOutStreamScale2_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        xOutStreamScale2_V_V_full_n : IN STD_LOGIC;
        xOutStreamScale2_V_V_write : OUT STD_LOGIC;
        yOutStreamScale2_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        yOutStreamScale2_V_V_full_n : IN STD_LOGIC;
        yOutStreamScale2_V_V_write : OUT STD_LOGIC;
        idxStreamScale2_V_V_din : OUT STD_LOGIC_VECTOR (1 downto 0);
        idxStreamScale2_V_V_full_n : IN STD_LOGIC;
        idxStreamScale2_V_V_write : OUT STD_LOGIC;
        glConfig_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        glConfig_V_empty_n : IN STD_LOGIC;
        glConfig_V_read : OUT STD_LOGIC;
        deltaTsHWBak_V_out_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        deltaTsHWBak_V_out_full_n : IN STD_LOGIC;
        deltaTsHWBak_V_out_write : OUT STD_LOGIC;
        glConfig_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        glConfig_V_out_full_n : IN STD_LOGIC;
        glConfig_V_out_write : OUT STD_LOGIC;
        glRotateFlg_V_out_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        glRotateFlg_V_out_full_n : IN STD_LOGIC;
        glRotateFlg_V_out_write : OUT STD_LOGIC;
        glSFASTAreaCntThrBak_out_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        glSFASTAreaCntThrBak_out_full_n : IN STD_LOGIC;
        glSFASTAreaCntThrBak_out_write : OUT STD_LOGIC );
    end component;


    component rwSlicesScale2WithSe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        xStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        xStream_V_V_empty_n : IN STD_LOGIC;
        xStream_V_V_read : OUT STD_LOGIC;
        yStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        yStream_V_V_empty_n : IN STD_LOGIC;
        yStream_V_V_read : OUT STD_LOGIC;
        idxStream_V_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        idxStream_V_V_empty_n : IN STD_LOGIC;
        idxStream_V_V_read : OUT STD_LOGIC;
        refStreamOutScale2_V_V_din : OUT STD_LOGIC_VECTOR (51 downto 0);
        refStreamOutScale2_V_V_full_n : IN STD_LOGIC;
        refStreamOutScale2_V_V_write : OUT STD_LOGIC;
        tagStreamOutScale2_V_V_din : OUT STD_LOGIC_VECTOR (51 downto 0);
        tagStreamOutScale2_V_V_full_n : IN STD_LOGIC;
        tagStreamOutScale2_V_V_write : OUT STD_LOGIC );
    end component;


    component colStreamToColSumSca IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        colStream0_V_V_dout : IN STD_LOGIC_VECTOR (51 downto 0);
        colStream0_V_V_empty_n : IN STD_LOGIC;
        colStream0_V_V_read : OUT STD_LOGIC;
        colStream1_V_V_dout : IN STD_LOGIC_VECTOR (51 downto 0);
        colStream1_V_V_empty_n : IN STD_LOGIC;
        colStream1_V_V_read : OUT STD_LOGIC;
        outStream_V_V_din : OUT STD_LOGIC_VECTOR (111 downto 0);
        outStream_V_V_full_n : IN STD_LOGIC;
        outStream_V_V_write : OUT STD_LOGIC;
        refZeroCntStream_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        refZeroCntStream_V_V_full_n : IN STD_LOGIC;
        refZeroCntStream_V_V_write : OUT STD_LOGIC;
        tagColValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (41 downto 0);
        tagColValidCntStream_V_V_full_n : IN STD_LOGIC;
        tagColValidCntStream_V_V_write : OUT STD_LOGIC;
        refTagValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (41 downto 0);
        refTagValidCntStream_V_V_full_n : IN STD_LOGIC;
        refTagValidCntStream_V_V_write : OUT STD_LOGIC );
    end component;


    component accumulateStreamScal IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        inStream_V_V_dout : IN STD_LOGIC_VECTOR (111 downto 0);
        inStream_V_V_empty_n : IN STD_LOGIC;
        inStream_V_V_read : OUT STD_LOGIC;
        outStream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        outStream_V_full_n : IN STD_LOGIC;
        outStream_V_write : OUT STD_LOGIC;
        OF_yStream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        OF_yStream_V_full_n : IN STD_LOGIC;
        OF_yStream_V_write : OUT STD_LOGIC;
        refZeroCntStream_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        refZeroCntStream_V_V_empty_n : IN STD_LOGIC;
        refZeroCntStream_V_V_read : OUT STD_LOGIC;
        tagColValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (41 downto 0);
        tagColValidCntStream_V_V_empty_n : IN STD_LOGIC;
        tagColValidCntStream_V_V_read : OUT STD_LOGIC;
        refTagValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (41 downto 0);
        refTagValidCntStream_V_V_empty_n : IN STD_LOGIC;
        refTagValidCntStream_V_V_read : OUT STD_LOGIC );
    end component;


    component findStreamMinScale2W IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        inStream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        inStream_V_empty_n : IN STD_LOGIC;
        inStream_V_read : OUT STD_LOGIC;
        OF_yStream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        OF_yStream_V_empty_n : IN STD_LOGIC;
        OF_yStream_V_read : OUT STD_LOGIC;
        minStream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        minStream_V_V_full_n : IN STD_LOGIC;
        minStream_V_V_write : OUT STD_LOGIC;
        OFStream_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        OFStream_V_V_full_n : IN STD_LOGIC;
        OFStream_V_V_write : OUT STD_LOGIC );
    end component;


    component getInitOffsetForNext IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        miniSumStreamScale2_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        miniSumStreamScale2_V_V_empty_n : IN STD_LOGIC;
        miniSumStreamScale2_V_V_read : OUT STD_LOGIC;
        OFRetStreamScale2_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        OFRetStreamScale2_V_V_empty_n : IN STD_LOGIC;
        OFRetStreamScale2_V_V_read : OUT STD_LOGIC;
        xInitOffsetScale1Stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        xInitOffsetScale1Stream_V_V_full_n : IN STD_LOGIC;
        xInitOffsetScale1Stream_V_V_write : OUT STD_LOGIC;
        yInitOffsetScale1Stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        yInitOffsetScale1Stream_V_V_full_n : IN STD_LOGIC;
        yInitOffsetScale1Stream_V_V_write : OUT STD_LOGIC;
        xInitOffsetScale1StreamCopy_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        xInitOffsetScale1StreamCopy_V_V_full_n : IN STD_LOGIC;
        xInitOffsetScale1StreamCopy_V_V_write : OUT STD_LOGIC;
        yInitOffsetScale1StreamCopy_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        yInitOffsetScale1StreamCopy_V_V_full_n : IN STD_LOGIC;
        yInitOffsetScale1StreamCopy_V_V_write : OUT STD_LOGIC;
        miniSumStreamScale2Copy_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        miniSumStreamScale2Copy_V_V_full_n : IN STD_LOGIC;
        miniSumStreamScale2Copy_V_V_write : OUT STD_LOGIC;
        OFRetStreamScale2Copy_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        OFRetStreamScale2Copy_V_V_full_n : IN STD_LOGIC;
        OFRetStreamScale2Copy_V_V_write : OUT STD_LOGIC );
    end component;


    component rwSlicesScale1WithSe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        xStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        xStream_V_V_empty_n : IN STD_LOGIC;
        xStream_V_V_read : OUT STD_LOGIC;
        yStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        yStream_V_V_empty_n : IN STD_LOGIC;
        yStream_V_V_read : OUT STD_LOGIC;
        xInitOffsetStream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        xInitOffsetStream_V_V_empty_n : IN STD_LOGIC;
        xInitOffsetStream_V_V_read : OUT STD_LOGIC;
        yInitOffsetStream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        yInitOffsetStream_V_V_empty_n : IN STD_LOGIC;
        yInitOffsetStream_V_V_read : OUT STD_LOGIC;
        idxStream_V_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        idxStream_V_V_empty_n : IN STD_LOGIC;
        idxStream_V_V_read : OUT STD_LOGIC;
        refStreamOutScale1_V_V_din : OUT STD_LOGIC_VECTOR (75 downto 0);
        refStreamOutScale1_V_V_full_n : IN STD_LOGIC;
        refStreamOutScale1_V_V_write : OUT STD_LOGIC;
        tagStreamOutScale1_V_V_din : OUT STD_LOGIC_VECTOR (75 downto 0);
        tagStreamOutScale1_V_V_full_n : IN STD_LOGIC;
        tagStreamOutScale1_V_V_write : OUT STD_LOGIC );
    end component;


    component reOrderStreamScale1W IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        refSingleStreamOut_V_V_dout : IN STD_LOGIC_VECTOR (75 downto 0);
        refSingleStreamOut_V_V_empty_n : IN STD_LOGIC;
        refSingleStreamOut_V_V_read : OUT STD_LOGIC;
        tagSingleStreamOut_V_V_dout : IN STD_LOGIC_VECTOR (75 downto 0);
        tagSingleStreamOut_V_V_empty_n : IN STD_LOGIC;
        tagSingleStreamOut_V_V_read : OUT STD_LOGIC;
        refNPCStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (75 downto 0);
        refNPCStreamOut_V_V_full_n : IN STD_LOGIC;
        refNPCStreamOut_V_V_write : OUT STD_LOGIC;
        tagNPCStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (75 downto 0);
        tagNPCStreamOut_V_V_full_n : IN STD_LOGIC;
        tagNPCStreamOut_V_V_write : OUT STD_LOGIC );
    end component;


    component colStreamToColSumSca_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        colStream0_V_V_dout : IN STD_LOGIC_VECTOR (75 downto 0);
        colStream0_V_V_empty_n : IN STD_LOGIC;
        colStream0_V_V_read : OUT STD_LOGIC;
        colStream1_V_V_dout : IN STD_LOGIC_VECTOR (75 downto 0);
        colStream1_V_V_empty_n : IN STD_LOGIC;
        colStream1_V_V_read : OUT STD_LOGIC;
        outStream_V_V_din : OUT STD_LOGIC_VECTOR (111 downto 0);
        outStream_V_V_full_n : IN STD_LOGIC;
        outStream_V_V_write : OUT STD_LOGIC;
        refZeroCntStream_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        refZeroCntStream_V_V_full_n : IN STD_LOGIC;
        refZeroCntStream_V_V_write : OUT STD_LOGIC;
        tagColValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (41 downto 0);
        tagColValidCntStream_V_V_full_n : IN STD_LOGIC;
        tagColValidCntStream_V_V_write : OUT STD_LOGIC;
        refTagValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (41 downto 0);
        refTagValidCntStream_V_V_full_n : IN STD_LOGIC;
        refTagValidCntStream_V_V_write : OUT STD_LOGIC );
    end component;


    component accumulateStreamScal_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        inStream_V_V_dout : IN STD_LOGIC_VECTOR (111 downto 0);
        inStream_V_V_empty_n : IN STD_LOGIC;
        inStream_V_V_read : OUT STD_LOGIC;
        outStream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        outStream_V_full_n : IN STD_LOGIC;
        outStream_V_write : OUT STD_LOGIC;
        OF_yStream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        OF_yStream_V_full_n : IN STD_LOGIC;
        OF_yStream_V_write : OUT STD_LOGIC;
        refZeroCntStream_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        refZeroCntStream_V_V_empty_n : IN STD_LOGIC;
        refZeroCntStream_V_V_read : OUT STD_LOGIC;
        tagColValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (41 downto 0);
        tagColValidCntStream_V_V_empty_n : IN STD_LOGIC;
        tagColValidCntStream_V_V_read : OUT STD_LOGIC;
        refTagValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (41 downto 0);
        refTagValidCntStream_V_V_empty_n : IN STD_LOGIC;
        refTagValidCntStream_V_V_read : OUT STD_LOGIC );
    end component;


    component findStreamMinScale1W IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        inStream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        inStream_V_empty_n : IN STD_LOGIC;
        inStream_V_read : OUT STD_LOGIC;
        OF_yStream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        OF_yStream_V_empty_n : IN STD_LOGIC;
        OF_yStream_V_read : OUT STD_LOGIC;
        minStream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        minStream_V_V_full_n : IN STD_LOGIC;
        minStream_V_V_write : OUT STD_LOGIC;
        OFStream_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        OFStream_V_V_full_n : IN STD_LOGIC;
        OFStream_V_V_write : OUT STD_LOGIC );
    end component;


    component getInitOffsetForNext_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        miniSumStreamScale1_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        miniSumStreamScale1_V_V_empty_n : IN STD_LOGIC;
        miniSumStreamScale1_V_V_read : OUT STD_LOGIC;
        OFRetStreamScale1_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        OFRetStreamScale1_V_V_empty_n : IN STD_LOGIC;
        OFRetStreamScale1_V_V_read : OUT STD_LOGIC;
        xInitOffsetScale1StreamCopy_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        xInitOffsetScale1StreamCopy_V_V_empty_n : IN STD_LOGIC;
        xInitOffsetScale1StreamCopy_V_V_read : OUT STD_LOGIC;
        yInitOffsetScale1StreamCopy_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        yInitOffsetScale1StreamCopy_V_V_empty_n : IN STD_LOGIC;
        yInitOffsetScale1StreamCopy_V_V_read : OUT STD_LOGIC;
        xInitOffsetScale0Stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        xInitOffsetScale0Stream_V_V_full_n : IN STD_LOGIC;
        xInitOffsetScale0Stream_V_V_write : OUT STD_LOGIC;
        yInitOffsetScale0Stream_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        yInitOffsetScale0Stream_V_V_full_n : IN STD_LOGIC;
        yInitOffsetScale0Stream_V_V_write : OUT STD_LOGIC;
        miniSumStreamScale1Copy_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        miniSumStreamScale1Copy_V_V_full_n : IN STD_LOGIC;
        miniSumStreamScale1Copy_V_V_write : OUT STD_LOGIC;
        OFRetStreamScale1Copy_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        OFRetStreamScale1Copy_V_V_full_n : IN STD_LOGIC;
        OFRetStreamScale1Copy_V_V_write : OUT STD_LOGIC );
    end component;


    component rwSlicesScale0WithSe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        xStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        xStream_V_V_empty_n : IN STD_LOGIC;
        xStream_V_V_read : OUT STD_LOGIC;
        yStream_V_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        yStream_V_V_empty_n : IN STD_LOGIC;
        yStream_V_V_read : OUT STD_LOGIC;
        xInitOffsetStream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        xInitOffsetStream_V_V_empty_n : IN STD_LOGIC;
        xInitOffsetStream_V_V_read : OUT STD_LOGIC;
        yInitOffsetStream_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        yInitOffsetStream_V_V_empty_n : IN STD_LOGIC;
        yInitOffsetStream_V_V_read : OUT STD_LOGIC;
        idxStream_V_V_dout : IN STD_LOGIC_VECTOR (1 downto 0);
        idxStream_V_V_empty_n : IN STD_LOGIC;
        idxStream_V_V_read : OUT STD_LOGIC;
        refSingleStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (123 downto 0);
        refSingleStreamOut_V_V_full_n : IN STD_LOGIC;
        refSingleStreamOut_V_V_write : OUT STD_LOGIC;
        tagSingleStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (123 downto 0);
        tagSingleStreamOut_V_V_full_n : IN STD_LOGIC;
        tagSingleStreamOut_V_V_write : OUT STD_LOGIC );
    end component;


    component reOrderStreamScale0W IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        refSingleStreamOut_V_V_dout : IN STD_LOGIC_VECTOR (123 downto 0);
        refSingleStreamOut_V_V_empty_n : IN STD_LOGIC;
        refSingleStreamOut_V_V_read : OUT STD_LOGIC;
        tagSingleStreamOut_V_V_dout : IN STD_LOGIC_VECTOR (123 downto 0);
        tagSingleStreamOut_V_V_empty_n : IN STD_LOGIC;
        tagSingleStreamOut_V_V_read : OUT STD_LOGIC;
        refNPCStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (371 downto 0);
        refNPCStreamOut_V_V_full_n : IN STD_LOGIC;
        refNPCStreamOut_V_V_write : OUT STD_LOGIC;
        tagNPCStreamOut_V_V_din : OUT STD_LOGIC_VECTOR (371 downto 0);
        tagNPCStreamOut_V_V_full_n : IN STD_LOGIC;
        tagNPCStreamOut_V_V_write : OUT STD_LOGIC );
    end component;


    component colStreamToColSumSca_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        colStream0_V_V_dout : IN STD_LOGIC_VECTOR (371 downto 0);
        colStream0_V_V_empty_n : IN STD_LOGIC;
        colStream0_V_V_read : OUT STD_LOGIC;
        colStream1_V_V_dout : IN STD_LOGIC_VECTOR (371 downto 0);
        colStream1_V_V_empty_n : IN STD_LOGIC;
        colStream1_V_V_read : OUT STD_LOGIC;
        outStream_V_V_din : OUT STD_LOGIC_VECTOR (335 downto 0);
        outStream_V_V_full_n : IN STD_LOGIC;
        outStream_V_V_write : OUT STD_LOGIC;
        refZeroCntStream_V_V_din : OUT STD_LOGIC_VECTOR (17 downto 0);
        refZeroCntStream_V_V_full_n : IN STD_LOGIC;
        refZeroCntStream_V_V_write : OUT STD_LOGIC;
        tagColValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (125 downto 0);
        tagColValidCntStream_V_V_full_n : IN STD_LOGIC;
        tagColValidCntStream_V_V_write : OUT STD_LOGIC;
        refTagValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (125 downto 0);
        refTagValidCntStream_V_V_full_n : IN STD_LOGIC;
        refTagValidCntStream_V_V_write : OUT STD_LOGIC );
    end component;


    component accumulateStreamScal_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        inStream_V_V_dout : IN STD_LOGIC_VECTOR (335 downto 0);
        inStream_V_V_empty_n : IN STD_LOGIC;
        inStream_V_V_read : OUT STD_LOGIC;
        outStream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        outStream_V_full_n : IN STD_LOGIC;
        outStream_V_write : OUT STD_LOGIC;
        OF_yStream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        OF_yStream_V_full_n : IN STD_LOGIC;
        OF_yStream_V_write : OUT STD_LOGIC;
        refZeroCntStream_V_V_dout : IN STD_LOGIC_VECTOR (17 downto 0);
        refZeroCntStream_V_V_empty_n : IN STD_LOGIC;
        refZeroCntStream_V_V_read : OUT STD_LOGIC;
        tagColValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (125 downto 0);
        tagColValidCntStream_V_V_empty_n : IN STD_LOGIC;
        tagColValidCntStream_V_V_read : OUT STD_LOGIC;
        refTagValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (125 downto 0);
        refTagValidCntStream_V_V_empty_n : IN STD_LOGIC;
        refTagValidCntStream_V_V_read : OUT STD_LOGIC );
    end component;


    component findStreamMinScale0W IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        inStream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        inStream_V_empty_n : IN STD_LOGIC;
        inStream_V_read : OUT STD_LOGIC;
        OF_yStream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        OF_yStream_V_empty_n : IN STD_LOGIC;
        OF_yStream_V_read : OUT STD_LOGIC;
        minStream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
        minStream_V_V_full_n : IN STD_LOGIC;
        minStream_V_V_write : OUT STD_LOGIC;
        OFStream_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
        OFStream_V_V_full_n : IN STD_LOGIC;
        OFStream_V_V_write : OUT STD_LOGIC );
    end component;


    component Block_proc479 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        select_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        select_V_empty_n : IN STD_LOGIC;
        select_V_read : OUT STD_LOGIC;
        pktEventDataStream_V_V_dout : IN STD_LOGIC_VECTOR (95 downto 0);
        pktEventDataStream_V_V_empty_n : IN STD_LOGIC;
        pktEventDataStream_V_V_read : OUT STD_LOGIC;
        miniSumStreamScale0_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        miniSumStreamScale0_V_V_empty_n : IN STD_LOGIC;
        miniSumStreamScale0_V_V_read : OUT STD_LOGIC;
        OFRetStreamScale0_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        OFRetStreamScale0_V_V_empty_n : IN STD_LOGIC;
        OFRetStreamScale0_V_V_read : OUT STD_LOGIC;
        miniSumStreamScale1Copy_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        miniSumStreamScale1Copy_V_V_empty_n : IN STD_LOGIC;
        miniSumStreamScale1Copy_V_V_read : OUT STD_LOGIC;
        OFRetStreamScale1Copy_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        OFRetStreamScale1Copy_V_V_empty_n : IN STD_LOGIC;
        OFRetStreamScale1Copy_V_V_read : OUT STD_LOGIC;
        miniSumStreamScale2Copy_V_V_dout : IN STD_LOGIC_VECTOR (14 downto 0);
        miniSumStreamScale2Copy_V_V_empty_n : IN STD_LOGIC;
        miniSumStreamScale2Copy_V_V_read : OUT STD_LOGIC;
        OFRetStreamScale2Copy_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
        OFRetStreamScale2Copy_V_V_empty_n : IN STD_LOGIC;
        OFRetStreamScale2Copy_V_V_read : OUT STD_LOGIC;
        xStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        xStreamOut_V_V_TVALID : OUT STD_LOGIC;
        xStreamOut_V_V_TREADY : IN STD_LOGIC;
        yStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        yStreamOut_V_V_TVALID : OUT STD_LOGIC;
        yStreamOut_V_V_TREADY : IN STD_LOGIC;
        polStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        polStreamOut_V_V_TVALID : OUT STD_LOGIC;
        polStreamOut_V_V_TREADY : IN STD_LOGIC;
        tsStreamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        tsStreamOut_V_V_TVALID : OUT STD_LOGIC;
        tsStreamOut_V_V_TREADY : IN STD_LOGIC;
        pixelDataStream_V_V_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
        pixelDataStream_V_V_TVALID : OUT STD_LOGIC;
        pixelDataStream_V_V_TREADY : IN STD_LOGIC;
        status_currentDeltaTSHW : OUT STD_LOGIC_VECTOR (31 downto 0);
        status_currentDeltaTSHW_ap_vld : OUT STD_LOGIC;
        status_currentAreaCntThr : OUT STD_LOGIC_VECTOR (31 downto 0);
        status_currentAreaCntThr_ap_vld : OUT STD_LOGIC;
        status_currentFeedbackAreaCntThr : OUT STD_LOGIC_VECTOR (31 downto 0);
        status_currentFeedbackAreaCntThr_ap_vld : OUT STD_LOGIC;
        status_currentOFHistCntSum : OUT STD_LOGIC_VECTOR (31 downto 0);
        status_currentOFHistCntSum_ap_vld : OUT STD_LOGIC;
        status_currentOFHistRadiusSum : OUT STD_LOGIC_VECTOR (31 downto 0);
        status_currentOFHistRadiusSum_ap_vld : OUT STD_LOGIC;
        status_currentAverageTgtValue : OUT STD_LOGIC_VECTOR (31 downto 0);
        status_currentAverageTgtValue_ap_vld : OUT STD_LOGIC;
        deltaTsHWBak_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        deltaTsHWBak_V_empty_n : IN STD_LOGIC;
        deltaTsHWBak_V_read : OUT STD_LOGIC;
        glConfig_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        glConfig_V_empty_n : IN STD_LOGIC;
        glConfig_V_read : OUT STD_LOGIC;
        glRotateFlg_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        glRotateFlg_V_empty_n : IN STD_LOGIC;
        glRotateFlg_V_read : OUT STD_LOGIC;
        glSFASTAreaCntThrBak_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        glSFASTAreaCntThrBak_empty_n : IN STD_LOGIC;
        glSFASTAreaCntThrBak_read : OUT STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w10_d0_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d0_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w96_d70_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (95 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (95 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d30_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w10_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w2_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w10_d10_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w2_d10_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w2_d0_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w9_d18_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d18_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d18_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d18_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w52_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (51 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (51 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w112_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (111 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (111 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w6_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (5 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w42_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (41 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (41 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w16_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w15_d30_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (14 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (14 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w6_d30_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (5 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (5 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d30_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w76_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (75 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (75 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w124_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (123 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (123 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w372_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (371 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (371 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w336_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (335 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (335 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w18_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (17 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (17 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w126_d20_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (125 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (125 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_EVABMOF2iS IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_p3i2 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_rotateS4jc IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_rwSlice5jm IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_colStre6jw IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_accumul7jG IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_findStr8jQ IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_getInit9j0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_rwSlicebak IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_reOrderbbk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_colStrebck IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_accumulbdk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_findStrbek IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_getInitbfk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_rwSlicebgk IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_reOrderbhl IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_colStrebil IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_accumulbjl IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_findStrbkl IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_pbll IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component EVABMOFStreamWithControl_config_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        config_V : OUT STD_LOGIC_VECTOR (31 downto 0);
        status_currentDeltaTSHW : IN STD_LOGIC_VECTOR (31 downto 0);
        status_currentDeltaTSHW_ap_vld : IN STD_LOGIC;
        status_currentAreaCntThr : IN STD_LOGIC_VECTOR (31 downto 0);
        status_currentAreaCntThr_ap_vld : IN STD_LOGIC;
        status_currentFeedbackAreaCntThr : IN STD_LOGIC_VECTOR (31 downto 0);
        status_currentFeedbackAreaCntThr_ap_vld : IN STD_LOGIC;
        status_currentOFHistCntSum : IN STD_LOGIC_VECTOR (31 downto 0);
        status_currentOFHistCntSum_ap_vld : IN STD_LOGIC;
        status_currentOFHistRadiusSum : IN STD_LOGIC_VECTOR (31 downto 0);
        status_currentOFHistRadiusSum_ap_vld : IN STD_LOGIC;
        status_currentAverageTgtValue : IN STD_LOGIC_VECTOR (31 downto 0);
        status_currentAverageTgtValue_ap_vld : IN STD_LOGIC );
    end component;



begin
    EVABMOFStreamWithControl_config_s_axi_U : component EVABMOFStreamWithControl_config_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONFIG_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONFIG_DATA_WIDTH)
    port map (
        AWVALID => s_axi_config_AWVALID,
        AWREADY => s_axi_config_AWREADY,
        AWADDR => s_axi_config_AWADDR,
        WVALID => s_axi_config_WVALID,
        WREADY => s_axi_config_WREADY,
        WDATA => s_axi_config_WDATA,
        WSTRB => s_axi_config_WSTRB,
        ARVALID => s_axi_config_ARVALID,
        ARREADY => s_axi_config_ARREADY,
        ARADDR => s_axi_config_ARADDR,
        RVALID => s_axi_config_RVALID,
        RREADY => s_axi_config_RREADY,
        RDATA => s_axi_config_RDATA,
        RRESP => s_axi_config_RRESP,
        BVALID => s_axi_config_BVALID,
        BREADY => s_axi_config_BREADY,
        BRESP => s_axi_config_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        config_V => config_V,
        status_currentDeltaTSHW => Block_proc479_U0_status_currentDeltaTSHW,
        status_currentDeltaTSHW_ap_vld => Block_proc479_U0_status_currentDeltaTSHW_ap_vld,
        status_currentAreaCntThr => Block_proc479_U0_status_currentAreaCntThr,
        status_currentAreaCntThr_ap_vld => Block_proc479_U0_status_currentAreaCntThr_ap_vld,
        status_currentFeedbackAreaCntThr => Block_proc479_U0_status_currentFeedbackAreaCntThr,
        status_currentFeedbackAreaCntThr_ap_vld => Block_proc479_U0_status_currentFeedbackAreaCntThr_ap_vld,
        status_currentOFHistCntSum => Block_proc479_U0_status_currentOFHistCntSum,
        status_currentOFHistCntSum_ap_vld => Block_proc479_U0_status_currentOFHistCntSum_ap_vld,
        status_currentOFHistRadiusSum => Block_proc479_U0_status_currentOFHistRadiusSum,
        status_currentOFHistRadiusSum_ap_vld => Block_proc479_U0_status_currentOFHistRadiusSum_ap_vld,
        status_currentAverageTgtValue => Block_proc479_U0_status_currentAverageTgtValue,
        status_currentAverageTgtValue_ap_vld => Block_proc479_U0_status_currentAverageTgtValue_ap_vld);

    EVABMOFStreamWithCon_2_U0 : component EVABMOFStreamWithCon_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => EVABMOFStreamWithCon_2_U0_ap_start,
        start_full_n => start_for_EVABMOFStreamWithCon_1_U0_full_n,
        ap_done => EVABMOFStreamWithCon_2_U0_ap_done,
        ap_continue => EVABMOFStreamWithCon_2_U0_ap_continue,
        ap_idle => EVABMOFStreamWithCon_2_U0_ap_idle,
        ap_ready => EVABMOFStreamWithCon_2_U0_ap_ready,
        start_out => EVABMOFStreamWithCon_2_U0_start_out,
        start_write => EVABMOFStreamWithCon_2_U0_start_write,
        config_V => config_V,
        config_V_out_din => EVABMOFStreamWithCon_2_U0_config_V_out_din,
        config_V_out_full_n => config_V_c1_full_n,
        config_V_out_write => EVABMOFStreamWithCon_2_U0_config_V_out_write);

    EVABMOFStreamWithCon_1_U0 : component EVABMOFStreamWithCon_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => EVABMOFStreamWithCon_1_U0_ap_start,
        start_full_n => start_for_Block_proc_U0_full_n,
        ap_done => EVABMOFStreamWithCon_1_U0_ap_done,
        ap_continue => EVABMOFStreamWithCon_1_U0_ap_continue,
        ap_idle => EVABMOFStreamWithCon_1_U0_ap_idle,
        ap_ready => EVABMOFStreamWithCon_1_U0_ap_ready,
        start_out => EVABMOFStreamWithCon_1_U0_start_out,
        start_write => EVABMOFStreamWithCon_1_U0_start_write,
        config_V_dout => config_V_c1_dout,
        config_V_empty_n => config_V_c1_empty_n,
        config_V_read => EVABMOFStreamWithCon_1_U0_config_V_read,
        config_V_out_din => EVABMOFStreamWithCon_1_U0_config_V_out_din,
        config_V_out_full_n => config_V_c_full_n,
        config_V_out_write => EVABMOFStreamWithCon_1_U0_config_V_out_write);

    Block_proc_U0 : component Block_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc_U0_ap_start,
        ap_done => Block_proc_U0_ap_done,
        ap_continue => Block_proc_U0_ap_continue,
        ap_idle => Block_proc_U0_ap_idle,
        ap_ready => Block_proc_U0_ap_ready,
        config_V_dout => config_V_c_dout,
        config_V_empty_n => config_V_c_empty_n,
        config_V_read => Block_proc_U0_config_V_read,
        glConfig_V_out_din => Block_proc_U0_glConfig_V_out_din,
        glConfig_V_out_full_n => glConfig_V_c_full_n,
        glConfig_V_out_write => Block_proc_U0_glConfig_V_out_write);

    truncateStreamWithCo_U0 : component truncateStreamWithCo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => truncateStreamWithCo_U0_ap_start,
        start_full_n => truncateStreamWithCo_U0_start_full_n,
        ap_done => truncateStreamWithCo_U0_ap_done,
        ap_continue => truncateStreamWithCo_U0_ap_continue,
        ap_idle => truncateStreamWithCo_U0_ap_idle,
        ap_ready => truncateStreamWithCo_U0_ap_ready,
        packetEventDataStream_V_V_din => truncateStreamWithCo_U0_packetEventDataStream_V_V_din,
        packetEventDataStream_V_V_full_n => pktEventDataStream_V_full_n,
        packetEventDataStream_V_V_write => truncateStreamWithCo_U0_packetEventDataStream_V_V_write,
        xStreamOut_V_V_din => truncateStreamWithCo_U0_xStreamOut_V_V_din,
        xStreamOut_V_V_full_n => xInStream_V_V_full_n,
        xStreamOut_V_V_write => truncateStreamWithCo_U0_xStreamOut_V_V_write,
        yStreamOut_V_V_din => truncateStreamWithCo_U0_yStreamOut_V_V_din,
        yStreamOut_V_V_full_n => yInStream_V_V_full_n,
        yStreamOut_V_V_write => truncateStreamWithCo_U0_yStreamOut_V_V_write,
        tsStreamOut_V_din => truncateStreamWithCo_U0_tsStreamOut_V_din,
        tsStreamOut_V_full_n => tsInStream_V_full_n,
        tsStreamOut_V_write => truncateStreamWithCo_U0_tsStreamOut_V_write,
        select_V1_din => truncateStreamWithCo_U0_select_V1_din,
        select_V1_full_n => select_V_channel19_full_n,
        select_V1_write => truncateStreamWithCo_U0_select_V1_write,
        select_V2_din => truncateStreamWithCo_U0_select_V2_din,
        select_V2_full_n => select_V_channel20_full_n,
        select_V2_write => truncateStreamWithCo_U0_select_V2_write,
        select_V3_din => truncateStreamWithCo_U0_select_V3_din,
        select_V3_full_n => select_V_channel21_full_n,
        select_V3_write => truncateStreamWithCo_U0_select_V3_write,
        select_V4_din => truncateStreamWithCo_U0_select_V4_din,
        select_V4_full_n => select_V_channel22_full_n,
        select_V4_write => truncateStreamWithCo_U0_select_V4_write,
        select_V5_din => truncateStreamWithCo_U0_select_V5_din,
        select_V5_full_n => select_V_channel23_full_n,
        select_V5_write => truncateStreamWithCo_U0_select_V5_write,
        select_V6_din => truncateStreamWithCo_U0_select_V6_din,
        select_V6_full_n => select_V_channel24_full_n,
        select_V6_write => truncateStreamWithCo_U0_select_V6_write,
        select_V7_din => truncateStreamWithCo_U0_select_V7_din,
        select_V7_full_n => select_V_channel25_full_n,
        select_V7_write => truncateStreamWithCo_U0_select_V7_write,
        select_V8_din => truncateStreamWithCo_U0_select_V8_din,
        select_V8_full_n => select_V_channel26_full_n,
        select_V8_write => truncateStreamWithCo_U0_select_V8_write,
        select_V9_din => truncateStreamWithCo_U0_select_V9_din,
        select_V9_full_n => select_V_channel27_full_n,
        select_V9_write => truncateStreamWithCo_U0_select_V9_write,
        select_V10_din => truncateStreamWithCo_U0_select_V10_din,
        select_V10_full_n => select_V_channel28_full_n,
        select_V10_write => truncateStreamWithCo_U0_select_V10_write,
        select_V11_din => truncateStreamWithCo_U0_select_V11_din,
        select_V11_full_n => select_V_channel29_full_n,
        select_V11_write => truncateStreamWithCo_U0_select_V11_write,
        select_V12_din => truncateStreamWithCo_U0_select_V12_din,
        select_V12_full_n => select_V_channel30_full_n,
        select_V12_write => truncateStreamWithCo_U0_select_V12_write,
        select_V13_din => truncateStreamWithCo_U0_select_V13_din,
        select_V13_full_n => select_V_channel31_full_n,
        select_V13_write => truncateStreamWithCo_U0_select_V13_write,
        select_V14_din => truncateStreamWithCo_U0_select_V14_din,
        select_V14_full_n => select_V_channel32_full_n,
        select_V14_write => truncateStreamWithCo_U0_select_V14_write,
        select_V15_din => truncateStreamWithCo_U0_select_V15_din,
        select_V15_full_n => select_V_channel33_full_n,
        select_V15_write => truncateStreamWithCo_U0_select_V15_write,
        select_V_din => truncateStreamWithCo_U0_select_V_din,
        select_V_full_n => select_V_channel34_full_n,
        select_V_write => truncateStreamWithCo_U0_select_V_write,
        select_V_2_din => truncateStreamWithCo_U0_select_V_2_din,
        select_V_2_full_n => select_V_full_n,
        select_V_2_write => truncateStreamWithCo_U0_select_V_2_write,
        start_out => truncateStreamWithCo_U0_start_out,
        start_write => truncateStreamWithCo_U0_start_write,
        xStreamIn_V_V_TDATA => xStreamIn_V_V_TDATA,
        xStreamIn_V_V_TVALID => xStreamIn_V_V_TVALID,
        xStreamIn_V_V_TREADY => truncateStreamWithCo_U0_xStreamIn_V_V_TREADY,
        yStreamIn_V_V_TDATA => yStreamIn_V_V_TDATA,
        yStreamIn_V_V_TVALID => yStreamIn_V_V_TVALID,
        yStreamIn_V_V_TREADY => truncateStreamWithCo_U0_yStreamIn_V_V_TREADY,
        polStreamIn_V_V_TDATA => polStreamIn_V_V_TDATA,
        polStreamIn_V_V_TVALID => polStreamIn_V_V_TVALID,
        polStreamIn_V_V_TREADY => truncateStreamWithCo_U0_polStreamIn_V_V_TREADY,
        tsStreamIn_V_V_TDATA => tsStreamIn_V_V_TDATA,
        tsStreamIn_V_V_TVALID => tsStreamIn_V_V_TVALID,
        tsStreamIn_V_V_TREADY => truncateStreamWithCo_U0_tsStreamIn_V_V_TREADY,
        controlStreamIn_V_V_TDATA => controlStreamIn_V_V_TDATA,
        controlStreamIn_V_V_TVALID => controlStreamIn_V_V_TVALID,
        controlStreamIn_V_V_TREADY => truncateStreamWithCo_U0_controlStreamIn_V_V_TREADY);

    rotateSliceAllScales_U0 : component rotateSliceAllScales
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => rotateSliceAllScales_U0_ap_start,
        ap_done => rotateSliceAllScales_U0_ap_done,
        ap_continue => rotateSliceAllScales_U0_ap_continue,
        ap_idle => rotateSliceAllScales_U0_ap_idle,
        ap_ready => rotateSliceAllScales_U0_ap_ready,
        xInStream_V_V_dout => xInStream_V_V_dout,
        xInStream_V_V_empty_n => xInStream_V_V_empty_n,
        xInStream_V_V_read => rotateSliceAllScales_U0_xInStream_V_V_read,
        yInStream_V_V_dout => yInStream_V_V_dout,
        yInStream_V_V_empty_n => yInStream_V_V_empty_n,
        yInStream_V_V_read => rotateSliceAllScales_U0_yInStream_V_V_read,
        tsInStream_V_dout => tsInStream_V_dout,
        tsInStream_V_empty_n => tsInStream_V_empty_n,
        tsInStream_V_read => rotateSliceAllScales_U0_tsInStream_V_read,
        xOutStream_V_V_din => rotateSliceAllScales_U0_xOutStream_V_V_din,
        xOutStream_V_V_full_n => xOutStream_V_V_full_n,
        xOutStream_V_V_write => rotateSliceAllScales_U0_xOutStream_V_V_write,
        yOutStream_V_V_din => rotateSliceAllScales_U0_yOutStream_V_V_din,
        yOutStream_V_V_full_n => yOutStream_V_V_full_n,
        yOutStream_V_V_write => rotateSliceAllScales_U0_yOutStream_V_V_write,
        idxStream_V_V_din => rotateSliceAllScales_U0_idxStream_V_V_din,
        idxStream_V_V_full_n => idxStream_V_V_full_n,
        idxStream_V_V_write => rotateSliceAllScales_U0_idxStream_V_V_write,
        xOutStreamScale1_V_V_din => rotateSliceAllScales_U0_xOutStreamScale1_V_V_din,
        xOutStreamScale1_V_V_full_n => xOutStreamScale1_V_V_full_n,
        xOutStreamScale1_V_V_write => rotateSliceAllScales_U0_xOutStreamScale1_V_V_write,
        yOutStreamScale1_V_V_din => rotateSliceAllScales_U0_yOutStreamScale1_V_V_din,
        yOutStreamScale1_V_V_full_n => yOutStreamScale1_V_V_full_n,
        yOutStreamScale1_V_V_write => rotateSliceAllScales_U0_yOutStreamScale1_V_V_write,
        idxStreamScale1_V_V_din => rotateSliceAllScales_U0_idxStreamScale1_V_V_din,
        idxStreamScale1_V_V_full_n => idxStreamScale1_V_V_full_n,
        idxStreamScale1_V_V_write => rotateSliceAllScales_U0_idxStreamScale1_V_V_write,
        xOutStreamScale2_V_V_din => rotateSliceAllScales_U0_xOutStreamScale2_V_V_din,
        xOutStreamScale2_V_V_full_n => xOutStreamScale2_V_V_full_n,
        xOutStreamScale2_V_V_write => rotateSliceAllScales_U0_xOutStreamScale2_V_V_write,
        yOutStreamScale2_V_V_din => rotateSliceAllScales_U0_yOutStreamScale2_V_V_din,
        yOutStreamScale2_V_V_full_n => yOutStreamScale2_V_V_full_n,
        yOutStreamScale2_V_V_write => rotateSliceAllScales_U0_yOutStreamScale2_V_V_write,
        idxStreamScale2_V_V_din => rotateSliceAllScales_U0_idxStreamScale2_V_V_din,
        idxStreamScale2_V_V_full_n => idxStreamScale2_V_V_full_n,
        idxStreamScale2_V_V_write => rotateSliceAllScales_U0_idxStreamScale2_V_V_write,
        glConfig_V_dout => glConfig_V_c_dout,
        glConfig_V_empty_n => glConfig_V_c_empty_n,
        glConfig_V_read => rotateSliceAllScales_U0_glConfig_V_read,
        deltaTsHWBak_V_out_din => rotateSliceAllScales_U0_deltaTsHWBak_V_out_din,
        deltaTsHWBak_V_out_full_n => deltaTsHWBak_V_c_full_n,
        deltaTsHWBak_V_out_write => rotateSliceAllScales_U0_deltaTsHWBak_V_out_write,
        glConfig_V_out_din => rotateSliceAllScales_U0_glConfig_V_out_din,
        glConfig_V_out_full_n => glConfig_V_c18_full_n,
        glConfig_V_out_write => rotateSliceAllScales_U0_glConfig_V_out_write,
        glRotateFlg_V_out_din => rotateSliceAllScales_U0_glRotateFlg_V_out_din,
        glRotateFlg_V_out_full_n => glRotateFlg_V_c_full_n,
        glRotateFlg_V_out_write => rotateSliceAllScales_U0_glRotateFlg_V_out_write,
        glSFASTAreaCntThrBak_out_din => rotateSliceAllScales_U0_glSFASTAreaCntThrBak_out_din,
        glSFASTAreaCntThrBak_out_full_n => glSFASTAreaCntThrBak_2_full_n,
        glSFASTAreaCntThrBak_out_write => rotateSliceAllScales_U0_glSFASTAreaCntThrBak_out_write);

    rwSlicesScale2WithSe_U0 : component rwSlicesScale2WithSe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => rwSlicesScale2WithSe_U0_ap_start,
        ap_done => rwSlicesScale2WithSe_U0_ap_done,
        ap_continue => rwSlicesScale2WithSe_U0_ap_continue,
        ap_idle => rwSlicesScale2WithSe_U0_ap_idle,
        ap_ready => rwSlicesScale2WithSe_U0_ap_ready,
        select_V_dout => select_V_dout,
        select_V_empty_n => select_V_empty_n,
        select_V_read => rwSlicesScale2WithSe_U0_select_V_read,
        xStream_V_V_dout => xOutStreamScale2_V_V_dout,
        xStream_V_V_empty_n => xOutStreamScale2_V_V_empty_n,
        xStream_V_V_read => rwSlicesScale2WithSe_U0_xStream_V_V_read,
        yStream_V_V_dout => yOutStreamScale2_V_V_dout,
        yStream_V_V_empty_n => yOutStreamScale2_V_V_empty_n,
        yStream_V_V_read => rwSlicesScale2WithSe_U0_yStream_V_V_read,
        idxStream_V_V_dout => idxStreamScale2_V_V_dout,
        idxStream_V_V_empty_n => idxStreamScale2_V_V_empty_n,
        idxStream_V_V_read => rwSlicesScale2WithSe_U0_idxStream_V_V_read,
        refStreamOutScale2_V_V_din => rwSlicesScale2WithSe_U0_refStreamOutScale2_V_V_din,
        refStreamOutScale2_V_V_full_n => refStreamScale2_V_V_full_n,
        refStreamOutScale2_V_V_write => rwSlicesScale2WithSe_U0_refStreamOutScale2_V_V_write,
        tagStreamOutScale2_V_V_din => rwSlicesScale2WithSe_U0_tagStreamOutScale2_V_V_din,
        tagStreamOutScale2_V_V_full_n => tagStreamInScale2_V_s_full_n,
        tagStreamOutScale2_V_V_write => rwSlicesScale2WithSe_U0_tagStreamOutScale2_V_V_write);

    colStreamToColSumSca_U0 : component colStreamToColSumSca
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => colStreamToColSumSca_U0_ap_start,
        ap_done => colStreamToColSumSca_U0_ap_done,
        ap_continue => colStreamToColSumSca_U0_ap_continue,
        ap_idle => colStreamToColSumSca_U0_ap_idle,
        ap_ready => colStreamToColSumSca_U0_ap_ready,
        select_V_dout => select_V_channel19_dout,
        select_V_empty_n => select_V_channel19_empty_n,
        select_V_read => colStreamToColSumSca_U0_select_V_read,
        colStream0_V_V_dout => refStreamScale2_V_V_dout,
        colStream0_V_V_empty_n => refStreamScale2_V_V_empty_n,
        colStream0_V_V_read => colStreamToColSumSca_U0_colStream0_V_V_read,
        colStream1_V_V_dout => tagStreamInScale2_V_s_dout,
        colStream1_V_V_empty_n => tagStreamInScale2_V_s_empty_n,
        colStream1_V_V_read => colStreamToColSumSca_U0_colStream1_V_V_read,
        outStream_V_V_din => colStreamToColSumSca_U0_outStream_V_V_din,
        outStream_V_V_full_n => outStreamScale2_V_V_full_n,
        outStream_V_V_write => colStreamToColSumSca_U0_outStream_V_V_write,
        refZeroCntStream_V_V_din => colStreamToColSumSca_U0_refZeroCntStream_V_V_din,
        refZeroCntStream_V_V_full_n => refZeroCntStreamScal_3_full_n,
        refZeroCntStream_V_V_write => colStreamToColSumSca_U0_refZeroCntStream_V_V_write,
        tagColValidCntStream_V_V_din => colStreamToColSumSca_U0_tagColValidCntStream_V_V_din,
        tagColValidCntStream_V_V_full_n => tagColValidCntStream_5_full_n,
        tagColValidCntStream_V_V_write => colStreamToColSumSca_U0_tagColValidCntStream_V_V_write,
        refTagValidCntStream_V_V_din => colStreamToColSumSca_U0_refTagValidCntStream_V_V_din,
        refTagValidCntStream_V_V_full_n => refTagValidCntStream_5_full_n,
        refTagValidCntStream_V_V_write => colStreamToColSumSca_U0_refTagValidCntStream_V_V_write);

    accumulateStreamScal_U0 : component accumulateStreamScal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => accumulateStreamScal_U0_ap_start,
        ap_done => accumulateStreamScal_U0_ap_done,
        ap_continue => accumulateStreamScal_U0_ap_continue,
        ap_idle => accumulateStreamScal_U0_ap_idle,
        ap_ready => accumulateStreamScal_U0_ap_ready,
        select_V_dout => select_V_channel20_dout,
        select_V_empty_n => select_V_channel20_empty_n,
        select_V_read => accumulateStreamScal_U0_select_V_read,
        inStream_V_V_dout => outStreamScale2_V_V_dout,
        inStream_V_V_empty_n => outStreamScale2_V_V_empty_n,
        inStream_V_V_read => accumulateStreamScal_U0_inStream_V_V_read,
        outStream_V_din => accumulateStreamScal_U0_outStream_V_din,
        outStream_V_full_n => outSumStreamScale2_V_full_n,
        outStream_V_write => accumulateStreamScal_U0_outStream_V_write,
        OF_yStream_V_din => accumulateStreamScal_U0_OF_yStream_V_din,
        OF_yStream_V_full_n => OF_yStreamScale2_V_full_n,
        OF_yStream_V_write => accumulateStreamScal_U0_OF_yStream_V_write,
        refZeroCntStream_V_V_dout => refZeroCntStreamScal_3_dout,
        refZeroCntStream_V_V_empty_n => refZeroCntStreamScal_3_empty_n,
        refZeroCntStream_V_V_read => accumulateStreamScal_U0_refZeroCntStream_V_V_read,
        tagColValidCntStream_V_V_dout => tagColValidCntStream_5_dout,
        tagColValidCntStream_V_V_empty_n => tagColValidCntStream_5_empty_n,
        tagColValidCntStream_V_V_read => accumulateStreamScal_U0_tagColValidCntStream_V_V_read,
        refTagValidCntStream_V_V_dout => refTagValidCntStream_5_dout,
        refTagValidCntStream_V_V_empty_n => refTagValidCntStream_5_empty_n,
        refTagValidCntStream_V_V_read => accumulateStreamScal_U0_refTagValidCntStream_V_V_read);

    findStreamMinScale2W_U0 : component findStreamMinScale2W
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => findStreamMinScale2W_U0_ap_start,
        ap_done => findStreamMinScale2W_U0_ap_done,
        ap_continue => findStreamMinScale2W_U0_ap_continue,
        ap_idle => findStreamMinScale2W_U0_ap_idle,
        ap_ready => findStreamMinScale2W_U0_ap_ready,
        select_V_dout => select_V_channel21_dout,
        select_V_empty_n => select_V_channel21_empty_n,
        select_V_read => findStreamMinScale2W_U0_select_V_read,
        inStream_V_dout => outSumStreamScale2_V_dout,
        inStream_V_empty_n => outSumStreamScale2_V_empty_n,
        inStream_V_read => findStreamMinScale2W_U0_inStream_V_read,
        OF_yStream_V_dout => OF_yStreamScale2_V_dout,
        OF_yStream_V_empty_n => OF_yStreamScale2_V_empty_n,
        OF_yStream_V_read => findStreamMinScale2W_U0_OF_yStream_V_read,
        minStream_V_V_din => findStreamMinScale2W_U0_minStream_V_V_din,
        minStream_V_V_full_n => miniSumStreamScale2_s_full_n,
        minStream_V_V_write => findStreamMinScale2W_U0_minStream_V_V_write,
        OFStream_V_V_din => findStreamMinScale2W_U0_OFStream_V_V_din,
        OFStream_V_V_full_n => OFRetStreamScale2_V_s_full_n,
        OFStream_V_V_write => findStreamMinScale2W_U0_OFStream_V_V_write);

    getInitOffsetForNext_U0 : component getInitOffsetForNext
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => getInitOffsetForNext_U0_ap_start,
        ap_done => getInitOffsetForNext_U0_ap_done,
        ap_continue => getInitOffsetForNext_U0_ap_continue,
        ap_idle => getInitOffsetForNext_U0_ap_idle,
        ap_ready => getInitOffsetForNext_U0_ap_ready,
        select_V_dout => select_V_channel22_dout,
        select_V_empty_n => select_V_channel22_empty_n,
        select_V_read => getInitOffsetForNext_U0_select_V_read,
        miniSumStreamScale2_V_V_dout => miniSumStreamScale2_s_dout,
        miniSumStreamScale2_V_V_empty_n => miniSumStreamScale2_s_empty_n,
        miniSumStreamScale2_V_V_read => getInitOffsetForNext_U0_miniSumStreamScale2_V_V_read,
        OFRetStreamScale2_V_V_dout => OFRetStreamScale2_V_s_dout,
        OFRetStreamScale2_V_V_empty_n => OFRetStreamScale2_V_s_empty_n,
        OFRetStreamScale2_V_V_read => getInitOffsetForNext_U0_OFRetStreamScale2_V_V_read,
        xInitOffsetScale1Stream_V_V_din => getInitOffsetForNext_U0_xInitOffsetScale1Stream_V_V_din,
        xInitOffsetScale1Stream_V_V_full_n => xInitOffsetScale1Str_2_full_n,
        xInitOffsetScale1Stream_V_V_write => getInitOffsetForNext_U0_xInitOffsetScale1Stream_V_V_write,
        yInitOffsetScale1Stream_V_V_din => getInitOffsetForNext_U0_yInitOffsetScale1Stream_V_V_din,
        yInitOffsetScale1Stream_V_V_full_n => yInitOffsetScale1Str_2_full_n,
        yInitOffsetScale1Stream_V_V_write => getInitOffsetForNext_U0_yInitOffsetScale1Stream_V_V_write,
        xInitOffsetScale1StreamCopy_V_V_din => getInitOffsetForNext_U0_xInitOffsetScale1StreamCopy_V_V_din,
        xInitOffsetScale1StreamCopy_V_V_full_n => xInitOffsetScale1Str_3_full_n,
        xInitOffsetScale1StreamCopy_V_V_write => getInitOffsetForNext_U0_xInitOffsetScale1StreamCopy_V_V_write,
        yInitOffsetScale1StreamCopy_V_V_din => getInitOffsetForNext_U0_yInitOffsetScale1StreamCopy_V_V_din,
        yInitOffsetScale1StreamCopy_V_V_full_n => yInitOffsetScale1Str_3_full_n,
        yInitOffsetScale1StreamCopy_V_V_write => getInitOffsetForNext_U0_yInitOffsetScale1StreamCopy_V_V_write,
        miniSumStreamScale2Copy_V_V_din => getInitOffsetForNext_U0_miniSumStreamScale2Copy_V_V_din,
        miniSumStreamScale2Copy_V_V_full_n => miniSumStreamScale2C_1_full_n,
        miniSumStreamScale2Copy_V_V_write => getInitOffsetForNext_U0_miniSumStreamScale2Copy_V_V_write,
        OFRetStreamScale2Copy_V_V_din => getInitOffsetForNext_U0_OFRetStreamScale2Copy_V_V_din,
        OFRetStreamScale2Copy_V_V_full_n => OFRetStreamScale2Cop_1_full_n,
        OFRetStreamScale2Copy_V_V_write => getInitOffsetForNext_U0_OFRetStreamScale2Copy_V_V_write);

    rwSlicesScale1WithSe_U0 : component rwSlicesScale1WithSe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => rwSlicesScale1WithSe_U0_ap_start,
        ap_done => rwSlicesScale1WithSe_U0_ap_done,
        ap_continue => rwSlicesScale1WithSe_U0_ap_continue,
        ap_idle => rwSlicesScale1WithSe_U0_ap_idle,
        ap_ready => rwSlicesScale1WithSe_U0_ap_ready,
        select_V_dout => select_V_channel23_dout,
        select_V_empty_n => select_V_channel23_empty_n,
        select_V_read => rwSlicesScale1WithSe_U0_select_V_read,
        xStream_V_V_dout => xOutStreamScale1_V_V_dout,
        xStream_V_V_empty_n => xOutStreamScale1_V_V_empty_n,
        xStream_V_V_read => rwSlicesScale1WithSe_U0_xStream_V_V_read,
        yStream_V_V_dout => yOutStreamScale1_V_V_dout,
        yStream_V_V_empty_n => yOutStreamScale1_V_V_empty_n,
        yStream_V_V_read => rwSlicesScale1WithSe_U0_yStream_V_V_read,
        xInitOffsetStream_V_V_dout => xInitOffsetScale1Str_2_dout,
        xInitOffsetStream_V_V_empty_n => xInitOffsetScale1Str_2_empty_n,
        xInitOffsetStream_V_V_read => rwSlicesScale1WithSe_U0_xInitOffsetStream_V_V_read,
        yInitOffsetStream_V_V_dout => yInitOffsetScale1Str_2_dout,
        yInitOffsetStream_V_V_empty_n => yInitOffsetScale1Str_2_empty_n,
        yInitOffsetStream_V_V_read => rwSlicesScale1WithSe_U0_yInitOffsetStream_V_V_read,
        idxStream_V_V_dout => idxStreamScale1_V_V_dout,
        idxStream_V_V_empty_n => idxStreamScale1_V_V_empty_n,
        idxStream_V_V_read => rwSlicesScale1WithSe_U0_idxStream_V_V_read,
        refStreamOutScale1_V_V_din => rwSlicesScale1WithSe_U0_refStreamOutScale1_V_V_din,
        refStreamOutScale1_V_V_full_n => refStreamScale1_V_V_full_n,
        refStreamOutScale1_V_V_write => rwSlicesScale1WithSe_U0_refStreamOutScale1_V_V_write,
        tagStreamOutScale1_V_V_din => rwSlicesScale1WithSe_U0_tagStreamOutScale1_V_V_din,
        tagStreamOutScale1_V_V_full_n => tagStreamInScale1_V_s_full_n,
        tagStreamOutScale1_V_V_write => rwSlicesScale1WithSe_U0_tagStreamOutScale1_V_V_write);

    reOrderStreamScale1W_U0 : component reOrderStreamScale1W
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => reOrderStreamScale1W_U0_ap_start,
        ap_done => reOrderStreamScale1W_U0_ap_done,
        ap_continue => reOrderStreamScale1W_U0_ap_continue,
        ap_idle => reOrderStreamScale1W_U0_ap_idle,
        ap_ready => reOrderStreamScale1W_U0_ap_ready,
        select_V_dout => select_V_channel24_dout,
        select_V_empty_n => select_V_channel24_empty_n,
        select_V_read => reOrderStreamScale1W_U0_select_V_read,
        refSingleStreamOut_V_V_dout => refStreamScale1_V_V_dout,
        refSingleStreamOut_V_V_empty_n => refStreamScale1_V_V_empty_n,
        refSingleStreamOut_V_V_read => reOrderStreamScale1W_U0_refSingleStreamOut_V_V_read,
        tagSingleStreamOut_V_V_dout => tagStreamInScale1_V_s_dout,
        tagSingleStreamOut_V_V_empty_n => tagStreamInScale1_V_s_empty_n,
        tagSingleStreamOut_V_V_read => reOrderStreamScale1W_U0_tagSingleStreamOut_V_V_read,
        refNPCStreamOut_V_V_din => reOrderStreamScale1W_U0_refNPCStreamOut_V_V_din,
        refNPCStreamOut_V_V_full_n => refNPCStreamScale1_V_full_n,
        refNPCStreamOut_V_V_write => reOrderStreamScale1W_U0_refNPCStreamOut_V_V_write,
        tagNPCStreamOut_V_V_din => reOrderStreamScale1W_U0_tagNPCStreamOut_V_V_din,
        tagNPCStreamOut_V_V_full_n => tagNPCStreamInScale1_1_full_n,
        tagNPCStreamOut_V_V_write => reOrderStreamScale1W_U0_tagNPCStreamOut_V_V_write);

    colStreamToColSumSca_2_U0 : component colStreamToColSumSca_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => colStreamToColSumSca_2_U0_ap_start,
        ap_done => colStreamToColSumSca_2_U0_ap_done,
        ap_continue => colStreamToColSumSca_2_U0_ap_continue,
        ap_idle => colStreamToColSumSca_2_U0_ap_idle,
        ap_ready => colStreamToColSumSca_2_U0_ap_ready,
        select_V_dout => select_V_channel25_dout,
        select_V_empty_n => select_V_channel25_empty_n,
        select_V_read => colStreamToColSumSca_2_U0_select_V_read,
        colStream0_V_V_dout => refNPCStreamScale1_V_dout,
        colStream0_V_V_empty_n => refNPCStreamScale1_V_empty_n,
        colStream0_V_V_read => colStreamToColSumSca_2_U0_colStream0_V_V_read,
        colStream1_V_V_dout => tagNPCStreamInScale1_1_dout,
        colStream1_V_V_empty_n => tagNPCStreamInScale1_1_empty_n,
        colStream1_V_V_read => colStreamToColSumSca_2_U0_colStream1_V_V_read,
        outStream_V_V_din => colStreamToColSumSca_2_U0_outStream_V_V_din,
        outStream_V_V_full_n => outStreamScale1_V_V_full_n,
        outStream_V_V_write => colStreamToColSumSca_2_U0_outStream_V_V_write,
        refZeroCntStream_V_V_din => colStreamToColSumSca_2_U0_refZeroCntStream_V_V_din,
        refZeroCntStream_V_V_full_n => refZeroCntStreamScal_2_full_n,
        refZeroCntStream_V_V_write => colStreamToColSumSca_2_U0_refZeroCntStream_V_V_write,
        tagColValidCntStream_V_V_din => colStreamToColSumSca_2_U0_tagColValidCntStream_V_V_din,
        tagColValidCntStream_V_V_full_n => tagColValidCntStream_4_full_n,
        tagColValidCntStream_V_V_write => colStreamToColSumSca_2_U0_tagColValidCntStream_V_V_write,
        refTagValidCntStream_V_V_din => colStreamToColSumSca_2_U0_refTagValidCntStream_V_V_din,
        refTagValidCntStream_V_V_full_n => refTagValidCntStream_4_full_n,
        refTagValidCntStream_V_V_write => colStreamToColSumSca_2_U0_refTagValidCntStream_V_V_write);

    accumulateStreamScal_2_U0 : component accumulateStreamScal_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => accumulateStreamScal_2_U0_ap_start,
        ap_done => accumulateStreamScal_2_U0_ap_done,
        ap_continue => accumulateStreamScal_2_U0_ap_continue,
        ap_idle => accumulateStreamScal_2_U0_ap_idle,
        ap_ready => accumulateStreamScal_2_U0_ap_ready,
        select_V_dout => select_V_channel26_dout,
        select_V_empty_n => select_V_channel26_empty_n,
        select_V_read => accumulateStreamScal_2_U0_select_V_read,
        inStream_V_V_dout => outStreamScale1_V_V_dout,
        inStream_V_V_empty_n => outStreamScale1_V_V_empty_n,
        inStream_V_V_read => accumulateStreamScal_2_U0_inStream_V_V_read,
        outStream_V_din => accumulateStreamScal_2_U0_outStream_V_din,
        outStream_V_full_n => outSumStreamScale1_V_full_n,
        outStream_V_write => accumulateStreamScal_2_U0_outStream_V_write,
        OF_yStream_V_din => accumulateStreamScal_2_U0_OF_yStream_V_din,
        OF_yStream_V_full_n => OF_yStreamScale1_V_full_n,
        OF_yStream_V_write => accumulateStreamScal_2_U0_OF_yStream_V_write,
        refZeroCntStream_V_V_dout => refZeroCntStreamScal_2_dout,
        refZeroCntStream_V_V_empty_n => refZeroCntStreamScal_2_empty_n,
        refZeroCntStream_V_V_read => accumulateStreamScal_2_U0_refZeroCntStream_V_V_read,
        tagColValidCntStream_V_V_dout => tagColValidCntStream_4_dout,
        tagColValidCntStream_V_V_empty_n => tagColValidCntStream_4_empty_n,
        tagColValidCntStream_V_V_read => accumulateStreamScal_2_U0_tagColValidCntStream_V_V_read,
        refTagValidCntStream_V_V_dout => refTagValidCntStream_4_dout,
        refTagValidCntStream_V_V_empty_n => refTagValidCntStream_4_empty_n,
        refTagValidCntStream_V_V_read => accumulateStreamScal_2_U0_refTagValidCntStream_V_V_read);

    findStreamMinScale1W_U0 : component findStreamMinScale1W
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => findStreamMinScale1W_U0_ap_start,
        ap_done => findStreamMinScale1W_U0_ap_done,
        ap_continue => findStreamMinScale1W_U0_ap_continue,
        ap_idle => findStreamMinScale1W_U0_ap_idle,
        ap_ready => findStreamMinScale1W_U0_ap_ready,
        select_V_dout => select_V_channel27_dout,
        select_V_empty_n => select_V_channel27_empty_n,
        select_V_read => findStreamMinScale1W_U0_select_V_read,
        inStream_V_dout => outSumStreamScale1_V_dout,
        inStream_V_empty_n => outSumStreamScale1_V_empty_n,
        inStream_V_read => findStreamMinScale1W_U0_inStream_V_read,
        OF_yStream_V_dout => OF_yStreamScale1_V_dout,
        OF_yStream_V_empty_n => OF_yStreamScale1_V_empty_n,
        OF_yStream_V_read => findStreamMinScale1W_U0_OF_yStream_V_read,
        minStream_V_V_din => findStreamMinScale1W_U0_minStream_V_V_din,
        minStream_V_V_full_n => miniSumStreamScale1_s_full_n,
        minStream_V_V_write => findStreamMinScale1W_U0_minStream_V_V_write,
        OFStream_V_V_din => findStreamMinScale1W_U0_OFStream_V_V_din,
        OFStream_V_V_full_n => OFRetStreamScale1_V_s_full_n,
        OFStream_V_V_write => findStreamMinScale1W_U0_OFStream_V_V_write);

    getInitOffsetForNext_1_U0 : component getInitOffsetForNext_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => getInitOffsetForNext_1_U0_ap_start,
        ap_done => getInitOffsetForNext_1_U0_ap_done,
        ap_continue => getInitOffsetForNext_1_U0_ap_continue,
        ap_idle => getInitOffsetForNext_1_U0_ap_idle,
        ap_ready => getInitOffsetForNext_1_U0_ap_ready,
        select_V_dout => select_V_channel28_dout,
        select_V_empty_n => select_V_channel28_empty_n,
        select_V_read => getInitOffsetForNext_1_U0_select_V_read,
        miniSumStreamScale1_V_V_dout => miniSumStreamScale1_s_dout,
        miniSumStreamScale1_V_V_empty_n => miniSumStreamScale1_s_empty_n,
        miniSumStreamScale1_V_V_read => getInitOffsetForNext_1_U0_miniSumStreamScale1_V_V_read,
        OFRetStreamScale1_V_V_dout => OFRetStreamScale1_V_s_dout,
        OFRetStreamScale1_V_V_empty_n => OFRetStreamScale1_V_s_empty_n,
        OFRetStreamScale1_V_V_read => getInitOffsetForNext_1_U0_OFRetStreamScale1_V_V_read,
        xInitOffsetScale1StreamCopy_V_V_dout => xInitOffsetScale1Str_3_dout,
        xInitOffsetScale1StreamCopy_V_V_empty_n => xInitOffsetScale1Str_3_empty_n,
        xInitOffsetScale1StreamCopy_V_V_read => getInitOffsetForNext_1_U0_xInitOffsetScale1StreamCopy_V_V_read,
        yInitOffsetScale1StreamCopy_V_V_dout => yInitOffsetScale1Str_3_dout,
        yInitOffsetScale1StreamCopy_V_V_empty_n => yInitOffsetScale1Str_3_empty_n,
        yInitOffsetScale1StreamCopy_V_V_read => getInitOffsetForNext_1_U0_yInitOffsetScale1StreamCopy_V_V_read,
        xInitOffsetScale0Stream_V_V_din => getInitOffsetForNext_1_U0_xInitOffsetScale0Stream_V_V_din,
        xInitOffsetScale0Stream_V_V_full_n => xInitOffsetScale0Str_1_full_n,
        xInitOffsetScale0Stream_V_V_write => getInitOffsetForNext_1_U0_xInitOffsetScale0Stream_V_V_write,
        yInitOffsetScale0Stream_V_V_din => getInitOffsetForNext_1_U0_yInitOffsetScale0Stream_V_V_din,
        yInitOffsetScale0Stream_V_V_full_n => yInitOffsetScale0Str_1_full_n,
        yInitOffsetScale0Stream_V_V_write => getInitOffsetForNext_1_U0_yInitOffsetScale0Stream_V_V_write,
        miniSumStreamScale1Copy_V_V_din => getInitOffsetForNext_1_U0_miniSumStreamScale1Copy_V_V_din,
        miniSumStreamScale1Copy_V_V_full_n => miniSumStreamScale1C_1_full_n,
        miniSumStreamScale1Copy_V_V_write => getInitOffsetForNext_1_U0_miniSumStreamScale1Copy_V_V_write,
        OFRetStreamScale1Copy_V_V_din => getInitOffsetForNext_1_U0_OFRetStreamScale1Copy_V_V_din,
        OFRetStreamScale1Copy_V_V_full_n => OFRetStreamScale1Cop_1_full_n,
        OFRetStreamScale1Copy_V_V_write => getInitOffsetForNext_1_U0_OFRetStreamScale1Copy_V_V_write);

    rwSlicesScale0WithSe_U0 : component rwSlicesScale0WithSe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => rwSlicesScale0WithSe_U0_ap_start,
        ap_done => rwSlicesScale0WithSe_U0_ap_done,
        ap_continue => rwSlicesScale0WithSe_U0_ap_continue,
        ap_idle => rwSlicesScale0WithSe_U0_ap_idle,
        ap_ready => rwSlicesScale0WithSe_U0_ap_ready,
        select_V_dout => select_V_channel29_dout,
        select_V_empty_n => select_V_channel29_empty_n,
        select_V_read => rwSlicesScale0WithSe_U0_select_V_read,
        xStream_V_V_dout => xOutStream_V_V_dout,
        xStream_V_V_empty_n => xOutStream_V_V_empty_n,
        xStream_V_V_read => rwSlicesScale0WithSe_U0_xStream_V_V_read,
        yStream_V_V_dout => yOutStream_V_V_dout,
        yStream_V_V_empty_n => yOutStream_V_V_empty_n,
        yStream_V_V_read => rwSlicesScale0WithSe_U0_yStream_V_V_read,
        xInitOffsetStream_V_V_dout => xInitOffsetScale0Str_1_dout,
        xInitOffsetStream_V_V_empty_n => xInitOffsetScale0Str_1_empty_n,
        xInitOffsetStream_V_V_read => rwSlicesScale0WithSe_U0_xInitOffsetStream_V_V_read,
        yInitOffsetStream_V_V_dout => yInitOffsetScale0Str_1_dout,
        yInitOffsetStream_V_V_empty_n => yInitOffsetScale0Str_1_empty_n,
        yInitOffsetStream_V_V_read => rwSlicesScale0WithSe_U0_yInitOffsetStream_V_V_read,
        idxStream_V_V_dout => idxStream_V_V_dout,
        idxStream_V_V_empty_n => idxStream_V_V_empty_n,
        idxStream_V_V_read => rwSlicesScale0WithSe_U0_idxStream_V_V_read,
        refSingleStreamOut_V_V_din => rwSlicesScale0WithSe_U0_refSingleStreamOut_V_V_din,
        refSingleStreamOut_V_V_full_n => refStream_V_V_full_n,
        refSingleStreamOut_V_V_write => rwSlicesScale0WithSe_U0_refSingleStreamOut_V_V_write,
        tagSingleStreamOut_V_V_din => rwSlicesScale0WithSe_U0_tagSingleStreamOut_V_V_din,
        tagSingleStreamOut_V_V_full_n => tagStreamIn_V_V_full_n,
        tagSingleStreamOut_V_V_write => rwSlicesScale0WithSe_U0_tagSingleStreamOut_V_V_write);

    reOrderStreamScale0W_U0 : component reOrderStreamScale0W
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => reOrderStreamScale0W_U0_ap_start,
        ap_done => reOrderStreamScale0W_U0_ap_done,
        ap_continue => reOrderStreamScale0W_U0_ap_continue,
        ap_idle => reOrderStreamScale0W_U0_ap_idle,
        ap_ready => reOrderStreamScale0W_U0_ap_ready,
        select_V_dout => select_V_channel30_dout,
        select_V_empty_n => select_V_channel30_empty_n,
        select_V_read => reOrderStreamScale0W_U0_select_V_read,
        refSingleStreamOut_V_V_dout => refStream_V_V_dout,
        refSingleStreamOut_V_V_empty_n => refStream_V_V_empty_n,
        refSingleStreamOut_V_V_read => reOrderStreamScale0W_U0_refSingleStreamOut_V_V_read,
        tagSingleStreamOut_V_V_dout => tagStreamIn_V_V_dout,
        tagSingleStreamOut_V_V_empty_n => tagStreamIn_V_V_empty_n,
        tagSingleStreamOut_V_V_read => reOrderStreamScale0W_U0_tagSingleStreamOut_V_V_read,
        refNPCStreamOut_V_V_din => reOrderStreamScale0W_U0_refNPCStreamOut_V_V_din,
        refNPCStreamOut_V_V_full_n => refNPCStream_V_V_full_n,
        refNPCStreamOut_V_V_write => reOrderStreamScale0W_U0_refNPCStreamOut_V_V_write,
        tagNPCStreamOut_V_V_din => reOrderStreamScale0W_U0_tagNPCStreamOut_V_V_din,
        tagNPCStreamOut_V_V_full_n => tagNPCStreamIn_V_V_full_n,
        tagNPCStreamOut_V_V_write => reOrderStreamScale0W_U0_tagNPCStreamOut_V_V_write);

    colStreamToColSumSca_4_U0 : component colStreamToColSumSca_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => colStreamToColSumSca_4_U0_ap_start,
        ap_done => colStreamToColSumSca_4_U0_ap_done,
        ap_continue => colStreamToColSumSca_4_U0_ap_continue,
        ap_idle => colStreamToColSumSca_4_U0_ap_idle,
        ap_ready => colStreamToColSumSca_4_U0_ap_ready,
        select_V_dout => select_V_channel31_dout,
        select_V_empty_n => select_V_channel31_empty_n,
        select_V_read => colStreamToColSumSca_4_U0_select_V_read,
        colStream0_V_V_dout => refNPCStream_V_V_dout,
        colStream0_V_V_empty_n => refNPCStream_V_V_empty_n,
        colStream0_V_V_read => colStreamToColSumSca_4_U0_colStream0_V_V_read,
        colStream1_V_V_dout => tagNPCStreamIn_V_V_dout,
        colStream1_V_V_empty_n => tagNPCStreamIn_V_V_empty_n,
        colStream1_V_V_read => colStreamToColSumSca_4_U0_colStream1_V_V_read,
        outStream_V_V_din => colStreamToColSumSca_4_U0_outStream_V_V_din,
        outStream_V_V_full_n => outStream_V_V_full_n,
        outStream_V_V_write => colStreamToColSumSca_4_U0_outStream_V_V_write,
        refZeroCntStream_V_V_din => colStreamToColSumSca_4_U0_refZeroCntStream_V_V_din,
        refZeroCntStream_V_V_full_n => refZeroCntStream_V_V_full_n,
        refZeroCntStream_V_V_write => colStreamToColSumSca_4_U0_refZeroCntStream_V_V_write,
        tagColValidCntStream_V_V_din => colStreamToColSumSca_4_U0_tagColValidCntStream_V_V_din,
        tagColValidCntStream_V_V_full_n => tagColValidCntStream_3_full_n,
        tagColValidCntStream_V_V_write => colStreamToColSumSca_4_U0_tagColValidCntStream_V_V_write,
        refTagValidCntStream_V_V_din => colStreamToColSumSca_4_U0_refTagValidCntStream_V_V_din,
        refTagValidCntStream_V_V_full_n => refTagValidCntStream_3_full_n,
        refTagValidCntStream_V_V_write => colStreamToColSumSca_4_U0_refTagValidCntStream_V_V_write);

    accumulateStreamScal_4_U0 : component accumulateStreamScal_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => accumulateStreamScal_4_U0_ap_start,
        ap_done => accumulateStreamScal_4_U0_ap_done,
        ap_continue => accumulateStreamScal_4_U0_ap_continue,
        ap_idle => accumulateStreamScal_4_U0_ap_idle,
        ap_ready => accumulateStreamScal_4_U0_ap_ready,
        select_V_dout => select_V_channel32_dout,
        select_V_empty_n => select_V_channel32_empty_n,
        select_V_read => accumulateStreamScal_4_U0_select_V_read,
        inStream_V_V_dout => outStream_V_V_dout,
        inStream_V_V_empty_n => outStream_V_V_empty_n,
        inStream_V_V_read => accumulateStreamScal_4_U0_inStream_V_V_read,
        outStream_V_din => accumulateStreamScal_4_U0_outStream_V_din,
        outStream_V_full_n => outSumStream_V_full_n,
        outStream_V_write => accumulateStreamScal_4_U0_outStream_V_write,
        OF_yStream_V_din => accumulateStreamScal_4_U0_OF_yStream_V_din,
        OF_yStream_V_full_n => OF_yStream_V_full_n,
        OF_yStream_V_write => accumulateStreamScal_4_U0_OF_yStream_V_write,
        refZeroCntStream_V_V_dout => refZeroCntStream_V_V_dout,
        refZeroCntStream_V_V_empty_n => refZeroCntStream_V_V_empty_n,
        refZeroCntStream_V_V_read => accumulateStreamScal_4_U0_refZeroCntStream_V_V_read,
        tagColValidCntStream_V_V_dout => tagColValidCntStream_3_dout,
        tagColValidCntStream_V_V_empty_n => tagColValidCntStream_3_empty_n,
        tagColValidCntStream_V_V_read => accumulateStreamScal_4_U0_tagColValidCntStream_V_V_read,
        refTagValidCntStream_V_V_dout => refTagValidCntStream_3_dout,
        refTagValidCntStream_V_V_empty_n => refTagValidCntStream_3_empty_n,
        refTagValidCntStream_V_V_read => accumulateStreamScal_4_U0_refTagValidCntStream_V_V_read);

    findStreamMinScale0W_U0 : component findStreamMinScale0W
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => findStreamMinScale0W_U0_ap_start,
        ap_done => findStreamMinScale0W_U0_ap_done,
        ap_continue => findStreamMinScale0W_U0_ap_continue,
        ap_idle => findStreamMinScale0W_U0_ap_idle,
        ap_ready => findStreamMinScale0W_U0_ap_ready,
        select_V_dout => select_V_channel33_dout,
        select_V_empty_n => select_V_channel33_empty_n,
        select_V_read => findStreamMinScale0W_U0_select_V_read,
        inStream_V_dout => outSumStream_V_dout,
        inStream_V_empty_n => outSumStream_V_empty_n,
        inStream_V_read => findStreamMinScale0W_U0_inStream_V_read,
        OF_yStream_V_dout => OF_yStream_V_dout,
        OF_yStream_V_empty_n => OF_yStream_V_empty_n,
        OF_yStream_V_read => findStreamMinScale0W_U0_OF_yStream_V_read,
        minStream_V_V_din => findStreamMinScale0W_U0_minStream_V_V_din,
        minStream_V_V_full_n => miniSumStreamScale0_s_full_n,
        minStream_V_V_write => findStreamMinScale0W_U0_minStream_V_V_write,
        OFStream_V_V_din => findStreamMinScale0W_U0_OFStream_V_V_din,
        OFStream_V_V_full_n => OFRetStreamScale0_V_s_full_n,
        OFStream_V_V_write => findStreamMinScale0W_U0_OFStream_V_V_write);

    Block_proc479_U0 : component Block_proc479
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc479_U0_ap_start,
        ap_done => Block_proc479_U0_ap_done,
        ap_continue => Block_proc479_U0_ap_continue,
        ap_idle => Block_proc479_U0_ap_idle,
        ap_ready => Block_proc479_U0_ap_ready,
        select_V_dout => select_V_channel34_dout,
        select_V_empty_n => select_V_channel34_empty_n,
        select_V_read => Block_proc479_U0_select_V_read,
        pktEventDataStream_V_V_dout => pktEventDataStream_V_dout,
        pktEventDataStream_V_V_empty_n => pktEventDataStream_V_empty_n,
        pktEventDataStream_V_V_read => Block_proc479_U0_pktEventDataStream_V_V_read,
        miniSumStreamScale0_V_V_dout => miniSumStreamScale0_s_dout,
        miniSumStreamScale0_V_V_empty_n => miniSumStreamScale0_s_empty_n,
        miniSumStreamScale0_V_V_read => Block_proc479_U0_miniSumStreamScale0_V_V_read,
        OFRetStreamScale0_V_V_dout => OFRetStreamScale0_V_s_dout,
        OFRetStreamScale0_V_V_empty_n => OFRetStreamScale0_V_s_empty_n,
        OFRetStreamScale0_V_V_read => Block_proc479_U0_OFRetStreamScale0_V_V_read,
        miniSumStreamScale1Copy_V_V_dout => miniSumStreamScale1C_1_dout,
        miniSumStreamScale1Copy_V_V_empty_n => miniSumStreamScale1C_1_empty_n,
        miniSumStreamScale1Copy_V_V_read => Block_proc479_U0_miniSumStreamScale1Copy_V_V_read,
        OFRetStreamScale1Copy_V_V_dout => OFRetStreamScale1Cop_1_dout,
        OFRetStreamScale1Copy_V_V_empty_n => OFRetStreamScale1Cop_1_empty_n,
        OFRetStreamScale1Copy_V_V_read => Block_proc479_U0_OFRetStreamScale1Copy_V_V_read,
        miniSumStreamScale2Copy_V_V_dout => miniSumStreamScale2C_1_dout,
        miniSumStreamScale2Copy_V_V_empty_n => miniSumStreamScale2C_1_empty_n,
        miniSumStreamScale2Copy_V_V_read => Block_proc479_U0_miniSumStreamScale2Copy_V_V_read,
        OFRetStreamScale2Copy_V_V_dout => OFRetStreamScale2Cop_1_dout,
        OFRetStreamScale2Copy_V_V_empty_n => OFRetStreamScale2Cop_1_empty_n,
        OFRetStreamScale2Copy_V_V_read => Block_proc479_U0_OFRetStreamScale2Copy_V_V_read,
        xStreamOut_V_V_TDATA => Block_proc479_U0_xStreamOut_V_V_TDATA,
        xStreamOut_V_V_TVALID => Block_proc479_U0_xStreamOut_V_V_TVALID,
        xStreamOut_V_V_TREADY => xStreamOut_V_V_TREADY,
        yStreamOut_V_V_TDATA => Block_proc479_U0_yStreamOut_V_V_TDATA,
        yStreamOut_V_V_TVALID => Block_proc479_U0_yStreamOut_V_V_TVALID,
        yStreamOut_V_V_TREADY => yStreamOut_V_V_TREADY,
        polStreamOut_V_V_TDATA => Block_proc479_U0_polStreamOut_V_V_TDATA,
        polStreamOut_V_V_TVALID => Block_proc479_U0_polStreamOut_V_V_TVALID,
        polStreamOut_V_V_TREADY => polStreamOut_V_V_TREADY,
        tsStreamOut_V_V_TDATA => Block_proc479_U0_tsStreamOut_V_V_TDATA,
        tsStreamOut_V_V_TVALID => Block_proc479_U0_tsStreamOut_V_V_TVALID,
        tsStreamOut_V_V_TREADY => tsStreamOut_V_V_TREADY,
        pixelDataStream_V_V_TDATA => Block_proc479_U0_pixelDataStream_V_V_TDATA,
        pixelDataStream_V_V_TVALID => Block_proc479_U0_pixelDataStream_V_V_TVALID,
        pixelDataStream_V_V_TREADY => pixelDataStream_V_V_TREADY,
        status_currentDeltaTSHW => Block_proc479_U0_status_currentDeltaTSHW,
        status_currentDeltaTSHW_ap_vld => Block_proc479_U0_status_currentDeltaTSHW_ap_vld,
        status_currentAreaCntThr => Block_proc479_U0_status_currentAreaCntThr,
        status_currentAreaCntThr_ap_vld => Block_proc479_U0_status_currentAreaCntThr_ap_vld,
        status_currentFeedbackAreaCntThr => Block_proc479_U0_status_currentFeedbackAreaCntThr,
        status_currentFeedbackAreaCntThr_ap_vld => Block_proc479_U0_status_currentFeedbackAreaCntThr_ap_vld,
        status_currentOFHistCntSum => Block_proc479_U0_status_currentOFHistCntSum,
        status_currentOFHistCntSum_ap_vld => Block_proc479_U0_status_currentOFHistCntSum_ap_vld,
        status_currentOFHistRadiusSum => Block_proc479_U0_status_currentOFHistRadiusSum,
        status_currentOFHistRadiusSum_ap_vld => Block_proc479_U0_status_currentOFHistRadiusSum_ap_vld,
        status_currentAverageTgtValue => Block_proc479_U0_status_currentAverageTgtValue,
        status_currentAverageTgtValue_ap_vld => Block_proc479_U0_status_currentAverageTgtValue_ap_vld,
        deltaTsHWBak_V_dout => deltaTsHWBak_V_c_dout,
        deltaTsHWBak_V_empty_n => deltaTsHWBak_V_c_empty_n,
        deltaTsHWBak_V_read => Block_proc479_U0_deltaTsHWBak_V_read,
        glConfig_V_dout => glConfig_V_c18_dout,
        glConfig_V_empty_n => glConfig_V_c18_empty_n,
        glConfig_V_read => Block_proc479_U0_glConfig_V_read,
        glRotateFlg_V_dout => glRotateFlg_V_c_dout,
        glRotateFlg_V_empty_n => glRotateFlg_V_c_empty_n,
        glRotateFlg_V_read => Block_proc479_U0_glRotateFlg_V_read,
        glSFASTAreaCntThrBak_dout => glSFASTAreaCntThrBak_2_dout,
        glSFASTAreaCntThrBak_empty_n => glSFASTAreaCntThrBak_2_empty_n,
        glSFASTAreaCntThrBak_read => Block_proc479_U0_glSFASTAreaCntThrBak_read);

    config_V_c1_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => EVABMOFStreamWithCon_2_U0_config_V_out_din,
        if_full_n => config_V_c1_full_n,
        if_write => EVABMOFStreamWithCon_2_U0_config_V_out_write,
        if_dout => config_V_c1_dout,
        if_empty_n => config_V_c1_empty_n,
        if_read => EVABMOFStreamWithCon_1_U0_config_V_read);

    config_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => EVABMOFStreamWithCon_1_U0_config_V_out_din,
        if_full_n => config_V_c_full_n,
        if_write => EVABMOFStreamWithCon_1_U0_config_V_out_write,
        if_dout => config_V_c_dout,
        if_empty_n => config_V_c_empty_n,
        if_read => Block_proc_U0_config_V_read);

    glConfig_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc_U0_glConfig_V_out_din,
        if_full_n => glConfig_V_c_full_n,
        if_write => Block_proc_U0_glConfig_V_out_write,
        if_dout => glConfig_V_c_dout,
        if_empty_n => glConfig_V_c_empty_n,
        if_read => rotateSliceAllScales_U0_glConfig_V_read);

    xInStream_V_V_U : component fifo_w10_d0_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_xStreamOut_V_V_din,
        if_full_n => xInStream_V_V_full_n,
        if_write => truncateStreamWithCo_U0_xStreamOut_V_V_write,
        if_dout => xInStream_V_V_dout,
        if_empty_n => xInStream_V_V_empty_n,
        if_read => rotateSliceAllScales_U0_xInStream_V_V_read);

    yInStream_V_V_U : component fifo_w10_d0_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_yStreamOut_V_V_din,
        if_full_n => yInStream_V_V_full_n,
        if_write => truncateStreamWithCo_U0_yStreamOut_V_V_write,
        if_dout => yInStream_V_V_dout,
        if_empty_n => yInStream_V_V_empty_n,
        if_read => rotateSliceAllScales_U0_yInStream_V_V_read);

    tsInStream_V_U : component fifo_w32_d0_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_tsStreamOut_V_din,
        if_full_n => tsInStream_V_full_n,
        if_write => truncateStreamWithCo_U0_tsStreamOut_V_write,
        if_dout => tsInStream_V_dout,
        if_empty_n => tsInStream_V_empty_n,
        if_read => rotateSliceAllScales_U0_tsInStream_V_read);

    pktEventDataStream_V_U : component fifo_w96_d70_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_packetEventDataStream_V_V_din,
        if_full_n => pktEventDataStream_V_full_n,
        if_write => truncateStreamWithCo_U0_packetEventDataStream_V_V_write,
        if_dout => pktEventDataStream_V_dout,
        if_empty_n => pktEventDataStream_V_empty_n,
        if_read => Block_proc479_U0_pktEventDataStream_V_V_read);

    select_V_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V_2_din,
        if_full_n => select_V_full_n,
        if_write => truncateStreamWithCo_U0_select_V_2_write,
        if_dout => select_V_dout,
        if_empty_n => select_V_empty_n,
        if_read => rwSlicesScale2WithSe_U0_select_V_read);

    select_V_channel19_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V1_din,
        if_full_n => select_V_channel19_full_n,
        if_write => truncateStreamWithCo_U0_select_V1_write,
        if_dout => select_V_channel19_dout,
        if_empty_n => select_V_channel19_empty_n,
        if_read => colStreamToColSumSca_U0_select_V_read);

    select_V_channel20_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V2_din,
        if_full_n => select_V_channel20_full_n,
        if_write => truncateStreamWithCo_U0_select_V2_write,
        if_dout => select_V_channel20_dout,
        if_empty_n => select_V_channel20_empty_n,
        if_read => accumulateStreamScal_U0_select_V_read);

    select_V_channel21_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V3_din,
        if_full_n => select_V_channel21_full_n,
        if_write => truncateStreamWithCo_U0_select_V3_write,
        if_dout => select_V_channel21_dout,
        if_empty_n => select_V_channel21_empty_n,
        if_read => findStreamMinScale2W_U0_select_V_read);

    select_V_channel22_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V4_din,
        if_full_n => select_V_channel22_full_n,
        if_write => truncateStreamWithCo_U0_select_V4_write,
        if_dout => select_V_channel22_dout,
        if_empty_n => select_V_channel22_empty_n,
        if_read => getInitOffsetForNext_U0_select_V_read);

    select_V_channel23_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V5_din,
        if_full_n => select_V_channel23_full_n,
        if_write => truncateStreamWithCo_U0_select_V5_write,
        if_dout => select_V_channel23_dout,
        if_empty_n => select_V_channel23_empty_n,
        if_read => rwSlicesScale1WithSe_U0_select_V_read);

    select_V_channel24_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V6_din,
        if_full_n => select_V_channel24_full_n,
        if_write => truncateStreamWithCo_U0_select_V6_write,
        if_dout => select_V_channel24_dout,
        if_empty_n => select_V_channel24_empty_n,
        if_read => reOrderStreamScale1W_U0_select_V_read);

    select_V_channel25_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V7_din,
        if_full_n => select_V_channel25_full_n,
        if_write => truncateStreamWithCo_U0_select_V7_write,
        if_dout => select_V_channel25_dout,
        if_empty_n => select_V_channel25_empty_n,
        if_read => colStreamToColSumSca_2_U0_select_V_read);

    select_V_channel26_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V8_din,
        if_full_n => select_V_channel26_full_n,
        if_write => truncateStreamWithCo_U0_select_V8_write,
        if_dout => select_V_channel26_dout,
        if_empty_n => select_V_channel26_empty_n,
        if_read => accumulateStreamScal_2_U0_select_V_read);

    select_V_channel27_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V9_din,
        if_full_n => select_V_channel27_full_n,
        if_write => truncateStreamWithCo_U0_select_V9_write,
        if_dout => select_V_channel27_dout,
        if_empty_n => select_V_channel27_empty_n,
        if_read => findStreamMinScale1W_U0_select_V_read);

    select_V_channel28_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V10_din,
        if_full_n => select_V_channel28_full_n,
        if_write => truncateStreamWithCo_U0_select_V10_write,
        if_dout => select_V_channel28_dout,
        if_empty_n => select_V_channel28_empty_n,
        if_read => getInitOffsetForNext_1_U0_select_V_read);

    select_V_channel29_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V11_din,
        if_full_n => select_V_channel29_full_n,
        if_write => truncateStreamWithCo_U0_select_V11_write,
        if_dout => select_V_channel29_dout,
        if_empty_n => select_V_channel29_empty_n,
        if_read => rwSlicesScale0WithSe_U0_select_V_read);

    select_V_channel30_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V12_din,
        if_full_n => select_V_channel30_full_n,
        if_write => truncateStreamWithCo_U0_select_V12_write,
        if_dout => select_V_channel30_dout,
        if_empty_n => select_V_channel30_empty_n,
        if_read => reOrderStreamScale0W_U0_select_V_read);

    select_V_channel31_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V13_din,
        if_full_n => select_V_channel31_full_n,
        if_write => truncateStreamWithCo_U0_select_V13_write,
        if_dout => select_V_channel31_dout,
        if_empty_n => select_V_channel31_empty_n,
        if_read => colStreamToColSumSca_4_U0_select_V_read);

    select_V_channel32_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V14_din,
        if_full_n => select_V_channel32_full_n,
        if_write => truncateStreamWithCo_U0_select_V14_write,
        if_dout => select_V_channel32_dout,
        if_empty_n => select_V_channel32_empty_n,
        if_read => accumulateStreamScal_4_U0_select_V_read);

    select_V_channel33_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V15_din,
        if_full_n => select_V_channel33_full_n,
        if_write => truncateStreamWithCo_U0_select_V15_write,
        if_dout => select_V_channel33_dout,
        if_empty_n => select_V_channel33_empty_n,
        if_read => findStreamMinScale0W_U0_select_V_read);

    select_V_channel34_U : component fifo_w1_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => truncateStreamWithCo_U0_select_V_din,
        if_full_n => select_V_channel34_full_n,
        if_write => truncateStreamWithCo_U0_select_V_write,
        if_dout => select_V_channel34_dout,
        if_empty_n => select_V_channel34_empty_n,
        if_read => Block_proc479_U0_select_V_read);

    xOutStream_V_V_U : component fifo_w10_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_xOutStream_V_V_din,
        if_full_n => xOutStream_V_V_full_n,
        if_write => rotateSliceAllScales_U0_xOutStream_V_V_write,
        if_dout => xOutStream_V_V_dout,
        if_empty_n => xOutStream_V_V_empty_n,
        if_read => rwSlicesScale0WithSe_U0_xStream_V_V_read);

    yOutStream_V_V_U : component fifo_w10_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_yOutStream_V_V_din,
        if_full_n => yOutStream_V_V_full_n,
        if_write => rotateSliceAllScales_U0_yOutStream_V_V_write,
        if_dout => yOutStream_V_V_dout,
        if_empty_n => yOutStream_V_V_empty_n,
        if_read => rwSlicesScale0WithSe_U0_yStream_V_V_read);

    idxStream_V_V_U : component fifo_w2_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_idxStream_V_V_din,
        if_full_n => idxStream_V_V_full_n,
        if_write => rotateSliceAllScales_U0_idxStream_V_V_write,
        if_dout => idxStream_V_V_dout,
        if_empty_n => idxStream_V_V_empty_n,
        if_read => rwSlicesScale0WithSe_U0_idxStream_V_V_read);

    xOutStreamScale1_V_V_U : component fifo_w10_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_xOutStreamScale1_V_V_din,
        if_full_n => xOutStreamScale1_V_V_full_n,
        if_write => rotateSliceAllScales_U0_xOutStreamScale1_V_V_write,
        if_dout => xOutStreamScale1_V_V_dout,
        if_empty_n => xOutStreamScale1_V_V_empty_n,
        if_read => rwSlicesScale1WithSe_U0_xStream_V_V_read);

    yOutStreamScale1_V_V_U : component fifo_w10_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_yOutStreamScale1_V_V_din,
        if_full_n => yOutStreamScale1_V_V_full_n,
        if_write => rotateSliceAllScales_U0_yOutStreamScale1_V_V_write,
        if_dout => yOutStreamScale1_V_V_dout,
        if_empty_n => yOutStreamScale1_V_V_empty_n,
        if_read => rwSlicesScale1WithSe_U0_yStream_V_V_read);

    idxStreamScale1_V_V_U : component fifo_w2_d10_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_idxStreamScale1_V_V_din,
        if_full_n => idxStreamScale1_V_V_full_n,
        if_write => rotateSliceAllScales_U0_idxStreamScale1_V_V_write,
        if_dout => idxStreamScale1_V_V_dout,
        if_empty_n => idxStreamScale1_V_V_empty_n,
        if_read => rwSlicesScale1WithSe_U0_idxStream_V_V_read);

    xOutStreamScale2_V_V_U : component fifo_w10_d0_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_xOutStreamScale2_V_V_din,
        if_full_n => xOutStreamScale2_V_V_full_n,
        if_write => rotateSliceAllScales_U0_xOutStreamScale2_V_V_write,
        if_dout => xOutStreamScale2_V_V_dout,
        if_empty_n => xOutStreamScale2_V_V_empty_n,
        if_read => rwSlicesScale2WithSe_U0_xStream_V_V_read);

    yOutStreamScale2_V_V_U : component fifo_w10_d0_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_yOutStreamScale2_V_V_din,
        if_full_n => yOutStreamScale2_V_V_full_n,
        if_write => rotateSliceAllScales_U0_yOutStreamScale2_V_V_write,
        if_dout => yOutStreamScale2_V_V_dout,
        if_empty_n => yOutStreamScale2_V_V_empty_n,
        if_read => rwSlicesScale2WithSe_U0_yStream_V_V_read);

    idxStreamScale2_V_V_U : component fifo_w2_d0_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_idxStreamScale2_V_V_din,
        if_full_n => idxStreamScale2_V_V_full_n,
        if_write => rotateSliceAllScales_U0_idxStreamScale2_V_V_write,
        if_dout => idxStreamScale2_V_V_dout,
        if_empty_n => idxStreamScale2_V_V_empty_n,
        if_read => rwSlicesScale2WithSe_U0_idxStream_V_V_read);

    deltaTsHWBak_V_c_U : component fifo_w9_d18_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_deltaTsHWBak_V_out_din,
        if_full_n => deltaTsHWBak_V_c_full_n,
        if_write => rotateSliceAllScales_U0_deltaTsHWBak_V_out_write,
        if_dout => deltaTsHWBak_V_c_dout,
        if_empty_n => deltaTsHWBak_V_c_empty_n,
        if_read => Block_proc479_U0_deltaTsHWBak_V_read);

    glConfig_V_c18_U : component fifo_w32_d18_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_glConfig_V_out_din,
        if_full_n => glConfig_V_c18_full_n,
        if_write => rotateSliceAllScales_U0_glConfig_V_out_write,
        if_dout => glConfig_V_c18_dout,
        if_empty_n => glConfig_V_c18_empty_n,
        if_read => Block_proc479_U0_glConfig_V_read);

    glRotateFlg_V_c_U : component fifo_w1_d18_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_glRotateFlg_V_out_din,
        if_full_n => glRotateFlg_V_c_full_n,
        if_write => rotateSliceAllScales_U0_glRotateFlg_V_out_write,
        if_dout => glRotateFlg_V_c_dout,
        if_empty_n => glRotateFlg_V_c_empty_n,
        if_read => Block_proc479_U0_glRotateFlg_V_read);

    glSFASTAreaCntThrBak_2_U : component fifo_w16_d18_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rotateSliceAllScales_U0_glSFASTAreaCntThrBak_out_din,
        if_full_n => glSFASTAreaCntThrBak_2_full_n,
        if_write => rotateSliceAllScales_U0_glSFASTAreaCntThrBak_out_write,
        if_dout => glSFASTAreaCntThrBak_2_dout,
        if_empty_n => glSFASTAreaCntThrBak_2_empty_n,
        if_read => Block_proc479_U0_glSFASTAreaCntThrBak_read);

    refStreamScale2_V_V_U : component fifo_w52_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rwSlicesScale2WithSe_U0_refStreamOutScale2_V_V_din,
        if_full_n => refStreamScale2_V_V_full_n,
        if_write => rwSlicesScale2WithSe_U0_refStreamOutScale2_V_V_write,
        if_dout => refStreamScale2_V_V_dout,
        if_empty_n => refStreamScale2_V_V_empty_n,
        if_read => colStreamToColSumSca_U0_colStream0_V_V_read);

    tagStreamInScale2_V_s_U : component fifo_w52_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rwSlicesScale2WithSe_U0_tagStreamOutScale2_V_V_din,
        if_full_n => tagStreamInScale2_V_s_full_n,
        if_write => rwSlicesScale2WithSe_U0_tagStreamOutScale2_V_V_write,
        if_dout => tagStreamInScale2_V_s_dout,
        if_empty_n => tagStreamInScale2_V_s_empty_n,
        if_read => colStreamToColSumSca_U0_colStream1_V_V_read);

    outStreamScale2_V_V_U : component fifo_w112_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_U0_outStream_V_V_din,
        if_full_n => outStreamScale2_V_V_full_n,
        if_write => colStreamToColSumSca_U0_outStream_V_V_write,
        if_dout => outStreamScale2_V_V_dout,
        if_empty_n => outStreamScale2_V_V_empty_n,
        if_read => accumulateStreamScal_U0_inStream_V_V_read);

    refZeroCntStreamScal_3_U : component fifo_w6_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_U0_refZeroCntStream_V_V_din,
        if_full_n => refZeroCntStreamScal_3_full_n,
        if_write => colStreamToColSumSca_U0_refZeroCntStream_V_V_write,
        if_dout => refZeroCntStreamScal_3_dout,
        if_empty_n => refZeroCntStreamScal_3_empty_n,
        if_read => accumulateStreamScal_U0_refZeroCntStream_V_V_read);

    tagColValidCntStream_5_U : component fifo_w42_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_U0_tagColValidCntStream_V_V_din,
        if_full_n => tagColValidCntStream_5_full_n,
        if_write => colStreamToColSumSca_U0_tagColValidCntStream_V_V_write,
        if_dout => tagColValidCntStream_5_dout,
        if_empty_n => tagColValidCntStream_5_empty_n,
        if_read => accumulateStreamScal_U0_tagColValidCntStream_V_V_read);

    refTagValidCntStream_5_U : component fifo_w42_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_U0_refTagValidCntStream_V_V_din,
        if_full_n => refTagValidCntStream_5_full_n,
        if_write => colStreamToColSumSca_U0_refTagValidCntStream_V_V_write,
        if_dout => refTagValidCntStream_5_dout,
        if_empty_n => refTagValidCntStream_5_empty_n,
        if_read => accumulateStreamScal_U0_refTagValidCntStream_V_V_read);

    outSumStreamScale2_V_U : component fifo_w16_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => accumulateStreamScal_U0_outStream_V_din,
        if_full_n => outSumStreamScale2_V_full_n,
        if_write => accumulateStreamScal_U0_outStream_V_write,
        if_dout => outSumStreamScale2_V_dout,
        if_empty_n => outSumStreamScale2_V_empty_n,
        if_read => findStreamMinScale2W_U0_inStream_V_read);

    OF_yStreamScale2_V_U : component fifo_w8_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => accumulateStreamScal_U0_OF_yStream_V_din,
        if_full_n => OF_yStreamScale2_V_full_n,
        if_write => accumulateStreamScal_U0_OF_yStream_V_write,
        if_dout => OF_yStreamScale2_V_dout,
        if_empty_n => OF_yStreamScale2_V_empty_n,
        if_read => findStreamMinScale2W_U0_OF_yStream_V_read);

    miniSumStreamScale2_s_U : component fifo_w15_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => findStreamMinScale2W_U0_minStream_V_V_din,
        if_full_n => miniSumStreamScale2_s_full_n,
        if_write => findStreamMinScale2W_U0_minStream_V_V_write,
        if_dout => miniSumStreamScale2_s_dout,
        if_empty_n => miniSumStreamScale2_s_empty_n,
        if_read => getInitOffsetForNext_U0_miniSumStreamScale2_V_V_read);

    OFRetStreamScale2_V_s_U : component fifo_w6_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => findStreamMinScale2W_U0_OFStream_V_V_din,
        if_full_n => OFRetStreamScale2_V_s_full_n,
        if_write => findStreamMinScale2W_U0_OFStream_V_V_write,
        if_dout => OFRetStreamScale2_V_s_dout,
        if_empty_n => OFRetStreamScale2_V_s_empty_n,
        if_read => getInitOffsetForNext_U0_OFRetStreamScale2_V_V_read);

    xInitOffsetScale1Str_2_U : component fifo_w8_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_U0_xInitOffsetScale1Stream_V_V_din,
        if_full_n => xInitOffsetScale1Str_2_full_n,
        if_write => getInitOffsetForNext_U0_xInitOffsetScale1Stream_V_V_write,
        if_dout => xInitOffsetScale1Str_2_dout,
        if_empty_n => xInitOffsetScale1Str_2_empty_n,
        if_read => rwSlicesScale1WithSe_U0_xInitOffsetStream_V_V_read);

    yInitOffsetScale1Str_2_U : component fifo_w8_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_U0_yInitOffsetScale1Stream_V_V_din,
        if_full_n => yInitOffsetScale1Str_2_full_n,
        if_write => getInitOffsetForNext_U0_yInitOffsetScale1Stream_V_V_write,
        if_dout => yInitOffsetScale1Str_2_dout,
        if_empty_n => yInitOffsetScale1Str_2_empty_n,
        if_read => rwSlicesScale1WithSe_U0_yInitOffsetStream_V_V_read);

    xInitOffsetScale1Str_3_U : component fifo_w8_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_U0_xInitOffsetScale1StreamCopy_V_V_din,
        if_full_n => xInitOffsetScale1Str_3_full_n,
        if_write => getInitOffsetForNext_U0_xInitOffsetScale1StreamCopy_V_V_write,
        if_dout => xInitOffsetScale1Str_3_dout,
        if_empty_n => xInitOffsetScale1Str_3_empty_n,
        if_read => getInitOffsetForNext_1_U0_xInitOffsetScale1StreamCopy_V_V_read);

    yInitOffsetScale1Str_3_U : component fifo_w8_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_U0_yInitOffsetScale1StreamCopy_V_V_din,
        if_full_n => yInitOffsetScale1Str_3_full_n,
        if_write => getInitOffsetForNext_U0_yInitOffsetScale1StreamCopy_V_V_write,
        if_dout => yInitOffsetScale1Str_3_dout,
        if_empty_n => yInitOffsetScale1Str_3_empty_n,
        if_read => getInitOffsetForNext_1_U0_yInitOffsetScale1StreamCopy_V_V_read);

    miniSumStreamScale2C_1_U : component fifo_w15_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_U0_miniSumStreamScale2Copy_V_V_din,
        if_full_n => miniSumStreamScale2C_1_full_n,
        if_write => getInitOffsetForNext_U0_miniSumStreamScale2Copy_V_V_write,
        if_dout => miniSumStreamScale2C_1_dout,
        if_empty_n => miniSumStreamScale2C_1_empty_n,
        if_read => Block_proc479_U0_miniSumStreamScale2Copy_V_V_read);

    OFRetStreamScale2Cop_1_U : component fifo_w6_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_U0_OFRetStreamScale2Copy_V_V_din,
        if_full_n => OFRetStreamScale2Cop_1_full_n,
        if_write => getInitOffsetForNext_U0_OFRetStreamScale2Copy_V_V_write,
        if_dout => OFRetStreamScale2Cop_1_dout,
        if_empty_n => OFRetStreamScale2Cop_1_empty_n,
        if_read => Block_proc479_U0_OFRetStreamScale2Copy_V_V_read);

    refStreamScale1_V_V_U : component fifo_w76_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rwSlicesScale1WithSe_U0_refStreamOutScale1_V_V_din,
        if_full_n => refStreamScale1_V_V_full_n,
        if_write => rwSlicesScale1WithSe_U0_refStreamOutScale1_V_V_write,
        if_dout => refStreamScale1_V_V_dout,
        if_empty_n => refStreamScale1_V_V_empty_n,
        if_read => reOrderStreamScale1W_U0_refSingleStreamOut_V_V_read);

    tagStreamInScale1_V_s_U : component fifo_w76_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rwSlicesScale1WithSe_U0_tagStreamOutScale1_V_V_din,
        if_full_n => tagStreamInScale1_V_s_full_n,
        if_write => rwSlicesScale1WithSe_U0_tagStreamOutScale1_V_V_write,
        if_dout => tagStreamInScale1_V_s_dout,
        if_empty_n => tagStreamInScale1_V_s_empty_n,
        if_read => reOrderStreamScale1W_U0_tagSingleStreamOut_V_V_read);

    refNPCStreamScale1_V_U : component fifo_w76_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => reOrderStreamScale1W_U0_refNPCStreamOut_V_V_din,
        if_full_n => refNPCStreamScale1_V_full_n,
        if_write => reOrderStreamScale1W_U0_refNPCStreamOut_V_V_write,
        if_dout => refNPCStreamScale1_V_dout,
        if_empty_n => refNPCStreamScale1_V_empty_n,
        if_read => colStreamToColSumSca_2_U0_colStream0_V_V_read);

    tagNPCStreamInScale1_1_U : component fifo_w76_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => reOrderStreamScale1W_U0_tagNPCStreamOut_V_V_din,
        if_full_n => tagNPCStreamInScale1_1_full_n,
        if_write => reOrderStreamScale1W_U0_tagNPCStreamOut_V_V_write,
        if_dout => tagNPCStreamInScale1_1_dout,
        if_empty_n => tagNPCStreamInScale1_1_empty_n,
        if_read => colStreamToColSumSca_2_U0_colStream1_V_V_read);

    outStreamScale1_V_V_U : component fifo_w112_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_2_U0_outStream_V_V_din,
        if_full_n => outStreamScale1_V_V_full_n,
        if_write => colStreamToColSumSca_2_U0_outStream_V_V_write,
        if_dout => outStreamScale1_V_V_dout,
        if_empty_n => outStreamScale1_V_V_empty_n,
        if_read => accumulateStreamScal_2_U0_inStream_V_V_read);

    refZeroCntStreamScal_2_U : component fifo_w6_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_2_U0_refZeroCntStream_V_V_din,
        if_full_n => refZeroCntStreamScal_2_full_n,
        if_write => colStreamToColSumSca_2_U0_refZeroCntStream_V_V_write,
        if_dout => refZeroCntStreamScal_2_dout,
        if_empty_n => refZeroCntStreamScal_2_empty_n,
        if_read => accumulateStreamScal_2_U0_refZeroCntStream_V_V_read);

    tagColValidCntStream_4_U : component fifo_w42_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_2_U0_tagColValidCntStream_V_V_din,
        if_full_n => tagColValidCntStream_4_full_n,
        if_write => colStreamToColSumSca_2_U0_tagColValidCntStream_V_V_write,
        if_dout => tagColValidCntStream_4_dout,
        if_empty_n => tagColValidCntStream_4_empty_n,
        if_read => accumulateStreamScal_2_U0_tagColValidCntStream_V_V_read);

    refTagValidCntStream_4_U : component fifo_w42_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_2_U0_refTagValidCntStream_V_V_din,
        if_full_n => refTagValidCntStream_4_full_n,
        if_write => colStreamToColSumSca_2_U0_refTagValidCntStream_V_V_write,
        if_dout => refTagValidCntStream_4_dout,
        if_empty_n => refTagValidCntStream_4_empty_n,
        if_read => accumulateStreamScal_2_U0_refTagValidCntStream_V_V_read);

    outSumStreamScale1_V_U : component fifo_w16_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => accumulateStreamScal_2_U0_outStream_V_din,
        if_full_n => outSumStreamScale1_V_full_n,
        if_write => accumulateStreamScal_2_U0_outStream_V_write,
        if_dout => outSumStreamScale1_V_dout,
        if_empty_n => outSumStreamScale1_V_empty_n,
        if_read => findStreamMinScale1W_U0_inStream_V_read);

    OF_yStreamScale1_V_U : component fifo_w8_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => accumulateStreamScal_2_U0_OF_yStream_V_din,
        if_full_n => OF_yStreamScale1_V_full_n,
        if_write => accumulateStreamScal_2_U0_OF_yStream_V_write,
        if_dout => OF_yStreamScale1_V_dout,
        if_empty_n => OF_yStreamScale1_V_empty_n,
        if_read => findStreamMinScale1W_U0_OF_yStream_V_read);

    miniSumStreamScale1_s_U : component fifo_w15_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => findStreamMinScale1W_U0_minStream_V_V_din,
        if_full_n => miniSumStreamScale1_s_full_n,
        if_write => findStreamMinScale1W_U0_minStream_V_V_write,
        if_dout => miniSumStreamScale1_s_dout,
        if_empty_n => miniSumStreamScale1_s_empty_n,
        if_read => getInitOffsetForNext_1_U0_miniSumStreamScale1_V_V_read);

    OFRetStreamScale1_V_s_U : component fifo_w6_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => findStreamMinScale1W_U0_OFStream_V_V_din,
        if_full_n => OFRetStreamScale1_V_s_full_n,
        if_write => findStreamMinScale1W_U0_OFStream_V_V_write,
        if_dout => OFRetStreamScale1_V_s_dout,
        if_empty_n => OFRetStreamScale1_V_s_empty_n,
        if_read => getInitOffsetForNext_1_U0_OFRetStreamScale1_V_V_read);

    xInitOffsetScale0Str_1_U : component fifo_w8_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_1_U0_xInitOffsetScale0Stream_V_V_din,
        if_full_n => xInitOffsetScale0Str_1_full_n,
        if_write => getInitOffsetForNext_1_U0_xInitOffsetScale0Stream_V_V_write,
        if_dout => xInitOffsetScale0Str_1_dout,
        if_empty_n => xInitOffsetScale0Str_1_empty_n,
        if_read => rwSlicesScale0WithSe_U0_xInitOffsetStream_V_V_read);

    yInitOffsetScale0Str_1_U : component fifo_w8_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_1_U0_yInitOffsetScale0Stream_V_V_din,
        if_full_n => yInitOffsetScale0Str_1_full_n,
        if_write => getInitOffsetForNext_1_U0_yInitOffsetScale0Stream_V_V_write,
        if_dout => yInitOffsetScale0Str_1_dout,
        if_empty_n => yInitOffsetScale0Str_1_empty_n,
        if_read => rwSlicesScale0WithSe_U0_yInitOffsetStream_V_V_read);

    miniSumStreamScale1C_1_U : component fifo_w15_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_1_U0_miniSumStreamScale1Copy_V_V_din,
        if_full_n => miniSumStreamScale1C_1_full_n,
        if_write => getInitOffsetForNext_1_U0_miniSumStreamScale1Copy_V_V_write,
        if_dout => miniSumStreamScale1C_1_dout,
        if_empty_n => miniSumStreamScale1C_1_empty_n,
        if_read => Block_proc479_U0_miniSumStreamScale1Copy_V_V_read);

    OFRetStreamScale1Cop_1_U : component fifo_w6_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => getInitOffsetForNext_1_U0_OFRetStreamScale1Copy_V_V_din,
        if_full_n => OFRetStreamScale1Cop_1_full_n,
        if_write => getInitOffsetForNext_1_U0_OFRetStreamScale1Copy_V_V_write,
        if_dout => OFRetStreamScale1Cop_1_dout,
        if_empty_n => OFRetStreamScale1Cop_1_empty_n,
        if_read => Block_proc479_U0_OFRetStreamScale1Copy_V_V_read);

    refStream_V_V_U : component fifo_w124_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rwSlicesScale0WithSe_U0_refSingleStreamOut_V_V_din,
        if_full_n => refStream_V_V_full_n,
        if_write => rwSlicesScale0WithSe_U0_refSingleStreamOut_V_V_write,
        if_dout => refStream_V_V_dout,
        if_empty_n => refStream_V_V_empty_n,
        if_read => reOrderStreamScale0W_U0_refSingleStreamOut_V_V_read);

    tagStreamIn_V_V_U : component fifo_w124_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => rwSlicesScale0WithSe_U0_tagSingleStreamOut_V_V_din,
        if_full_n => tagStreamIn_V_V_full_n,
        if_write => rwSlicesScale0WithSe_U0_tagSingleStreamOut_V_V_write,
        if_dout => tagStreamIn_V_V_dout,
        if_empty_n => tagStreamIn_V_V_empty_n,
        if_read => reOrderStreamScale0W_U0_tagSingleStreamOut_V_V_read);

    refNPCStream_V_V_U : component fifo_w372_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => reOrderStreamScale0W_U0_refNPCStreamOut_V_V_din,
        if_full_n => refNPCStream_V_V_full_n,
        if_write => reOrderStreamScale0W_U0_refNPCStreamOut_V_V_write,
        if_dout => refNPCStream_V_V_dout,
        if_empty_n => refNPCStream_V_V_empty_n,
        if_read => colStreamToColSumSca_4_U0_colStream0_V_V_read);

    tagNPCStreamIn_V_V_U : component fifo_w372_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => reOrderStreamScale0W_U0_tagNPCStreamOut_V_V_din,
        if_full_n => tagNPCStreamIn_V_V_full_n,
        if_write => reOrderStreamScale0W_U0_tagNPCStreamOut_V_V_write,
        if_dout => tagNPCStreamIn_V_V_dout,
        if_empty_n => tagNPCStreamIn_V_V_empty_n,
        if_read => colStreamToColSumSca_4_U0_colStream1_V_V_read);

    outStream_V_V_U : component fifo_w336_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_4_U0_outStream_V_V_din,
        if_full_n => outStream_V_V_full_n,
        if_write => colStreamToColSumSca_4_U0_outStream_V_V_write,
        if_dout => outStream_V_V_dout,
        if_empty_n => outStream_V_V_empty_n,
        if_read => accumulateStreamScal_4_U0_inStream_V_V_read);

    refZeroCntStream_V_V_U : component fifo_w18_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_4_U0_refZeroCntStream_V_V_din,
        if_full_n => refZeroCntStream_V_V_full_n,
        if_write => colStreamToColSumSca_4_U0_refZeroCntStream_V_V_write,
        if_dout => refZeroCntStream_V_V_dout,
        if_empty_n => refZeroCntStream_V_V_empty_n,
        if_read => accumulateStreamScal_4_U0_refZeroCntStream_V_V_read);

    tagColValidCntStream_3_U : component fifo_w126_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_4_U0_tagColValidCntStream_V_V_din,
        if_full_n => tagColValidCntStream_3_full_n,
        if_write => colStreamToColSumSca_4_U0_tagColValidCntStream_V_V_write,
        if_dout => tagColValidCntStream_3_dout,
        if_empty_n => tagColValidCntStream_3_empty_n,
        if_read => accumulateStreamScal_4_U0_tagColValidCntStream_V_V_read);

    refTagValidCntStream_3_U : component fifo_w126_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => colStreamToColSumSca_4_U0_refTagValidCntStream_V_V_din,
        if_full_n => refTagValidCntStream_3_full_n,
        if_write => colStreamToColSumSca_4_U0_refTagValidCntStream_V_V_write,
        if_dout => refTagValidCntStream_3_dout,
        if_empty_n => refTagValidCntStream_3_empty_n,
        if_read => accumulateStreamScal_4_U0_refTagValidCntStream_V_V_read);

    outSumStream_V_U : component fifo_w16_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => accumulateStreamScal_4_U0_outStream_V_din,
        if_full_n => outSumStream_V_full_n,
        if_write => accumulateStreamScal_4_U0_outStream_V_write,
        if_dout => outSumStream_V_dout,
        if_empty_n => outSumStream_V_empty_n,
        if_read => findStreamMinScale0W_U0_inStream_V_read);

    OF_yStream_V_U : component fifo_w8_d20_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => accumulateStreamScal_4_U0_OF_yStream_V_din,
        if_full_n => OF_yStream_V_full_n,
        if_write => accumulateStreamScal_4_U0_OF_yStream_V_write,
        if_dout => OF_yStream_V_dout,
        if_empty_n => OF_yStream_V_empty_n,
        if_read => findStreamMinScale0W_U0_OF_yStream_V_read);

    miniSumStreamScale0_s_U : component fifo_w15_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => findStreamMinScale0W_U0_minStream_V_V_din,
        if_full_n => miniSumStreamScale0_s_full_n,
        if_write => findStreamMinScale0W_U0_minStream_V_V_write,
        if_dout => miniSumStreamScale0_s_dout,
        if_empty_n => miniSumStreamScale0_s_empty_n,
        if_read => Block_proc479_U0_miniSumStreamScale0_V_V_read);

    OFRetStreamScale0_V_s_U : component fifo_w6_d30_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => findStreamMinScale0W_U0_OFStream_V_V_din,
        if_full_n => OFRetStreamScale0_V_s_full_n,
        if_write => findStreamMinScale0W_U0_OFStream_V_V_write,
        if_dout => OFRetStreamScale0_V_s_dout,
        if_empty_n => OFRetStreamScale0_V_s_empty_n,
        if_read => Block_proc479_U0_OFRetStreamScale0_V_V_read);

    start_for_EVABMOF2iS_U : component start_for_EVABMOF2iS
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_EVABMOFStreamWithCon_1_U0_din,
        if_full_n => start_for_EVABMOFStreamWithCon_1_U0_full_n,
        if_write => EVABMOFStreamWithCon_2_U0_start_write,
        if_dout => start_for_EVABMOFStreamWithCon_1_U0_dout,
        if_empty_n => start_for_EVABMOFStreamWithCon_1_U0_empty_n,
        if_read => EVABMOFStreamWithCon_1_U0_ap_ready);

    start_for_Block_p3i2_U : component start_for_Block_p3i2
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_proc_U0_din,
        if_full_n => start_for_Block_proc_U0_full_n,
        if_write => EVABMOFStreamWithCon_1_U0_start_write,
        if_dout => start_for_Block_proc_U0_dout,
        if_empty_n => start_for_Block_proc_U0_empty_n,
        if_read => Block_proc_U0_ap_ready);

    start_for_rotateS4jc_U : component start_for_rotateS4jc
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_rotateSliceAllScales_U0_din,
        if_full_n => start_for_rotateSliceAllScales_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_rotateSliceAllScales_U0_dout,
        if_empty_n => start_for_rotateSliceAllScales_U0_empty_n,
        if_read => rotateSliceAllScales_U0_ap_ready);

    start_for_rwSlice5jm_U : component start_for_rwSlice5jm
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_rwSlicesScale2WithSe_U0_din,
        if_full_n => start_for_rwSlicesScale2WithSe_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_rwSlicesScale2WithSe_U0_dout,
        if_empty_n => start_for_rwSlicesScale2WithSe_U0_empty_n,
        if_read => rwSlicesScale2WithSe_U0_ap_ready);

    start_for_colStre6jw_U : component start_for_colStre6jw
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_colStreamToColSumSca_U0_din,
        if_full_n => start_for_colStreamToColSumSca_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_colStreamToColSumSca_U0_dout,
        if_empty_n => start_for_colStreamToColSumSca_U0_empty_n,
        if_read => colStreamToColSumSca_U0_ap_ready);

    start_for_accumul7jG_U : component start_for_accumul7jG
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_accumulateStreamScal_U0_din,
        if_full_n => start_for_accumulateStreamScal_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_accumulateStreamScal_U0_dout,
        if_empty_n => start_for_accumulateStreamScal_U0_empty_n,
        if_read => accumulateStreamScal_U0_ap_ready);

    start_for_findStr8jQ_U : component start_for_findStr8jQ
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_findStreamMinScale2W_U0_din,
        if_full_n => start_for_findStreamMinScale2W_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_findStreamMinScale2W_U0_dout,
        if_empty_n => start_for_findStreamMinScale2W_U0_empty_n,
        if_read => findStreamMinScale2W_U0_ap_ready);

    start_for_getInit9j0_U : component start_for_getInit9j0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_getInitOffsetForNext_U0_din,
        if_full_n => start_for_getInitOffsetForNext_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_getInitOffsetForNext_U0_dout,
        if_empty_n => start_for_getInitOffsetForNext_U0_empty_n,
        if_read => getInitOffsetForNext_U0_ap_ready);

    start_for_rwSlicebak_U : component start_for_rwSlicebak
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_rwSlicesScale1WithSe_U0_din,
        if_full_n => start_for_rwSlicesScale1WithSe_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_rwSlicesScale1WithSe_U0_dout,
        if_empty_n => start_for_rwSlicesScale1WithSe_U0_empty_n,
        if_read => rwSlicesScale1WithSe_U0_ap_ready);

    start_for_reOrderbbk_U : component start_for_reOrderbbk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_reOrderStreamScale1W_U0_din,
        if_full_n => start_for_reOrderStreamScale1W_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_reOrderStreamScale1W_U0_dout,
        if_empty_n => start_for_reOrderStreamScale1W_U0_empty_n,
        if_read => reOrderStreamScale1W_U0_ap_ready);

    start_for_colStrebck_U : component start_for_colStrebck
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_colStreamToColSumSca_2_U0_din,
        if_full_n => start_for_colStreamToColSumSca_2_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_colStreamToColSumSca_2_U0_dout,
        if_empty_n => start_for_colStreamToColSumSca_2_U0_empty_n,
        if_read => colStreamToColSumSca_2_U0_ap_ready);

    start_for_accumulbdk_U : component start_for_accumulbdk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_accumulateStreamScal_2_U0_din,
        if_full_n => start_for_accumulateStreamScal_2_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_accumulateStreamScal_2_U0_dout,
        if_empty_n => start_for_accumulateStreamScal_2_U0_empty_n,
        if_read => accumulateStreamScal_2_U0_ap_ready);

    start_for_findStrbek_U : component start_for_findStrbek
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_findStreamMinScale1W_U0_din,
        if_full_n => start_for_findStreamMinScale1W_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_findStreamMinScale1W_U0_dout,
        if_empty_n => start_for_findStreamMinScale1W_U0_empty_n,
        if_read => findStreamMinScale1W_U0_ap_ready);

    start_for_getInitbfk_U : component start_for_getInitbfk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_getInitOffsetForNext_1_U0_din,
        if_full_n => start_for_getInitOffsetForNext_1_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_getInitOffsetForNext_1_U0_dout,
        if_empty_n => start_for_getInitOffsetForNext_1_U0_empty_n,
        if_read => getInitOffsetForNext_1_U0_ap_ready);

    start_for_rwSlicebgk_U : component start_for_rwSlicebgk
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_rwSlicesScale0WithSe_U0_din,
        if_full_n => start_for_rwSlicesScale0WithSe_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_rwSlicesScale0WithSe_U0_dout,
        if_empty_n => start_for_rwSlicesScale0WithSe_U0_empty_n,
        if_read => rwSlicesScale0WithSe_U0_ap_ready);

    start_for_reOrderbhl_U : component start_for_reOrderbhl
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_reOrderStreamScale0W_U0_din,
        if_full_n => start_for_reOrderStreamScale0W_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_reOrderStreamScale0W_U0_dout,
        if_empty_n => start_for_reOrderStreamScale0W_U0_empty_n,
        if_read => reOrderStreamScale0W_U0_ap_ready);

    start_for_colStrebil_U : component start_for_colStrebil
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_colStreamToColSumSca_4_U0_din,
        if_full_n => start_for_colStreamToColSumSca_4_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_colStreamToColSumSca_4_U0_dout,
        if_empty_n => start_for_colStreamToColSumSca_4_U0_empty_n,
        if_read => colStreamToColSumSca_4_U0_ap_ready);

    start_for_accumulbjl_U : component start_for_accumulbjl
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_accumulateStreamScal_4_U0_din,
        if_full_n => start_for_accumulateStreamScal_4_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_accumulateStreamScal_4_U0_dout,
        if_empty_n => start_for_accumulateStreamScal_4_U0_empty_n,
        if_read => accumulateStreamScal_4_U0_ap_ready);

    start_for_findStrbkl_U : component start_for_findStrbkl
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_findStreamMinScale0W_U0_din,
        if_full_n => start_for_findStreamMinScale0W_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_findStreamMinScale0W_U0_dout,
        if_empty_n => start_for_findStreamMinScale0W_U0_empty_n,
        if_read => findStreamMinScale0W_U0_ap_ready);

    start_for_Block_pbll_U : component start_for_Block_pbll
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_proc479_U0_din,
        if_full_n => start_for_Block_proc479_U0_full_n,
        if_write => truncateStreamWithCo_U0_start_write,
        if_dout => start_for_Block_proc479_U0_dout,
        if_empty_n => start_for_Block_proc479_U0_empty_n,
        if_read => Block_proc479_U0_ap_ready);





    ap_sync_reg_EVABMOFStreamWithCon_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_EVABMOFStreamWithCon_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_EVABMOFStreamWithCon_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_EVABMOFStreamWithCon_2_U0_ap_ready <= ap_sync_EVABMOFStreamWithCon_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_truncateStreamWithCo_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_truncateStreamWithCo_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_truncateStreamWithCo_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_truncateStreamWithCo_U0_ap_ready <= ap_sync_truncateStreamWithCo_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    EVABMOFStreamWithCon_2_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = EVABMOFStreamWithCon_2_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                EVABMOFStreamWithCon_2_U0_ap_ready_count <= std_logic_vector(unsigned(EVABMOFStreamWithCon_2_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = EVABMOFStreamWithCon_2_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                EVABMOFStreamWithCon_2_U0_ap_ready_count <= std_logic_vector(unsigned(EVABMOFStreamWithCon_2_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    truncateStreamWithCo_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (truncateStreamWithCo_U0_ap_ready = ap_const_logic_0))) then 
                truncateStreamWithCo_U0_ap_ready_count <= std_logic_vector(unsigned(truncateStreamWithCo_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((truncateStreamWithCo_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                truncateStreamWithCo_U0_ap_ready_count <= std_logic_vector(unsigned(truncateStreamWithCo_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    Block_proc479_U0_ap_continue <= ap_const_logic_1;
    Block_proc479_U0_ap_start <= start_for_Block_proc479_U0_empty_n;
    Block_proc479_U0_start_full_n <= ap_const_logic_1;
    Block_proc479_U0_start_write <= ap_const_logic_0;
    Block_proc_U0_ap_continue <= ap_const_logic_1;
    Block_proc_U0_ap_start <= start_for_Block_proc_U0_empty_n;
    Block_proc_U0_start_full_n <= ap_const_logic_1;
    Block_proc_U0_start_write <= ap_const_logic_0;
    EVABMOFStreamWithCon_1_U0_ap_continue <= ap_const_logic_1;
    EVABMOFStreamWithCon_1_U0_ap_start <= start_for_EVABMOFStreamWithCon_1_U0_empty_n;
    EVABMOFStreamWithCon_2_U0_ap_continue <= ap_const_logic_1;
    EVABMOFStreamWithCon_2_U0_ap_start <= ((ap_sync_reg_EVABMOFStreamWithCon_2_U0_ap_ready xor ap_const_logic_1) and ap_start);
    accumulateStreamScal_2_U0_ap_continue <= ap_const_logic_1;
    accumulateStreamScal_2_U0_ap_start <= start_for_accumulateStreamScal_2_U0_empty_n;
    accumulateStreamScal_2_U0_start_full_n <= ap_const_logic_1;
    accumulateStreamScal_2_U0_start_write <= ap_const_logic_0;
    accumulateStreamScal_4_U0_ap_continue <= ap_const_logic_1;
    accumulateStreamScal_4_U0_ap_start <= start_for_accumulateStreamScal_4_U0_empty_n;
    accumulateStreamScal_4_U0_start_full_n <= ap_const_logic_1;
    accumulateStreamScal_4_U0_start_write <= ap_const_logic_0;
    accumulateStreamScal_U0_ap_continue <= ap_const_logic_1;
    accumulateStreamScal_U0_ap_start <= start_for_accumulateStreamScal_U0_empty_n;
    accumulateStreamScal_U0_start_full_n <= ap_const_logic_1;
    accumulateStreamScal_U0_start_write <= ap_const_logic_0;
    ap_done <= Block_proc479_U0_ap_done;
    ap_idle <= (truncateStreamWithCo_U0_ap_idle and rwSlicesScale2WithSe_U0_ap_idle and rwSlicesScale1WithSe_U0_ap_idle and rwSlicesScale0WithSe_U0_ap_idle and rotateSliceAllScales_U0_ap_idle and reOrderStreamScale1W_U0_ap_idle and reOrderStreamScale0W_U0_ap_idle and getInitOffsetForNext_U0_ap_idle and getInitOffsetForNext_1_U0_ap_idle and findStreamMinScale2W_U0_ap_idle and findStreamMinScale1W_U0_ap_idle and findStreamMinScale0W_U0_ap_idle and colStreamToColSumSca_U0_ap_idle and colStreamToColSumSca_4_U0_ap_idle and colStreamToColSumSca_2_U0_ap_idle and accumulateStreamScal_U0_ap_idle and accumulateStreamScal_4_U0_ap_idle and accumulateStreamScal_2_U0_ap_idle and EVABMOFStreamWithCon_2_U0_ap_idle and EVABMOFStreamWithCon_1_U0_ap_idle and Block_proc_U0_ap_idle and Block_proc479_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_EVABMOFStreamWithCon_2_U0_ap_ready <= (ap_sync_reg_EVABMOFStreamWithCon_2_U0_ap_ready or EVABMOFStreamWithCon_2_U0_ap_ready);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= Block_proc479_U0_ap_done;
    ap_sync_ready <= (ap_sync_truncateStreamWithCo_U0_ap_ready and ap_sync_EVABMOFStreamWithCon_2_U0_ap_ready);
    ap_sync_truncateStreamWithCo_U0_ap_ready <= (truncateStreamWithCo_U0_ap_ready or ap_sync_reg_truncateStreamWithCo_U0_ap_ready);
    colStreamToColSumSca_2_U0_ap_continue <= ap_const_logic_1;
    colStreamToColSumSca_2_U0_ap_start <= start_for_colStreamToColSumSca_2_U0_empty_n;
    colStreamToColSumSca_2_U0_start_full_n <= ap_const_logic_1;
    colStreamToColSumSca_2_U0_start_write <= ap_const_logic_0;
    colStreamToColSumSca_4_U0_ap_continue <= ap_const_logic_1;
    colStreamToColSumSca_4_U0_ap_start <= start_for_colStreamToColSumSca_4_U0_empty_n;
    colStreamToColSumSca_4_U0_start_full_n <= ap_const_logic_1;
    colStreamToColSumSca_4_U0_start_write <= ap_const_logic_0;
    colStreamToColSumSca_U0_ap_continue <= ap_const_logic_1;
    colStreamToColSumSca_U0_ap_start <= start_for_colStreamToColSumSca_U0_empty_n;
    colStreamToColSumSca_U0_start_full_n <= ap_const_logic_1;
    colStreamToColSumSca_U0_start_write <= ap_const_logic_0;
    controlStreamIn_V_V_TREADY <= truncateStreamWithCo_U0_controlStreamIn_V_V_TREADY;
    findStreamMinScale0W_U0_ap_continue <= ap_const_logic_1;
    findStreamMinScale0W_U0_ap_start <= start_for_findStreamMinScale0W_U0_empty_n;
    findStreamMinScale0W_U0_start_full_n <= ap_const_logic_1;
    findStreamMinScale0W_U0_start_write <= ap_const_logic_0;
    findStreamMinScale1W_U0_ap_continue <= ap_const_logic_1;
    findStreamMinScale1W_U0_ap_start <= start_for_findStreamMinScale1W_U0_empty_n;
    findStreamMinScale1W_U0_start_full_n <= ap_const_logic_1;
    findStreamMinScale1W_U0_start_write <= ap_const_logic_0;
    findStreamMinScale2W_U0_ap_continue <= ap_const_logic_1;
    findStreamMinScale2W_U0_ap_start <= start_for_findStreamMinScale2W_U0_empty_n;
    findStreamMinScale2W_U0_start_full_n <= ap_const_logic_1;
    findStreamMinScale2W_U0_start_write <= ap_const_logic_0;
    getInitOffsetForNext_1_U0_ap_continue <= ap_const_logic_1;
    getInitOffsetForNext_1_U0_ap_start <= start_for_getInitOffsetForNext_1_U0_empty_n;
    getInitOffsetForNext_1_U0_start_full_n <= ap_const_logic_1;
    getInitOffsetForNext_1_U0_start_write <= ap_const_logic_0;
    getInitOffsetForNext_U0_ap_continue <= ap_const_logic_1;
    getInitOffsetForNext_U0_ap_start <= start_for_getInitOffsetForNext_U0_empty_n;
    getInitOffsetForNext_U0_start_full_n <= ap_const_logic_1;
    getInitOffsetForNext_U0_start_write <= ap_const_logic_0;
    pixelDataStream_V_V_TDATA <= Block_proc479_U0_pixelDataStream_V_V_TDATA;
    pixelDataStream_V_V_TVALID <= Block_proc479_U0_pixelDataStream_V_V_TVALID;
    polStreamIn_V_V_TREADY <= truncateStreamWithCo_U0_polStreamIn_V_V_TREADY;
    polStreamOut_V_V_TDATA <= Block_proc479_U0_polStreamOut_V_V_TDATA;
    polStreamOut_V_V_TVALID <= Block_proc479_U0_polStreamOut_V_V_TVALID;
    reOrderStreamScale0W_U0_ap_continue <= ap_const_logic_1;
    reOrderStreamScale0W_U0_ap_start <= start_for_reOrderStreamScale0W_U0_empty_n;
    reOrderStreamScale0W_U0_start_full_n <= ap_const_logic_1;
    reOrderStreamScale0W_U0_start_write <= ap_const_logic_0;
    reOrderStreamScale1W_U0_ap_continue <= ap_const_logic_1;
    reOrderStreamScale1W_U0_ap_start <= start_for_reOrderStreamScale1W_U0_empty_n;
    reOrderStreamScale1W_U0_start_full_n <= ap_const_logic_1;
    reOrderStreamScale1W_U0_start_write <= ap_const_logic_0;
    rotateSliceAllScales_U0_ap_continue <= ap_const_logic_1;
    rotateSliceAllScales_U0_ap_start <= start_for_rotateSliceAllScales_U0_empty_n;
    rotateSliceAllScales_U0_start_full_n <= ap_const_logic_1;
    rotateSliceAllScales_U0_start_write <= ap_const_logic_0;
    rwSlicesScale0WithSe_U0_ap_continue <= ap_const_logic_1;
    rwSlicesScale0WithSe_U0_ap_start <= start_for_rwSlicesScale0WithSe_U0_empty_n;
    rwSlicesScale0WithSe_U0_start_full_n <= ap_const_logic_1;
    rwSlicesScale0WithSe_U0_start_write <= ap_const_logic_0;
    rwSlicesScale1WithSe_U0_ap_continue <= ap_const_logic_1;
    rwSlicesScale1WithSe_U0_ap_start <= start_for_rwSlicesScale1WithSe_U0_empty_n;
    rwSlicesScale1WithSe_U0_start_full_n <= ap_const_logic_1;
    rwSlicesScale1WithSe_U0_start_write <= ap_const_logic_0;
    rwSlicesScale2WithSe_U0_ap_continue <= ap_const_logic_1;
    rwSlicesScale2WithSe_U0_ap_start <= start_for_rwSlicesScale2WithSe_U0_empty_n;
    rwSlicesScale2WithSe_U0_start_full_n <= ap_const_logic_1;
    rwSlicesScale2WithSe_U0_start_write <= ap_const_logic_0;
    start_for_Block_proc479_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_EVABMOFStreamWithCon_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_accumulateStreamScal_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_accumulateStreamScal_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_accumulateStreamScal_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_colStreamToColSumSca_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_colStreamToColSumSca_4_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_colStreamToColSumSca_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_findStreamMinScale0W_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_findStreamMinScale1W_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_findStreamMinScale2W_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_getInitOffsetForNext_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_getInitOffsetForNext_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_reOrderStreamScale0W_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_reOrderStreamScale1W_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_rotateSliceAllScales_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_rwSlicesScale0WithSe_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_rwSlicesScale1WithSe_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_rwSlicesScale2WithSe_U0_din <= (0=>ap_const_logic_1, others=>'-');
    truncateStreamWithCo_U0_ap_continue <= ap_const_logic_1;
    truncateStreamWithCo_U0_ap_start <= ((ap_sync_reg_truncateStreamWithCo_U0_ap_ready xor ap_const_logic_1) and ap_start);
    truncateStreamWithCo_U0_start_full_n <= (start_for_rwSlicesScale2WithSe_U0_full_n and start_for_rwSlicesScale1WithSe_U0_full_n and start_for_rwSlicesScale0WithSe_U0_full_n and start_for_rotateSliceAllScales_U0_full_n and start_for_reOrderStreamScale1W_U0_full_n and start_for_reOrderStreamScale0W_U0_full_n and start_for_getInitOffsetForNext_U0_full_n and start_for_getInitOffsetForNext_1_U0_full_n and start_for_findStreamMinScale2W_U0_full_n and start_for_findStreamMinScale1W_U0_full_n and start_for_findStreamMinScale0W_U0_full_n and start_for_colStreamToColSumSca_U0_full_n and start_for_colStreamToColSumSca_4_U0_full_n and start_for_colStreamToColSumSca_2_U0_full_n and start_for_accumulateStreamScal_U0_full_n and start_for_accumulateStreamScal_4_U0_full_n and start_for_accumulateStreamScal_2_U0_full_n and start_for_Block_proc479_U0_full_n);
    tsStreamIn_V_V_TREADY <= truncateStreamWithCo_U0_tsStreamIn_V_V_TREADY;
    tsStreamOut_V_V_TDATA <= Block_proc479_U0_tsStreamOut_V_V_TDATA;
    tsStreamOut_V_V_TVALID <= Block_proc479_U0_tsStreamOut_V_V_TVALID;
    xStreamIn_V_V_TREADY <= truncateStreamWithCo_U0_xStreamIn_V_V_TREADY;
    xStreamOut_V_V_TDATA <= Block_proc479_U0_xStreamOut_V_V_TDATA;
    xStreamOut_V_V_TVALID <= Block_proc479_U0_xStreamOut_V_V_TVALID;
    yStreamIn_V_V_TREADY <= truncateStreamWithCo_U0_yStreamIn_V_V_TREADY;
    yStreamOut_V_V_TDATA <= Block_proc479_U0_yStreamOut_V_V_TDATA;
    yStreamOut_V_V_TVALID <= Block_proc479_U0_yStreamOut_V_V_TVALID;
end behav;

-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity colStreamToColSumSca_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    colStream1_V_V_dout : IN STD_LOGIC_VECTOR (51 downto 0);
    colStream1_V_V_empty_n : IN STD_LOGIC;
    colStream1_V_V_read : OUT STD_LOGIC;
    colStream0_V_V_dout : IN STD_LOGIC_VECTOR (51 downto 0);
    colStream0_V_V_empty_n : IN STD_LOGIC;
    colStream0_V_V_read : OUT STD_LOGIC;
    refZeroCntStream_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    refZeroCntStream_V_V_full_n : IN STD_LOGIC;
    refZeroCntStream_V_V_write : OUT STD_LOGIC;
    outStream_V_V_din : OUT STD_LOGIC_VECTOR (111 downto 0);
    outStream_V_V_full_n : IN STD_LOGIC;
    outStream_V_V_write : OUT STD_LOGIC;
    tagColValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (41 downto 0);
    tagColValidCntStream_V_V_full_n : IN STD_LOGIC;
    tagColValidCntStream_V_V_write : OUT STD_LOGIC;
    refTagValidCntStream_V_V_din : OUT STD_LOGIC_VECTOR (41 downto 0);
    refTagValidCntStream_V_V_full_n : IN STD_LOGIC;
    refTagValidCntStream_V_V_write : OUT STD_LOGIC );
end;


architecture behav of colStreamToColSumSca_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exitcond_flatten_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_857 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_866 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op65_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter5 : BOOLEAN;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal colStream0_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal colStream1_V_V_blk_n : STD_LOGIC;
    signal outStream_V_V_blk_n : STD_LOGIC;
    signal refZeroCntStream_V_V_blk_n : STD_LOGIC;
    signal tagColValidCntStream_V_V_blk_n : STD_LOGIC;
    signal refTagValidCntStream_V_V_blk_n : STD_LOGIC;
    signal exitcond_reg_255 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_reg_269 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_283 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_reg_297 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_mid2_fu_383_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_mid2_reg_844 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_cast_mid2_v_fu_391_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_cast_mid2_v_reg_851 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_857_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_405_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next_reg_861 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_cond_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_1_fu_429_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_1_reg_870 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond1_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_880 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_880_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_880_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_880_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_880_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal colData0_V_q0 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal colData1_V_q0 : STD_LOGIC_VECTOR (51 downto 0);
    signal out_reg_914 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_1_reg_919 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_2_reg_924 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_3_reg_929 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_4_reg_934 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_5_reg_939 : STD_LOGIC_VECTOR (15 downto 0);
    signal out_6_reg_944 : STD_LOGIC_VECTOR (15 downto 0);
    signal refColZeroCnt_V_reg_949 : STD_LOGIC_VECTOR (5 downto 0);
    signal tagColValidCnt_reg_954 : STD_LOGIC_VECTOR (5 downto 0);
    signal tagColValidCnt_1_reg_959 : STD_LOGIC_VECTOR (5 downto 0);
    signal tagColValidCnt_2_reg_964 : STD_LOGIC_VECTOR (5 downto 0);
    signal tagColValidCnt_3_reg_969 : STD_LOGIC_VECTOR (5 downto 0);
    signal tagColValidCnt_4_reg_974 : STD_LOGIC_VECTOR (5 downto 0);
    signal tagColValidCnt_5_reg_979 : STD_LOGIC_VECTOR (5 downto 0);
    signal tagColValidCnt_6_reg_984 : STD_LOGIC_VECTOR (5 downto 0);
    signal refTagValidPixCnt_reg_989 : STD_LOGIC_VECTOR (5 downto 0);
    signal refTagValidPixCnt_1_reg_994 : STD_LOGIC_VECTOR (5 downto 0);
    signal refTagValidPixCnt_2_reg_999 : STD_LOGIC_VECTOR (5 downto 0);
    signal refTagValidPixCnt_3_reg_1004 : STD_LOGIC_VECTOR (5 downto 0);
    signal refTagValidPixCnt_4_reg_1009 : STD_LOGIC_VECTOR (5 downto 0);
    signal refTagValidPixCnt_5_reg_1014 : STD_LOGIC_VECTOR (5 downto 0);
    signal refTagValidPixCnt_6_reg_1019 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal colData0_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal colData0_V_ce0 : STD_LOGIC;
    signal colData0_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal colData0_V_ce1 : STD_LOGIC;
    signal colData0_V_we1 : STD_LOGIC;
    signal colData1_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal colData1_V_ce0 : STD_LOGIC;
    signal colData1_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal colData1_V_ce1 : STD_LOGIC;
    signal colData1_V_we1 : STD_LOGIC;
    signal grp_colSADSumScale2_fu_329_t1Col_3_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t1Col_4_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t1Col_5_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t1Col_6_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t1Col_7_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t1Col_8_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t1Col_9_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_1_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_2_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_3_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_4_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_5_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_6_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_7_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_8_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_9_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_10_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_11_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_t2Col_12_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_colSADSumScale2_fu_329_ap_ce : STD_LOGIC;
    signal grp_colZeroCntScale2_fu_353_t1Col_3_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t1Col_4_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t1Col_5_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t1Col_6_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t1Col_7_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t1Col_8_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t1Col_9_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_1_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_2_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_3_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_4_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_5_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_6_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_7_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_8_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_9_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_10_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_11_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_t2Col_12_V_read : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_3 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_4 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_5 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_6 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_7 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_8 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_9 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_10 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_11 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_12 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_13 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_return_14 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_colZeroCntScale2_fu_353_ap_ce : STD_LOGIC;
    signal ap_phi_mux_exitcond_phi_fu_259_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_k_phi_fu_273_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_i_phi_fu_287_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_301_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_74_reg_311 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_74_reg_311 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_74_reg_311 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_74_reg_311 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_s_reg_320 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_s_reg_320 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_s_reg_320 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_s_reg_320 : STD_LOGIC_VECTOR (51 downto 0);
    signal in2_0_V_fu_522_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_53_fu_497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_54_fu_502_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_512_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal i_1_fu_377_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_50_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_cast_fu_488_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_52_fu_491_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_cast_mid2_fu_485_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_55_fu_506_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_104 : BOOLEAN;
    signal ap_condition_167 : BOOLEAN;

    component colSADSumScale2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t1Col_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_4_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_5_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_6_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_7_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_8_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_9_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_0_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_1_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_2_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_4_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_5_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_6_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_7_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_8_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_9_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_10_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_11_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_12_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component colZeroCntScale2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t1Col_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_4_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_5_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_6_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_7_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_8_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t1Col_9_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_0_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_1_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_2_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_4_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_5_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_6_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_7_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_8_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_9_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_10_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_11_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        t2Col_12_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (5 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component colStreamToColSumNgs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (51 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component colStreamToColSumOgC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (51 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (51 downto 0) );
    end component;



begin
    colData0_V_U : component colStreamToColSumNgs
    generic map (
        DataWidth => 52,
        AddressRange => 7,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => colData0_V_address0,
        ce0 => colData0_V_ce0,
        q0 => colData0_V_q0,
        address1 => colData0_V_address1,
        ce1 => colData0_V_ce1,
        we1 => colData0_V_we1,
        d1 => colStream0_V_V_dout);

    colData1_V_U : component colStreamToColSumOgC
    generic map (
        DataWidth => 52,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => colData1_V_address0,
        ce0 => colData1_V_ce0,
        q0 => colData1_V_q0,
        address1 => colData1_V_address1,
        ce1 => colData1_V_ce1,
        we1 => colData1_V_we1,
        d1 => colStream1_V_V_dout);

    grp_colSADSumScale2_fu_329 : component colSADSumScale2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        t1Col_3_V_read => grp_colSADSumScale2_fu_329_t1Col_3_V_read,
        t1Col_4_V_read => grp_colSADSumScale2_fu_329_t1Col_4_V_read,
        t1Col_5_V_read => grp_colSADSumScale2_fu_329_t1Col_5_V_read,
        t1Col_6_V_read => grp_colSADSumScale2_fu_329_t1Col_6_V_read,
        t1Col_7_V_read => grp_colSADSumScale2_fu_329_t1Col_7_V_read,
        t1Col_8_V_read => grp_colSADSumScale2_fu_329_t1Col_8_V_read,
        t1Col_9_V_read => grp_colSADSumScale2_fu_329_t1Col_9_V_read,
        t2Col_0_V_read => in2_0_V_fu_522_p1,
        t2Col_1_V_read => grp_colSADSumScale2_fu_329_t2Col_1_V_read,
        t2Col_2_V_read => grp_colSADSumScale2_fu_329_t2Col_2_V_read,
        t2Col_3_V_read => grp_colSADSumScale2_fu_329_t2Col_3_V_read,
        t2Col_4_V_read => grp_colSADSumScale2_fu_329_t2Col_4_V_read,
        t2Col_5_V_read => grp_colSADSumScale2_fu_329_t2Col_5_V_read,
        t2Col_6_V_read => grp_colSADSumScale2_fu_329_t2Col_6_V_read,
        t2Col_7_V_read => grp_colSADSumScale2_fu_329_t2Col_7_V_read,
        t2Col_8_V_read => grp_colSADSumScale2_fu_329_t2Col_8_V_read,
        t2Col_9_V_read => grp_colSADSumScale2_fu_329_t2Col_9_V_read,
        t2Col_10_V_read => grp_colSADSumScale2_fu_329_t2Col_10_V_read,
        t2Col_11_V_read => grp_colSADSumScale2_fu_329_t2Col_11_V_read,
        t2Col_12_V_read => grp_colSADSumScale2_fu_329_t2Col_12_V_read,
        ap_return_0 => grp_colSADSumScale2_fu_329_ap_return_0,
        ap_return_1 => grp_colSADSumScale2_fu_329_ap_return_1,
        ap_return_2 => grp_colSADSumScale2_fu_329_ap_return_2,
        ap_return_3 => grp_colSADSumScale2_fu_329_ap_return_3,
        ap_return_4 => grp_colSADSumScale2_fu_329_ap_return_4,
        ap_return_5 => grp_colSADSumScale2_fu_329_ap_return_5,
        ap_return_6 => grp_colSADSumScale2_fu_329_ap_return_6,
        ap_ce => grp_colSADSumScale2_fu_329_ap_ce);

    grp_colZeroCntScale2_fu_353 : component colZeroCntScale2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        t1Col_3_V_read => grp_colZeroCntScale2_fu_353_t1Col_3_V_read,
        t1Col_4_V_read => grp_colZeroCntScale2_fu_353_t1Col_4_V_read,
        t1Col_5_V_read => grp_colZeroCntScale2_fu_353_t1Col_5_V_read,
        t1Col_6_V_read => grp_colZeroCntScale2_fu_353_t1Col_6_V_read,
        t1Col_7_V_read => grp_colZeroCntScale2_fu_353_t1Col_7_V_read,
        t1Col_8_V_read => grp_colZeroCntScale2_fu_353_t1Col_8_V_read,
        t1Col_9_V_read => grp_colZeroCntScale2_fu_353_t1Col_9_V_read,
        t2Col_0_V_read => in2_0_V_fu_522_p1,
        t2Col_1_V_read => grp_colZeroCntScale2_fu_353_t2Col_1_V_read,
        t2Col_2_V_read => grp_colZeroCntScale2_fu_353_t2Col_2_V_read,
        t2Col_3_V_read => grp_colZeroCntScale2_fu_353_t2Col_3_V_read,
        t2Col_4_V_read => grp_colZeroCntScale2_fu_353_t2Col_4_V_read,
        t2Col_5_V_read => grp_colZeroCntScale2_fu_353_t2Col_5_V_read,
        t2Col_6_V_read => grp_colZeroCntScale2_fu_353_t2Col_6_V_read,
        t2Col_7_V_read => grp_colZeroCntScale2_fu_353_t2Col_7_V_read,
        t2Col_8_V_read => grp_colZeroCntScale2_fu_353_t2Col_8_V_read,
        t2Col_9_V_read => grp_colZeroCntScale2_fu_353_t2Col_9_V_read,
        t2Col_10_V_read => grp_colZeroCntScale2_fu_353_t2Col_10_V_read,
        t2Col_11_V_read => grp_colZeroCntScale2_fu_353_t2Col_11_V_read,
        t2Col_12_V_read => grp_colZeroCntScale2_fu_353_t2Col_12_V_read,
        ap_return_0 => grp_colZeroCntScale2_fu_353_ap_return_0,
        ap_return_1 => grp_colZeroCntScale2_fu_353_ap_return_1,
        ap_return_2 => grp_colZeroCntScale2_fu_353_ap_return_2,
        ap_return_3 => grp_colZeroCntScale2_fu_353_ap_return_3,
        ap_return_4 => grp_colZeroCntScale2_fu_353_ap_return_4,
        ap_return_5 => grp_colZeroCntScale2_fu_353_ap_return_5,
        ap_return_6 => grp_colZeroCntScale2_fu_353_ap_return_6,
        ap_return_7 => grp_colZeroCntScale2_fu_353_ap_return_7,
        ap_return_8 => grp_colZeroCntScale2_fu_353_ap_return_8,
        ap_return_9 => grp_colZeroCntScale2_fu_353_ap_return_9,
        ap_return_10 => grp_colZeroCntScale2_fu_353_ap_return_10,
        ap_return_11 => grp_colZeroCntScale2_fu_353_ap_return_11,
        ap_return_12 => grp_colZeroCntScale2_fu_353_ap_return_12,
        ap_return_13 => grp_colZeroCntScale2_fu_353_ap_return_13,
        ap_return_14 => grp_colZeroCntScale2_fu_353_ap_return_14,
        ap_ce => grp_colZeroCntScale2_fu_353_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_p_Val2_74_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_167)) then
                if ((tmp_reg_857 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_74_reg_311 <= colStream1_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_74_reg_311 <= ap_phi_reg_pp0_iter1_p_Val2_74_reg_311;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_Val2_s_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_167)) then
                if ((tmp_reg_857 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_s_reg_320 <= colStream0_V_V_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_Val2_s_reg_320 <= ap_phi_reg_pp0_iter1_p_Val2_s_reg_320;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_p_Val2_74_reg_311_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if ((tmp_reg_857_pp0_iter1_reg = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter3_p_Val2_74_reg_311 <= colData1_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_p_Val2_74_reg_311 <= ap_phi_reg_pp0_iter2_p_Val2_74_reg_311;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_p_Val2_s_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if ((tmp_reg_857_pp0_iter1_reg = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter3_p_Val2_s_reg_320 <= colData0_V_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_p_Val2_s_reg_320 <= ap_phi_reg_pp0_iter2_p_Val2_s_reg_320;
                end if;
            end if; 
        end if;
    end process;

    exitcond_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                exitcond_reg_255 <= exitcond1_reg_875;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                exitcond_reg_255 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    i_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_reg_283 <= i_cast_mid2_v_reg_851;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                i_reg_283 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_297 <= indvar_flatten_next_reg_861;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten_reg_297 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    k_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                k_reg_269 <= k_1_reg_870;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                k_reg_269 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_p_Val2_74_reg_311 <= ap_phi_reg_pp0_iter0_p_Val2_74_reg_311;
                ap_phi_reg_pp0_iter1_p_Val2_s_reg_320 <= ap_phi_reg_pp0_iter0_p_Val2_s_reg_320;
                exitcond1_reg_875 <= exitcond1_fu_435_p2;
                i_cast_mid2_v_reg_851 <= i_cast_mid2_v_fu_391_p3;
                indvar_flatten_next_reg_861 <= indvar_flatten_next_fu_405_p2;
                k_1_reg_870 <= k_1_fu_429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_880 <= exitcond_flatten_fu_441_p2;
                exitcond_flatten_reg_880_pp0_iter1_reg <= exitcond_flatten_reg_880;
                k_mid2_reg_844 <= k_mid2_fu_383_p3;
                tmp_reg_857 <= tmp_fu_399_p2;
                tmp_reg_857_pp0_iter1_reg <= tmp_reg_857;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_880_pp0_iter2_reg <= exitcond_flatten_reg_880_pp0_iter1_reg;
                exitcond_flatten_reg_880_pp0_iter3_reg <= exitcond_flatten_reg_880_pp0_iter2_reg;
                exitcond_flatten_reg_880_pp0_iter4_reg <= exitcond_flatten_reg_880_pp0_iter3_reg;
                out_1_reg_919 <= grp_colSADSumScale2_fu_329_ap_return_1;
                out_2_reg_924 <= grp_colSADSumScale2_fu_329_ap_return_2;
                out_3_reg_929 <= grp_colSADSumScale2_fu_329_ap_return_3;
                out_4_reg_934 <= grp_colSADSumScale2_fu_329_ap_return_4;
                out_5_reg_939 <= grp_colSADSumScale2_fu_329_ap_return_5;
                out_6_reg_944 <= grp_colSADSumScale2_fu_329_ap_return_6;
                out_reg_914 <= grp_colSADSumScale2_fu_329_ap_return_0;
                refColZeroCnt_V_reg_949 <= grp_colZeroCntScale2_fu_353_ap_return_0;
                refTagValidPixCnt_1_reg_994 <= grp_colZeroCntScale2_fu_353_ap_return_9;
                refTagValidPixCnt_2_reg_999 <= grp_colZeroCntScale2_fu_353_ap_return_10;
                refTagValidPixCnt_3_reg_1004 <= grp_colZeroCntScale2_fu_353_ap_return_11;
                refTagValidPixCnt_4_reg_1009 <= grp_colZeroCntScale2_fu_353_ap_return_12;
                refTagValidPixCnt_5_reg_1014 <= grp_colZeroCntScale2_fu_353_ap_return_13;
                refTagValidPixCnt_6_reg_1019 <= grp_colZeroCntScale2_fu_353_ap_return_14;
                refTagValidPixCnt_reg_989 <= grp_colZeroCntScale2_fu_353_ap_return_8;
                tagColValidCnt_1_reg_959 <= grp_colZeroCntScale2_fu_353_ap_return_2;
                tagColValidCnt_2_reg_964 <= grp_colZeroCntScale2_fu_353_ap_return_3;
                tagColValidCnt_3_reg_969 <= grp_colZeroCntScale2_fu_353_ap_return_4;
                tagColValidCnt_4_reg_974 <= grp_colZeroCntScale2_fu_353_ap_return_5;
                tagColValidCnt_5_reg_979 <= grp_colZeroCntScale2_fu_353_ap_return_6;
                tagColValidCnt_6_reg_984 <= grp_colZeroCntScale2_fu_353_ap_return_7;
                tagColValidCnt_reg_954 <= grp_colZeroCntScale2_fu_353_ap_return_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_399_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_cond_reg_866 <= or_cond_fu_423_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(colStream1_V_V_empty_n, tmp_reg_857, ap_predicate_op65_read_state4, colStream0_V_V_empty_n, ap_enable_reg_pp0_iter1, refZeroCntStream_V_V_full_n, outStream_V_V_full_n, tagColValidCntStream_V_V_full_n, refTagValidCntStream_V_V_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((refTagValidCntStream_V_V_full_n = ap_const_logic_0) or (tagColValidCntStream_V_V_full_n = ap_const_logic_0) or (outStream_V_V_full_n = ap_const_logic_0) or (refZeroCntStream_V_V_full_n = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((colStream0_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(colStream1_V_V_empty_n, tmp_reg_857, ap_predicate_op65_read_state4, colStream0_V_V_empty_n, ap_enable_reg_pp0_iter1, refZeroCntStream_V_V_full_n, outStream_V_V_full_n, tagColValidCntStream_V_V_full_n, refTagValidCntStream_V_V_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((refTagValidCntStream_V_V_full_n = ap_const_logic_0) or (tagColValidCntStream_V_V_full_n = ap_const_logic_0) or (outStream_V_V_full_n = ap_const_logic_0) or (refZeroCntStream_V_V_full_n = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((colStream0_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(colStream1_V_V_empty_n, tmp_reg_857, ap_predicate_op65_read_state4, colStream0_V_V_empty_n, ap_enable_reg_pp0_iter1, refZeroCntStream_V_V_full_n, outStream_V_V_full_n, tagColValidCntStream_V_V_full_n, refTagValidCntStream_V_V_full_n, ap_enable_reg_pp0_iter5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((refTagValidCntStream_V_V_full_n = ap_const_logic_0) or (tagColValidCntStream_V_V_full_n = ap_const_logic_0) or (outStream_V_V_full_n = ap_const_logic_0) or (refZeroCntStream_V_V_full_n = ap_const_logic_0))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((colStream0_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1)))));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter5_assign_proc : process(refZeroCntStream_V_V_full_n, outStream_V_V_full_n, tagColValidCntStream_V_V_full_n, refTagValidCntStream_V_V_full_n)
    begin
                ap_block_state3_pp0_stage0_iter5 <= ((refTagValidCntStream_V_V_full_n = ap_const_logic_0) or (tagColValidCntStream_V_V_full_n = ap_const_logic_0) or (outStream_V_V_full_n = ap_const_logic_0) or (refZeroCntStream_V_V_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter1_assign_proc : process(colStream1_V_V_empty_n, tmp_reg_857, ap_predicate_op65_read_state4, colStream0_V_V_empty_n)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((colStream0_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (tmp_reg_857 = ap_const_lv1_1)) or ((colStream1_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_104_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_104 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_167_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_167 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, exitcond_flatten_reg_880_pp0_iter4_reg)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_880_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_exitcond_phi_fu_259_p6_assign_proc : process(exitcond_reg_255, exitcond1_reg_875, exitcond_flatten_reg_880, ap_condition_104)
    begin
        if ((ap_const_boolean_1 = ap_condition_104)) then
            if ((exitcond_flatten_reg_880 = ap_const_lv1_1)) then 
                ap_phi_mux_exitcond_phi_fu_259_p6 <= ap_const_lv1_0;
            elsif ((exitcond_flatten_reg_880 = ap_const_lv1_0)) then 
                ap_phi_mux_exitcond_phi_fu_259_p6 <= exitcond1_reg_875;
            else 
                ap_phi_mux_exitcond_phi_fu_259_p6 <= exitcond_reg_255;
            end if;
        else 
            ap_phi_mux_exitcond_phi_fu_259_p6 <= exitcond_reg_255;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_287_p6_assign_proc : process(i_reg_283, i_cast_mid2_v_reg_851, exitcond_flatten_reg_880, ap_condition_104)
    begin
        if ((ap_const_boolean_1 = ap_condition_104)) then
            if ((exitcond_flatten_reg_880 = ap_const_lv1_1)) then 
                ap_phi_mux_i_phi_fu_287_p6 <= ap_const_lv3_0;
            elsif ((exitcond_flatten_reg_880 = ap_const_lv1_0)) then 
                ap_phi_mux_i_phi_fu_287_p6 <= i_cast_mid2_v_reg_851;
            else 
                ap_phi_mux_i_phi_fu_287_p6 <= i_reg_283;
            end if;
        else 
            ap_phi_mux_i_phi_fu_287_p6 <= i_reg_283;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_301_p6_assign_proc : process(indvar_flatten_reg_297, indvar_flatten_next_reg_861, exitcond_flatten_reg_880, ap_condition_104)
    begin
        if ((ap_const_boolean_1 = ap_condition_104)) then
            if ((exitcond_flatten_reg_880 = ap_const_lv1_1)) then 
                ap_phi_mux_indvar_flatten_phi_fu_301_p6 <= ap_const_lv6_0;
            elsif ((exitcond_flatten_reg_880 = ap_const_lv1_0)) then 
                ap_phi_mux_indvar_flatten_phi_fu_301_p6 <= indvar_flatten_next_reg_861;
            else 
                ap_phi_mux_indvar_flatten_phi_fu_301_p6 <= indvar_flatten_reg_297;
            end if;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_301_p6 <= indvar_flatten_reg_297;
        end if; 
    end process;


    ap_phi_mux_k_phi_fu_273_p6_assign_proc : process(k_reg_269, k_1_reg_870, exitcond_flatten_reg_880, ap_condition_104)
    begin
        if ((ap_const_boolean_1 = ap_condition_104)) then
            if ((exitcond_flatten_reg_880 = ap_const_lv1_1)) then 
                ap_phi_mux_k_phi_fu_273_p6 <= ap_const_lv3_0;
            elsif ((exitcond_flatten_reg_880 = ap_const_lv1_0)) then 
                ap_phi_mux_k_phi_fu_273_p6 <= k_1_reg_870;
            else 
                ap_phi_mux_k_phi_fu_273_p6 <= k_reg_269;
            end if;
        else 
            ap_phi_mux_k_phi_fu_273_p6 <= k_reg_269;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_p_Val2_74_reg_311 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_s_reg_320 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op65_read_state4_assign_proc : process(tmp_reg_857, or_cond_reg_866)
    begin
                ap_predicate_op65_read_state4 <= ((tmp_reg_857 = ap_const_lv1_0) and (or_cond_reg_866 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(exitcond_flatten_fu_441_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_441_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    colData0_V_address0 <= tmp_54_fu_502_p1(3 - 1 downto 0);
    colData0_V_address1 <= tmp_s_fu_517_p1(3 - 1 downto 0);

    colData0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            colData0_V_ce0 <= ap_const_logic_1;
        else 
            colData0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    colData0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            colData0_V_ce1 <= ap_const_logic_1;
        else 
            colData0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    colData0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_857, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_857 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            colData0_V_we1 <= ap_const_logic_1;
        else 
            colData0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    colData1_V_address0 <= tmp_56_fu_512_p1(4 - 1 downto 0);

    colData1_V_address1_assign_proc : process(tmp_reg_857, ap_predicate_op65_read_state4, tmp_53_fu_497_p1, tmp_s_fu_517_p1, ap_condition_104)
    begin
        if ((ap_const_boolean_1 = ap_condition_104)) then
            if ((tmp_reg_857 = ap_const_lv1_1)) then 
                colData1_V_address1 <= tmp_s_fu_517_p1(4 - 1 downto 0);
            elsif ((ap_predicate_op65_read_state4 = ap_const_boolean_1)) then 
                colData1_V_address1 <= tmp_53_fu_497_p1(4 - 1 downto 0);
            else 
                colData1_V_address1 <= "XXXX";
            end if;
        else 
            colData1_V_address1 <= "XXXX";
        end if; 
    end process;


    colData1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            colData1_V_ce0 <= ap_const_logic_1;
        else 
            colData1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    colData1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_857, ap_predicate_op65_read_state4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_857 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1)))) then 
            colData1_V_ce1 <= ap_const_logic_1;
        else 
            colData1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    colData1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_857, ap_predicate_op65_read_state4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_857 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1)))) then 
            colData1_V_we1 <= ap_const_logic_1;
        else 
            colData1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    colStream0_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_857, colStream0_V_V_empty_n, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((tmp_reg_857 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            colStream0_V_V_blk_n <= colStream0_V_V_empty_n;
        else 
            colStream0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    colStream0_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_857, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_857 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            colStream0_V_V_read <= ap_const_logic_1;
        else 
            colStream0_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    colStream1_V_V_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, colStream1_V_V_empty_n, tmp_reg_857, ap_predicate_op65_read_state4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if ((((tmp_reg_857 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            colStream1_V_V_blk_n <= colStream1_V_V_empty_n;
        else 
            colStream1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    colStream1_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_857, ap_predicate_op65_read_state4, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_857 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op65_read_state4 = ap_const_boolean_1)))) then 
            colStream1_V_V_read <= ap_const_logic_1;
        else 
            colStream1_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_435_p2 <= "1" when (k_1_fu_429_p2 = ap_const_lv3_7) else "0";
    exitcond_flatten_fu_441_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_301_p6 = ap_const_lv6_30) else "0";

    grp_colSADSumScale2_fu_329_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_colSADSumScale2_fu_329_ap_ce <= ap_const_logic_1;
        else 
            grp_colSADSumScale2_fu_329_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_colSADSumScale2_fu_329_t1Col_3_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(15 downto 12);
    grp_colSADSumScale2_fu_329_t1Col_4_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(19 downto 16);
    grp_colSADSumScale2_fu_329_t1Col_5_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(23 downto 20);
    grp_colSADSumScale2_fu_329_t1Col_6_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(27 downto 24);
    grp_colSADSumScale2_fu_329_t1Col_7_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(31 downto 28);
    grp_colSADSumScale2_fu_329_t1Col_8_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(35 downto 32);
    grp_colSADSumScale2_fu_329_t1Col_9_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(39 downto 36);
    grp_colSADSumScale2_fu_329_t2Col_10_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(43 downto 40);
    grp_colSADSumScale2_fu_329_t2Col_11_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(47 downto 44);
    grp_colSADSumScale2_fu_329_t2Col_12_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(51 downto 48);
    grp_colSADSumScale2_fu_329_t2Col_1_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(7 downto 4);
    grp_colSADSumScale2_fu_329_t2Col_2_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(11 downto 8);
    grp_colSADSumScale2_fu_329_t2Col_3_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(15 downto 12);
    grp_colSADSumScale2_fu_329_t2Col_4_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(19 downto 16);
    grp_colSADSumScale2_fu_329_t2Col_5_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(23 downto 20);
    grp_colSADSumScale2_fu_329_t2Col_6_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(27 downto 24);
    grp_colSADSumScale2_fu_329_t2Col_7_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(31 downto 28);
    grp_colSADSumScale2_fu_329_t2Col_8_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(35 downto 32);
    grp_colSADSumScale2_fu_329_t2Col_9_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(39 downto 36);

    grp_colZeroCntScale2_fu_353_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_colZeroCntScale2_fu_353_ap_ce <= ap_const_logic_1;
        else 
            grp_colZeroCntScale2_fu_353_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_colZeroCntScale2_fu_353_t1Col_3_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(15 downto 12);
    grp_colZeroCntScale2_fu_353_t1Col_4_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(19 downto 16);
    grp_colZeroCntScale2_fu_353_t1Col_5_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(23 downto 20);
    grp_colZeroCntScale2_fu_353_t1Col_6_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(27 downto 24);
    grp_colZeroCntScale2_fu_353_t1Col_7_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(31 downto 28);
    grp_colZeroCntScale2_fu_353_t1Col_8_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(35 downto 32);
    grp_colZeroCntScale2_fu_353_t1Col_9_V_read <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_320(39 downto 36);
    grp_colZeroCntScale2_fu_353_t2Col_10_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(43 downto 40);
    grp_colZeroCntScale2_fu_353_t2Col_11_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(47 downto 44);
    grp_colZeroCntScale2_fu_353_t2Col_12_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(51 downto 48);
    grp_colZeroCntScale2_fu_353_t2Col_1_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(7 downto 4);
    grp_colZeroCntScale2_fu_353_t2Col_2_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(11 downto 8);
    grp_colZeroCntScale2_fu_353_t2Col_3_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(15 downto 12);
    grp_colZeroCntScale2_fu_353_t2Col_4_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(19 downto 16);
    grp_colZeroCntScale2_fu_353_t2Col_5_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(23 downto 20);
    grp_colZeroCntScale2_fu_353_t2Col_6_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(27 downto 24);
    grp_colZeroCntScale2_fu_353_t2Col_7_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(31 downto 28);
    grp_colZeroCntScale2_fu_353_t2Col_8_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(35 downto 32);
    grp_colZeroCntScale2_fu_353_t2Col_9_V_read <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(39 downto 36);
    i_1_fu_377_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_phi_fu_287_p6) + unsigned(ap_const_lv3_1));
    i_cast_mid2_fu_485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_cast_mid2_v_reg_851),4));
    i_cast_mid2_v_fu_391_p3 <= 
        i_1_fu_377_p2 when (ap_phi_mux_exitcond_phi_fu_259_p6(0) = '1') else 
        ap_phi_mux_i_phi_fu_287_p6;
    in2_0_V_fu_522_p1 <= ap_phi_reg_pp0_iter3_p_Val2_74_reg_311(4 - 1 downto 0);
    indvar_flatten_next_fu_405_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_301_p6) + unsigned(ap_const_lv6_1));
    k_1_fu_429_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(k_mid2_fu_383_p3));
    k_cast_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_mid2_reg_844),4));
    k_mid2_fu_383_p3 <= 
        ap_const_lv3_0 when (ap_phi_mux_exitcond_phi_fu_259_p6(0) = '1') else 
        ap_phi_mux_k_phi_fu_273_p6;
    or_cond_fu_423_p2 <= (tmp_51_fu_417_p2 and tmp_50_fu_411_p2);

    outStream_V_V_blk_n_assign_proc : process(outStream_V_V_full_n, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            outStream_V_V_blk_n <= outStream_V_V_full_n;
        else 
            outStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_V_V_din <= ((((((out_6_reg_944 & out_5_reg_939) & out_4_reg_934) & out_3_reg_929) & out_2_reg_924) & out_1_reg_919) & out_reg_914);

    outStream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            outStream_V_V_write <= ap_const_logic_1;
        else 
            outStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    refTagValidCntStream_V_V_blk_n_assign_proc : process(refTagValidCntStream_V_V_full_n, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            refTagValidCntStream_V_V_blk_n <= refTagValidCntStream_V_V_full_n;
        else 
            refTagValidCntStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    refTagValidCntStream_V_V_din <= ((((((refTagValidPixCnt_6_reg_1019 & refTagValidPixCnt_5_reg_1014) & refTagValidPixCnt_4_reg_1009) & refTagValidPixCnt_3_reg_1004) & refTagValidPixCnt_2_reg_999) & refTagValidPixCnt_1_reg_994) & refTagValidPixCnt_reg_989);

    refTagValidCntStream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            refTagValidCntStream_V_V_write <= ap_const_logic_1;
        else 
            refTagValidCntStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    refZeroCntStream_V_V_blk_n_assign_proc : process(refZeroCntStream_V_V_full_n, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            refZeroCntStream_V_V_blk_n <= refZeroCntStream_V_V_full_n;
        else 
            refZeroCntStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    refZeroCntStream_V_V_din <= refColZeroCnt_V_reg_949;

    refZeroCntStream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            refZeroCntStream_V_V_write <= ap_const_logic_1;
        else 
            refZeroCntStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    tagColValidCntStream_V_V_blk_n_assign_proc : process(tagColValidCntStream_V_V_full_n, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            tagColValidCntStream_V_V_blk_n <= tagColValidCntStream_V_V_full_n;
        else 
            tagColValidCntStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tagColValidCntStream_V_V_din <= ((((((tagColValidCnt_6_reg_984 & tagColValidCnt_5_reg_979) & tagColValidCnt_4_reg_974) & tagColValidCnt_3_reg_969) & tagColValidCnt_2_reg_964) & tagColValidCnt_1_reg_959) & tagColValidCnt_reg_954);

    tagColValidCntStream_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            tagColValidCntStream_V_V_write <= ap_const_logic_1;
        else 
            tagColValidCntStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_50_fu_411_p2 <= "1" when (i_cast_mid2_v_fu_391_p3 = ap_const_lv3_1) else "0";
    tmp_51_fu_417_p2 <= "1" when (unsigned(k_mid2_fu_383_p3) < unsigned(ap_const_lv3_6)) else "0";
    tmp_52_fu_491_p2 <= std_logic_vector(unsigned(k_cast_fu_488_p1) + unsigned(ap_const_lv4_7));
    tmp_53_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_491_p2),64));
    tmp_54_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_mid2_reg_844),64));
    tmp_55_fu_506_p2 <= std_logic_vector(unsigned(i_cast_mid2_fu_485_p1) + unsigned(k_cast_fu_488_p1));
    tmp_56_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_506_p2),64));
    tmp_fu_399_p2 <= "1" when (i_cast_mid2_v_fu_391_p3 = ap_const_lv3_0) else "0";
    tmp_s_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_mid2_reg_844),64));
end behav;

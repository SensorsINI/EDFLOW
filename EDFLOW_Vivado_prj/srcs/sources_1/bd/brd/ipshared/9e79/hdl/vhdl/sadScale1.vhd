-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sadScale1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    refBlock_0_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_1_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_2_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_3_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_4_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_5_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_6_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_7_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_8_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_9_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_10_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_11_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    refBlock_12_V_read : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_0_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_1_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_2_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_3_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_4_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_5_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_6_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_7_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_8_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_9_V_re : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_10_V_r : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_11_V_r : IN STD_LOGIC_VECTOR (3 downto 0);
    targetBlocks_12_V_r : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of sadScale1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal sum_0_V_fu_257_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_0_V_reg_431 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sum_1_V_fu_271_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_1_V_reg_436 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_2_V_fu_285_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_2_V_reg_441 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_3_V_fu_299_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_3_V_reg_446 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_4_V_fu_313_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_4_V_reg_451 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_5_V_fu_327_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_5_V_reg_456 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_6_V_fu_341_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_6_V_reg_461 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_7_V_fu_355_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_7_V_reg_466 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_8_V_fu_369_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_8_V_reg_471 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_9_V_fu_383_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_9_V_reg_476 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_10_V_fu_397_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_10_V_reg_481 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_11_V_fu_411_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_11_V_reg_486 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_12_V_fu_425_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_12_V_reg_491 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_sadSumScale1_fu_232_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sadSumScale1_fu_232_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal sum_0_V_fu_257_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_0_V_fu_257_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_1_V_fu_271_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_1_V_fu_271_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_2_V_fu_285_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_2_V_fu_285_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_3_V_fu_299_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_3_V_fu_299_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_4_V_fu_313_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_4_V_fu_313_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_5_V_fu_327_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_5_V_fu_327_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_6_V_fu_341_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_6_V_fu_341_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_7_V_fu_355_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_7_V_fu_355_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_8_V_fu_369_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_8_V_fu_369_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_9_V_fu_383_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_9_V_fu_383_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_10_V_fu_397_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_10_V_fu_397_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_11_V_fu_411_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_11_V_fu_411_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_12_V_fu_425_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_12_V_fu_425_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal refBlock_0_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_1_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_2_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_3_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_4_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_5_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_6_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_7_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_8_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_9_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_10_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_11_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal refBlock_12_V_read_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_0_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_1_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_2_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_3_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_4_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_5_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_6_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_7_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_8_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_9_V_re_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_10_V_r_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_11_V_r_int_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal targetBlocks_12_V_r_int_reg : STD_LOGIC_VECTOR (3 downto 0);

    component sadSumScale1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        sum_0_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_1_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_2_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_3_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_4_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_5_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_6_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_7_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_8_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_9_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_10_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_11_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        sum_12_V_read : IN STD_LOGIC_VECTOR (4 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component EVABMOFStreamWithMgi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;



begin
    grp_sadSumScale1_fu_232 : component sadSumScale1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        sum_0_V_read => sum_0_V_reg_431,
        sum_1_V_read => sum_1_V_reg_436,
        sum_2_V_read => sum_2_V_reg_441,
        sum_3_V_read => sum_3_V_reg_446,
        sum_4_V_read => sum_4_V_reg_451,
        sum_5_V_read => sum_5_V_reg_456,
        sum_6_V_read => sum_6_V_reg_461,
        sum_7_V_read => sum_7_V_reg_466,
        sum_8_V_read => sum_8_V_reg_471,
        sum_9_V_read => sum_9_V_reg_476,
        sum_10_V_read => sum_10_V_reg_481,
        sum_11_V_read => sum_11_V_reg_486,
        sum_12_V_read => sum_12_V_reg_491,
        ap_return => grp_sadSumScale1_fu_232_ap_return,
        ap_ce => grp_sadSumScale1_fu_232_ap_ce);

    EVABMOFStreamWithMgi_U208 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_0_V_fu_257_p0,
        din1 => sum_0_V_fu_257_p1,
        dout => sum_0_V_fu_257_p2);

    EVABMOFStreamWithMgi_U209 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_1_V_fu_271_p0,
        din1 => sum_1_V_fu_271_p1,
        dout => sum_1_V_fu_271_p2);

    EVABMOFStreamWithMgi_U210 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_2_V_fu_285_p0,
        din1 => sum_2_V_fu_285_p1,
        dout => sum_2_V_fu_285_p2);

    EVABMOFStreamWithMgi_U211 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_3_V_fu_299_p0,
        din1 => sum_3_V_fu_299_p1,
        dout => sum_3_V_fu_299_p2);

    EVABMOFStreamWithMgi_U212 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_4_V_fu_313_p0,
        din1 => sum_4_V_fu_313_p1,
        dout => sum_4_V_fu_313_p2);

    EVABMOFStreamWithMgi_U213 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_5_V_fu_327_p0,
        din1 => sum_5_V_fu_327_p1,
        dout => sum_5_V_fu_327_p2);

    EVABMOFStreamWithMgi_U214 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_6_V_fu_341_p0,
        din1 => sum_6_V_fu_341_p1,
        dout => sum_6_V_fu_341_p2);

    EVABMOFStreamWithMgi_U215 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_7_V_fu_355_p0,
        din1 => sum_7_V_fu_355_p1,
        dout => sum_7_V_fu_355_p2);

    EVABMOFStreamWithMgi_U216 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_8_V_fu_369_p0,
        din1 => sum_8_V_fu_369_p1,
        dout => sum_8_V_fu_369_p2);

    EVABMOFStreamWithMgi_U217 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_9_V_fu_383_p0,
        din1 => sum_9_V_fu_383_p1,
        dout => sum_9_V_fu_383_p2);

    EVABMOFStreamWithMgi_U218 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_10_V_fu_397_p0,
        din1 => sum_10_V_fu_397_p1,
        dout => sum_10_V_fu_397_p2);

    EVABMOFStreamWithMgi_U219 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_11_V_fu_411_p0,
        din1 => sum_11_V_fu_411_p1,
        dout => sum_11_V_fu_411_p2);

    EVABMOFStreamWithMgi_U220 : component EVABMOFStreamWithMgi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 5,
        dout_WIDTH => 5)
    port map (
        din0 => sum_12_V_fu_425_p0,
        din1 => sum_12_V_fu_425_p1,
        dout => sum_12_V_fu_425_p2);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                refBlock_0_V_read_int_reg <= refBlock_0_V_read;
                refBlock_10_V_read_int_reg <= refBlock_10_V_read;
                refBlock_11_V_read_int_reg <= refBlock_11_V_read;
                refBlock_12_V_read_int_reg <= refBlock_12_V_read;
                refBlock_1_V_read_int_reg <= refBlock_1_V_read;
                refBlock_2_V_read_int_reg <= refBlock_2_V_read;
                refBlock_3_V_read_int_reg <= refBlock_3_V_read;
                refBlock_4_V_read_int_reg <= refBlock_4_V_read;
                refBlock_5_V_read_int_reg <= refBlock_5_V_read;
                refBlock_6_V_read_int_reg <= refBlock_6_V_read;
                refBlock_7_V_read_int_reg <= refBlock_7_V_read;
                refBlock_8_V_read_int_reg <= refBlock_8_V_read;
                refBlock_9_V_read_int_reg <= refBlock_9_V_read;
                targetBlocks_0_V_re_int_reg <= targetBlocks_0_V_re;
                targetBlocks_10_V_r_int_reg <= targetBlocks_10_V_r;
                targetBlocks_11_V_r_int_reg <= targetBlocks_11_V_r;
                targetBlocks_12_V_r_int_reg <= targetBlocks_12_V_r;
                targetBlocks_1_V_re_int_reg <= targetBlocks_1_V_re;
                targetBlocks_2_V_re_int_reg <= targetBlocks_2_V_re;
                targetBlocks_3_V_re_int_reg <= targetBlocks_3_V_re;
                targetBlocks_4_V_re_int_reg <= targetBlocks_4_V_re;
                targetBlocks_5_V_re_int_reg <= targetBlocks_5_V_re;
                targetBlocks_6_V_re_int_reg <= targetBlocks_6_V_re;
                targetBlocks_7_V_re_int_reg <= targetBlocks_7_V_re;
                targetBlocks_8_V_re_int_reg <= targetBlocks_8_V_re;
                targetBlocks_9_V_re_int_reg <= targetBlocks_9_V_re;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                sum_0_V_reg_431 <= sum_0_V_fu_257_p2;
                sum_10_V_reg_481 <= sum_10_V_fu_397_p2;
                sum_11_V_reg_486 <= sum_11_V_fu_411_p2;
                sum_12_V_reg_491 <= sum_12_V_fu_425_p2;
                sum_1_V_reg_436 <= sum_1_V_fu_271_p2;
                sum_2_V_reg_441 <= sum_2_V_fu_285_p2;
                sum_3_V_reg_446 <= sum_3_V_fu_299_p2;
                sum_4_V_reg_451 <= sum_4_V_fu_313_p2;
                sum_5_V_reg_456 <= sum_5_V_fu_327_p2;
                sum_6_V_reg_461 <= sum_6_V_fu_341_p2;
                sum_7_V_reg_466 <= sum_7_V_fu_355_p2;
                sum_8_V_reg_471 <= sum_8_V_fu_369_p2;
                sum_9_V_reg_476 <= sum_9_V_fu_383_p2;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= grp_sadSumScale1_fu_232_ap_return;

    grp_sadSumScale1_fu_232_ap_ce_assign_proc : process(ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then 
            grp_sadSumScale1_fu_232_ap_ce <= ap_const_logic_1;
        else 
            grp_sadSumScale1_fu_232_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    sum_0_V_fu_257_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_0_V_read_int_reg),5));
    sum_0_V_fu_257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_0_V_re_int_reg),5));
    sum_10_V_fu_397_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_10_V_read_int_reg),5));
    sum_10_V_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_10_V_r_int_reg),5));
    sum_11_V_fu_411_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_11_V_read_int_reg),5));
    sum_11_V_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_11_V_r_int_reg),5));
    sum_12_V_fu_425_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_12_V_read_int_reg),5));
    sum_12_V_fu_425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_12_V_r_int_reg),5));
    sum_1_V_fu_271_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_1_V_read_int_reg),5));
    sum_1_V_fu_271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_1_V_re_int_reg),5));
    sum_2_V_fu_285_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_2_V_read_int_reg),5));
    sum_2_V_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_2_V_re_int_reg),5));
    sum_3_V_fu_299_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_3_V_read_int_reg),5));
    sum_3_V_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_3_V_re_int_reg),5));
    sum_4_V_fu_313_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_4_V_read_int_reg),5));
    sum_4_V_fu_313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_4_V_re_int_reg),5));
    sum_5_V_fu_327_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_5_V_read_int_reg),5));
    sum_5_V_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_5_V_re_int_reg),5));
    sum_6_V_fu_341_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_6_V_read_int_reg),5));
    sum_6_V_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_6_V_re_int_reg),5));
    sum_7_V_fu_355_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_7_V_read_int_reg),5));
    sum_7_V_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_7_V_re_int_reg),5));
    sum_8_V_fu_369_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_8_V_read_int_reg),5));
    sum_8_V_fu_369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_8_V_re_int_reg),5));
    sum_9_V_fu_383_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refBlock_9_V_read_int_reg),5));
    sum_9_V_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(targetBlocks_9_V_re_int_reg),5));
end behav;

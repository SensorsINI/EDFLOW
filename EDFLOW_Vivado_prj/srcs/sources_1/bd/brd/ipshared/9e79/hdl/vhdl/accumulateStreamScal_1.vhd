-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity accumulateStreamScal_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inStream_V_V_dout : IN STD_LOGIC_VECTOR (111 downto 0);
    inStream_V_V_empty_n : IN STD_LOGIC;
    inStream_V_V_read : OUT STD_LOGIC;
    tagColValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (41 downto 0);
    tagColValidCntStream_V_V_empty_n : IN STD_LOGIC;
    tagColValidCntStream_V_V_read : OUT STD_LOGIC;
    refTagValidCntStream_V_V_dout : IN STD_LOGIC_VECTOR (41 downto 0);
    refTagValidCntStream_V_V_empty_n : IN STD_LOGIC;
    refTagValidCntStream_V_V_read : OUT STD_LOGIC;
    refZeroCntStream_V_V_dout : IN STD_LOGIC_VECTOR (5 downto 0);
    refZeroCntStream_V_V_empty_n : IN STD_LOGIC;
    refZeroCntStream_V_V_read : OUT STD_LOGIC;
    outStream_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    outStream_V_full_n : IN STD_LOGIC;
    outStream_V_write : OUT STD_LOGIC;
    OF_yStream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    OF_yStream_V_full_n : IN STD_LOGIC;
    OF_yStream_V_write : OUT STD_LOGIC );
end;


architecture behav of accumulateStreamScal_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv112_0 : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exitcond_flatten_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal tmp_reg_1021 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1021_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter3 : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal lastTagColValidCntSu : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    signal lastrefTagValidCntSu : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    signal lastSumDataScale2_V : STD_LOGIC_VECTOR (111 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal lastSumRefZeroCntSca : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal inStream_V_V_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal outStream_V_blk_n : STD_LOGIC;
    signal OF_yStream_V_blk_n : STD_LOGIC;
    signal refZeroCntStream_V_V_blk_n : STD_LOGIC;
    signal tagColValidCntStream_V_V_blk_n : STD_LOGIC;
    signal refTagValidCntStream_V_V_blk_n : STD_LOGIC;
    signal exitcond_reg_220 : STD_LOGIC_VECTOR (0 downto 0);
    signal k3_reg_234 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten2_reg_248 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1021_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next_fu_431_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten_next_reg_1025 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_60_fu_455_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_reg_1030 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1441_1_reg_1035 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1441_2_reg_1040 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1441_3_reg_1045 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_361_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1441_4_reg_1050 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1441_5_reg_1055 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_411_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1441_6_reg_1060 : STD_LOGIC_VECTOR (15 downto 0);
    signal k_fu_981_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_reg_1065 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond3_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1070 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1075 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1075_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1075_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal outputMinData_V_reg_1079 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_reg_1084 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_min_fu_262_inArr_V_read : STD_LOGIC_VECTOR (111 downto 0);
    signal grp_min_fu_262_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_min_fu_262_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_min_fu_262_ap_ce : STD_LOGIC;
    signal ap_phi_mux_exitcond_phi_fu_224_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_k3_phi_fu_238_p6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_indvar_flatten2_phi_fu_252_p6 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_Result_1048_6_fu_859_p8 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_1051_6_fu_913_p8 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_78_fu_805_p8 : STD_LOGIC_VECTOR (111 downto 0);
    signal tmp_79_fu_945_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_267_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_277_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_292_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_302_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_317_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_327_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_342_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_352_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_367_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_377_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_392_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_402_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal k_mid2_fu_417_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3020_fu_451_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3019_fu_437_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3023_fu_461_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_70_fu_473_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3024_fu_469_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3025_fu_483_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_71_fu_495_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3026_fu_491_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1056_1_fu_505_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1448_1_fu_525_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1057_1_fu_515_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1058_1_fu_535_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1449_1_fu_555_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1059_1_fu_545_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1056_2_fu_565_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1448_2_fu_585_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1057_2_fu_575_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1058_2_fu_595_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1449_2_fu_615_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1059_2_fu_605_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1056_3_fu_625_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1448_3_fu_645_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1057_3_fu_635_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1058_3_fu_655_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1449_3_fu_675_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1059_3_fu_665_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1056_4_fu_685_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1448_4_fu_705_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1057_4_fu_695_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1058_4_fu_715_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1449_4_fu_735_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1059_4_fu_725_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1056_5_fu_745_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1448_5_fu_765_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1057_5_fu_755_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1058_5_fu_775_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1449_5_fu_795_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1059_5_fu_785_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1056_6_fu_829_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1448_6_fu_849_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1057_6_fu_839_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastTagColValidCn_6_fu_853_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastTagColValidCn_5_fu_769_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastTagColValidCn_4_fu_709_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastTagColValidCn_3_fu_649_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastTagColValidCn_2_fu_589_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastTagColValidCn_1_fu_529_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastTagColValidCn_fu_477_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1058_6_fu_883_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1449_6_fu_903_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_1059_6_fu_893_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastrefTagValidCn_6_fu_907_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastrefTagValidCn_5_fu_799_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastrefTagValidCn_4_fu_739_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastrefTagValidCn_3_fu_679_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastrefTagValidCn_2_fu_619_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastrefTagValidCn_1_fu_559_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmplastrefTagValidCn_fu_499_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_s_fu_937_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_175 : BOOLEAN;
    signal ap_condition_85 : BOOLEAN;

    component min IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        inArr_V_read : IN STD_LOGIC_VECTOR (111 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_min_fu_262 : component min
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        inArr_V_read => grp_min_fu_262_inArr_V_read,
        ap_return_0 => grp_min_fu_262_ap_return_0,
        ap_return_1 => grp_min_fu_262_ap_return_1,
        ap_ce => grp_min_fu_262_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    exitcond_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1075 = ap_const_lv1_0))) then 
                exitcond_reg_220 <= exitcond3_reg_1070;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1075 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                exitcond_reg_220 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    indvar_flatten2_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1075 = ap_const_lv1_0))) then 
                indvar_flatten2_reg_248 <= indvar_flatten_next_reg_1025;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1075 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                indvar_flatten2_reg_248 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    k3_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten_reg_1075 = ap_const_lv1_0))) then 
                k3_reg_234 <= k_reg_1065;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1075 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                k3_reg_234 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    lastSumDataScale2_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_85)) then
                if ((tmp_fu_425_p2 = ap_const_lv1_1)) then 
                    lastSumDataScale2_V <= ap_const_lv112_0;
                elsif ((tmp_fu_425_p2 = ap_const_lv1_0)) then 
                    lastSumDataScale2_V <= tmp_78_fu_805_p8;
                end if;
            end if; 
        end if;
    end process;

    lastSumRefZeroCntSca_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_85)) then
                if ((tmp_fu_425_p2 = ap_const_lv1_1)) then 
                    lastSumRefZeroCntSca <= ap_const_lv16_0;
                elsif ((tmp_fu_425_p2 = ap_const_lv1_0)) then 
                    lastSumRefZeroCntSca <= tmp_79_fu_945_p2;
                end if;
            end if; 
        end if;
    end process;

    lastTagColValidCntSu_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_85)) then
                if ((tmp_fu_425_p2 = ap_const_lv1_1)) then 
                    lastTagColValidCntSu <= ap_const_lv63_0;
                elsif ((tmp_fu_425_p2 = ap_const_lv1_0)) then 
                    lastTagColValidCntSu <= p_Result_1048_6_fu_859_p8;
                end if;
            end if; 
        end if;
    end process;

    lastrefTagValidCntSu_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_85)) then
                if ((tmp_fu_425_p2 = ap_const_lv1_1)) then 
                    lastrefTagValidCntSu <= ap_const_lv63_0;
                elsif ((tmp_fu_425_p2 = ap_const_lv1_0)) then 
                    lastrefTagValidCntSu <= p_Result_1051_6_fu_913_p8;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond3_reg_1070 <= exitcond3_fu_987_p2;
                indvar_flatten_next_reg_1025 <= indvar_flatten_next_fu_431_p2;
                k_reg_1065 <= k_fu_981_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten_reg_1075 <= exitcond_flatten_fu_993_p2;
                exitcond_flatten_reg_1075_pp0_iter1_reg <= exitcond_flatten_reg_1075;
                tmp_60_reg_1030 <= tmp_60_fu_455_p2;
                tmp_reg_1021 <= tmp_fu_425_p2;
                tmp_reg_1021_pp0_iter1_reg <= tmp_reg_1021;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_flatten_reg_1075_pp0_iter2_reg <= exitcond_flatten_reg_1075_pp0_iter1_reg;
                tmp_reg_1021_pp0_iter2_reg <= tmp_reg_1021_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1021_pp0_iter1_reg = ap_const_lv1_1))) then
                index_reg_1084 <= grp_min_fu_262_ap_return_1;
                outputMinData_V_reg_1079 <= grp_min_fu_262_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_fu_425_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_1441_1_reg_1035 <= grp_fu_286_p2;
                tmp_1441_2_reg_1040 <= grp_fu_311_p2;
                tmp_1441_3_reg_1045 <= grp_fu_336_p2;
                tmp_1441_4_reg_1050 <= grp_fu_361_p2;
                tmp_1441_5_reg_1055 <= grp_fu_386_p2;
                tmp_1441_6_reg_1060 <= grp_fu_411_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    OF_yStream_V_blk_n_assign_proc : process(tmp_reg_1021_pp0_iter2_reg, OF_yStream_V_full_n, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            OF_yStream_V_blk_n <= OF_yStream_V_full_n;
        else 
            OF_yStream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OF_yStream_V_din <= index_reg_1084;

    OF_yStream_V_write_assign_proc : process(tmp_reg_1021_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            OF_yStream_V_write <= ap_const_logic_1;
        else 
            OF_yStream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, inStream_V_V_empty_n, tagColValidCntStream_V_V_empty_n, refTagValidCntStream_V_V_empty_n, refZeroCntStream_V_V_empty_n, outStream_V_full_n, tmp_reg_1021_pp0_iter2_reg, OF_yStream_V_full_n, ap_enable_reg_pp0_iter3)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_const_logic_0 = OF_yStream_V_full_n) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)) or ((outStream_V_full_n = ap_const_logic_0) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)))) or ((ap_start = ap_const_logic_1) and ((refZeroCntStream_V_V_empty_n = ap_const_logic_0) or (refTagValidCntStream_V_V_empty_n = ap_const_logic_0) or (tagColValidCntStream_V_V_empty_n = ap_const_logic_0) or (inStream_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, inStream_V_V_empty_n, tagColValidCntStream_V_V_empty_n, refTagValidCntStream_V_V_empty_n, refZeroCntStream_V_V_empty_n, outStream_V_full_n, tmp_reg_1021_pp0_iter2_reg, OF_yStream_V_full_n, ap_enable_reg_pp0_iter3)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_const_logic_0 = OF_yStream_V_full_n) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)) or ((outStream_V_full_n = ap_const_logic_0) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)))) or ((ap_start = ap_const_logic_1) and ((refZeroCntStream_V_V_empty_n = ap_const_logic_0) or (refTagValidCntStream_V_V_empty_n = ap_const_logic_0) or (tagColValidCntStream_V_V_empty_n = ap_const_logic_0) or (inStream_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, inStream_V_V_empty_n, tagColValidCntStream_V_V_empty_n, refTagValidCntStream_V_V_empty_n, refZeroCntStream_V_V_empty_n, outStream_V_full_n, tmp_reg_1021_pp0_iter2_reg, OF_yStream_V_full_n, ap_enable_reg_pp0_iter3)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (((ap_const_logic_0 = OF_yStream_V_full_n) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)) or ((outStream_V_full_n = ap_const_logic_0) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)))) or ((ap_start = ap_const_logic_1) and ((refZeroCntStream_V_V_empty_n = ap_const_logic_0) or (refTagValidCntStream_V_V_empty_n = ap_const_logic_0) or (tagColValidCntStream_V_V_empty_n = ap_const_logic_0) or (inStream_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(inStream_V_V_empty_n, tagColValidCntStream_V_V_empty_n, refTagValidCntStream_V_V_empty_n, refZeroCntStream_V_V_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((refZeroCntStream_V_V_empty_n = ap_const_logic_0) or (refTagValidCntStream_V_V_empty_n = ap_const_logic_0) or (tagColValidCntStream_V_V_empty_n = ap_const_logic_0) or (inStream_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter3_assign_proc : process(outStream_V_full_n, tmp_reg_1021_pp0_iter2_reg, OF_yStream_V_full_n)
    begin
                ap_block_state3_pp0_stage0_iter3 <= (((ap_const_logic_0 = OF_yStream_V_full_n) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)) or ((outStream_V_full_n = ap_const_logic_0) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1)));
    end process;

        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_175_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_175 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_85_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_85 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, exitcond_flatten_reg_1075_pp0_iter2_reg)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_reg_1075_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_exitcond_phi_fu_224_p6_assign_proc : process(exitcond_reg_220, exitcond3_reg_1070, exitcond_flatten_reg_1075, ap_condition_175)
    begin
        if ((ap_const_boolean_1 = ap_condition_175)) then
            if ((exitcond_flatten_reg_1075 = ap_const_lv1_1)) then 
                ap_phi_mux_exitcond_phi_fu_224_p6 <= ap_const_lv1_0;
            elsif ((exitcond_flatten_reg_1075 = ap_const_lv1_0)) then 
                ap_phi_mux_exitcond_phi_fu_224_p6 <= exitcond3_reg_1070;
            else 
                ap_phi_mux_exitcond_phi_fu_224_p6 <= exitcond_reg_220;
            end if;
        else 
            ap_phi_mux_exitcond_phi_fu_224_p6 <= exitcond_reg_220;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten2_phi_fu_252_p6_assign_proc : process(indvar_flatten2_reg_248, indvar_flatten_next_reg_1025, exitcond_flatten_reg_1075, ap_condition_175)
    begin
        if ((ap_const_boolean_1 = ap_condition_175)) then
            if ((exitcond_flatten_reg_1075 = ap_const_lv1_1)) then 
                ap_phi_mux_indvar_flatten2_phi_fu_252_p6 <= ap_const_lv6_0;
            elsif ((exitcond_flatten_reg_1075 = ap_const_lv1_0)) then 
                ap_phi_mux_indvar_flatten2_phi_fu_252_p6 <= indvar_flatten_next_reg_1025;
            else 
                ap_phi_mux_indvar_flatten2_phi_fu_252_p6 <= indvar_flatten2_reg_248;
            end if;
        else 
            ap_phi_mux_indvar_flatten2_phi_fu_252_p6 <= indvar_flatten2_reg_248;
        end if; 
    end process;


    ap_phi_mux_k3_phi_fu_238_p6_assign_proc : process(k3_reg_234, k_reg_1065, exitcond_flatten_reg_1075, ap_condition_175)
    begin
        if ((ap_const_boolean_1 = ap_condition_175)) then
            if ((exitcond_flatten_reg_1075 = ap_const_lv1_1)) then 
                ap_phi_mux_k3_phi_fu_238_p6 <= ap_const_lv3_0;
            elsif ((exitcond_flatten_reg_1075 = ap_const_lv1_0)) then 
                ap_phi_mux_k3_phi_fu_238_p6 <= k_reg_1065;
            else 
                ap_phi_mux_k3_phi_fu_238_p6 <= k3_reg_234;
            end if;
        else 
            ap_phi_mux_k3_phi_fu_238_p6 <= k3_reg_234;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, exitcond_flatten_fu_993_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_flatten_fu_993_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to2 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_fu_987_p2 <= "1" when (k_fu_981_p2 = ap_const_lv3_7) else "0";
    exitcond_flatten_fu_993_p2 <= "1" when (ap_phi_mux_indvar_flatten2_phi_fu_252_p6 = ap_const_lv6_30) else "0";
    grp_fu_267_p4 <= inStream_V_V_dout(31 downto 16);
    grp_fu_277_p4 <= lastSumDataScale2_V(31 downto 16);
    grp_fu_286_p2 <= std_logic_vector(unsigned(grp_fu_267_p4) + unsigned(grp_fu_277_p4));
    grp_fu_292_p4 <= inStream_V_V_dout(47 downto 32);
    grp_fu_302_p4 <= lastSumDataScale2_V(47 downto 32);
    grp_fu_311_p2 <= std_logic_vector(unsigned(grp_fu_292_p4) + unsigned(grp_fu_302_p4));
    grp_fu_317_p4 <= inStream_V_V_dout(63 downto 48);
    grp_fu_327_p4 <= lastSumDataScale2_V(63 downto 48);
    grp_fu_336_p2 <= std_logic_vector(unsigned(grp_fu_317_p4) + unsigned(grp_fu_327_p4));
    grp_fu_342_p4 <= inStream_V_V_dout(79 downto 64);
    grp_fu_352_p4 <= lastSumDataScale2_V(79 downto 64);
    grp_fu_361_p2 <= std_logic_vector(unsigned(grp_fu_342_p4) + unsigned(grp_fu_352_p4));
    grp_fu_367_p4 <= inStream_V_V_dout(95 downto 80);
    grp_fu_377_p4 <= lastSumDataScale2_V(95 downto 80);
    grp_fu_386_p2 <= std_logic_vector(unsigned(grp_fu_367_p4) + unsigned(grp_fu_377_p4));
    grp_fu_392_p4 <= inStream_V_V_dout(111 downto 96);
    grp_fu_402_p4 <= lastSumDataScale2_V(111 downto 96);
    grp_fu_411_p2 <= std_logic_vector(unsigned(grp_fu_392_p4) + unsigned(grp_fu_402_p4));

    grp_min_fu_262_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_min_fu_262_ap_ce <= ap_const_logic_1;
        else 
            grp_min_fu_262_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_min_fu_262_inArr_V_read <= ((((((tmp_1441_6_reg_1060 & tmp_1441_5_reg_1055) & tmp_1441_4_reg_1050) & tmp_1441_3_reg_1045) & tmp_1441_2_reg_1040) & tmp_1441_1_reg_1035) & tmp_60_reg_1030);

    inStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, inStream_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inStream_V_V_blk_n <= inStream_V_V_empty_n;
        else 
            inStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inStream_V_V_read <= ap_const_logic_1;
        else 
            inStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    indvar_flatten_next_fu_431_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_indvar_flatten2_phi_fu_252_p6));
    k_fu_981_p2 <= std_logic_vector(unsigned(k_mid2_fu_417_p3) + unsigned(ap_const_lv3_1));
    k_mid2_fu_417_p3 <= 
        ap_const_lv3_0 when (ap_phi_mux_exitcond_phi_fu_224_p6(0) = '1') else 
        ap_phi_mux_k3_phi_fu_238_p6;

    outStream_V_blk_n_assign_proc : process(outStream_V_full_n, tmp_reg_1021_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            outStream_V_blk_n <= outStream_V_full_n;
        else 
            outStream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    outStream_V_din <= outputMinData_V_reg_1079;

    outStream_V_write_assign_proc : process(tmp_reg_1021_pp0_iter2_reg, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_reg_1021_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            outStream_V_write <= ap_const_logic_1;
        else 
            outStream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1048_6_fu_859_p8 <= ((((((tmplastTagColValidCn_6_fu_853_p2 & tmplastTagColValidCn_5_fu_769_p2) & tmplastTagColValidCn_4_fu_709_p2) & tmplastTagColValidCn_3_fu_649_p2) & tmplastTagColValidCn_2_fu_589_p2) & tmplastTagColValidCn_1_fu_529_p2) & tmplastTagColValidCn_fu_477_p2);
    p_Result_1051_6_fu_913_p8 <= ((((((tmplastrefTagValidCn_6_fu_907_p2 & tmplastrefTagValidCn_5_fu_799_p2) & tmplastrefTagValidCn_4_fu_739_p2) & tmplastrefTagValidCn_3_fu_679_p2) & tmplastrefTagValidCn_2_fu_619_p2) & tmplastrefTagValidCn_1_fu_559_p2) & tmplastrefTagValidCn_fu_499_p2);
    p_Result_1056_1_fu_505_p4 <= tagColValidCntStream_V_V_dout(11 downto 6);
    p_Result_1056_2_fu_565_p4 <= tagColValidCntStream_V_V_dout(17 downto 12);
    p_Result_1056_3_fu_625_p4 <= tagColValidCntStream_V_V_dout(23 downto 18);
    p_Result_1056_4_fu_685_p4 <= tagColValidCntStream_V_V_dout(29 downto 24);
    p_Result_1056_5_fu_745_p4 <= tagColValidCntStream_V_V_dout(35 downto 30);
    p_Result_1056_6_fu_829_p4 <= tagColValidCntStream_V_V_dout(41 downto 36);
    p_Result_1057_1_fu_515_p4 <= lastTagColValidCntSu(17 downto 9);
    p_Result_1057_2_fu_575_p4 <= lastTagColValidCntSu(26 downto 18);
    p_Result_1057_3_fu_635_p4 <= lastTagColValidCntSu(35 downto 27);
    p_Result_1057_4_fu_695_p4 <= lastTagColValidCntSu(44 downto 36);
    p_Result_1057_5_fu_755_p4 <= lastTagColValidCntSu(53 downto 45);
    p_Result_1057_6_fu_839_p4 <= lastTagColValidCntSu(62 downto 54);
    p_Result_1058_1_fu_535_p4 <= refTagValidCntStream_V_V_dout(11 downto 6);
    p_Result_1058_2_fu_595_p4 <= refTagValidCntStream_V_V_dout(17 downto 12);
    p_Result_1058_3_fu_655_p4 <= refTagValidCntStream_V_V_dout(23 downto 18);
    p_Result_1058_4_fu_715_p4 <= refTagValidCntStream_V_V_dout(29 downto 24);
    p_Result_1058_5_fu_775_p4 <= refTagValidCntStream_V_V_dout(35 downto 30);
    p_Result_1058_6_fu_883_p4 <= refTagValidCntStream_V_V_dout(41 downto 36);
    p_Result_1059_1_fu_545_p4 <= lastrefTagValidCntSu(17 downto 9);
    p_Result_1059_2_fu_605_p4 <= lastrefTagValidCntSu(26 downto 18);
    p_Result_1059_3_fu_665_p4 <= lastrefTagValidCntSu(35 downto 27);
    p_Result_1059_4_fu_725_p4 <= lastrefTagValidCntSu(44 downto 36);
    p_Result_1059_5_fu_785_p4 <= lastrefTagValidCntSu(53 downto 45);
    p_Result_1059_6_fu_893_p4 <= lastrefTagValidCntSu(62 downto 54);

    refTagValidCntStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, refTagValidCntStream_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            refTagValidCntStream_V_V_blk_n <= refTagValidCntStream_V_V_empty_n;
        else 
            refTagValidCntStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    refTagValidCntStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            refTagValidCntStream_V_V_read <= ap_const_logic_1;
        else 
            refTagValidCntStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    refZeroCntStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, refZeroCntStream_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            refZeroCntStream_V_V_blk_n <= refZeroCntStream_V_V_empty_n;
        else 
            refZeroCntStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    refZeroCntStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            refZeroCntStream_V_V_read <= ap_const_logic_1;
        else 
            refZeroCntStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    tagColValidCntStream_V_V_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tagColValidCntStream_V_V_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tagColValidCntStream_V_V_blk_n <= tagColValidCntStream_V_V_empty_n;
        else 
            tagColValidCntStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tagColValidCntStream_V_V_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tagColValidCntStream_V_V_read <= ap_const_logic_1;
        else 
            tagColValidCntStream_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1448_1_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1056_1_fu_505_p4),9));
    tmp_1448_2_fu_585_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1056_2_fu_565_p4),9));
    tmp_1448_3_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1056_3_fu_625_p4),9));
    tmp_1448_4_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1056_4_fu_685_p4),9));
    tmp_1448_5_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1056_5_fu_745_p4),9));
    tmp_1448_6_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1056_6_fu_829_p4),9));
    tmp_1449_1_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1058_1_fu_535_p4),9));
    tmp_1449_2_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1058_2_fu_595_p4),9));
    tmp_1449_3_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1058_3_fu_655_p4),9));
    tmp_1449_4_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1058_4_fu_715_p4),9));
    tmp_1449_5_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1058_5_fu_775_p4),9));
    tmp_1449_6_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1058_6_fu_883_p4),9));
    tmp_3019_fu_437_p1 <= inStream_V_V_dout(16 - 1 downto 0);
    tmp_3020_fu_451_p1 <= lastSumDataScale2_V(16 - 1 downto 0);
    tmp_3023_fu_461_p1 <= tagColValidCntStream_V_V_dout(6 - 1 downto 0);
    tmp_3024_fu_469_p1 <= lastTagColValidCntSu(9 - 1 downto 0);
    tmp_3025_fu_483_p1 <= refTagValidCntStream_V_V_dout(6 - 1 downto 0);
    tmp_3026_fu_491_p1 <= lastrefTagValidCntSu(9 - 1 downto 0);
    tmp_60_fu_455_p2 <= std_logic_vector(unsigned(tmp_3020_fu_451_p1) + unsigned(tmp_3019_fu_437_p1));
    tmp_70_fu_473_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3023_fu_461_p1),9));
    tmp_71_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3025_fu_483_p1),9));
    tmp_78_fu_805_p8 <= ((((((grp_fu_411_p2 & grp_fu_386_p2) & grp_fu_361_p2) & grp_fu_336_p2) & grp_fu_311_p2) & grp_fu_286_p2) & tmp_60_fu_455_p2);
    tmp_79_fu_945_p2 <= std_logic_vector(unsigned(tmp_s_fu_937_p1) + unsigned(lastSumRefZeroCntSca));
    tmp_fu_425_p2 <= "1" when (k_mid2_fu_417_p3 = ap_const_lv3_6) else "0";
    tmp_s_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(refZeroCntStream_V_V_dout),16));
    tmplastTagColValidCn_1_fu_529_p2 <= std_logic_vector(unsigned(tmp_1448_1_fu_525_p1) + unsigned(p_Result_1057_1_fu_515_p4));
    tmplastTagColValidCn_2_fu_589_p2 <= std_logic_vector(unsigned(tmp_1448_2_fu_585_p1) + unsigned(p_Result_1057_2_fu_575_p4));
    tmplastTagColValidCn_3_fu_649_p2 <= std_logic_vector(unsigned(tmp_1448_3_fu_645_p1) + unsigned(p_Result_1057_3_fu_635_p4));
    tmplastTagColValidCn_4_fu_709_p2 <= std_logic_vector(unsigned(tmp_1448_4_fu_705_p1) + unsigned(p_Result_1057_4_fu_695_p4));
    tmplastTagColValidCn_5_fu_769_p2 <= std_logic_vector(unsigned(tmp_1448_5_fu_765_p1) + unsigned(p_Result_1057_5_fu_755_p4));
    tmplastTagColValidCn_6_fu_853_p2 <= std_logic_vector(unsigned(tmp_1448_6_fu_849_p1) + unsigned(p_Result_1057_6_fu_839_p4));
    tmplastTagColValidCn_fu_477_p2 <= std_logic_vector(unsigned(tmp_70_fu_473_p1) + unsigned(tmp_3024_fu_469_p1));
    tmplastrefTagValidCn_1_fu_559_p2 <= std_logic_vector(unsigned(tmp_1449_1_fu_555_p1) + unsigned(p_Result_1059_1_fu_545_p4));
    tmplastrefTagValidCn_2_fu_619_p2 <= std_logic_vector(unsigned(tmp_1449_2_fu_615_p1) + unsigned(p_Result_1059_2_fu_605_p4));
    tmplastrefTagValidCn_3_fu_679_p2 <= std_logic_vector(unsigned(tmp_1449_3_fu_675_p1) + unsigned(p_Result_1059_3_fu_665_p4));
    tmplastrefTagValidCn_4_fu_739_p2 <= std_logic_vector(unsigned(tmp_1449_4_fu_735_p1) + unsigned(p_Result_1059_4_fu_725_p4));
    tmplastrefTagValidCn_5_fu_799_p2 <= std_logic_vector(unsigned(tmp_1449_5_fu_795_p1) + unsigned(p_Result_1059_5_fu_785_p4));
    tmplastrefTagValidCn_6_fu_907_p2 <= std_logic_vector(unsigned(tmp_1449_6_fu_903_p1) + unsigned(p_Result_1059_6_fu_893_p4));
    tmplastrefTagValidCn_fu_499_p2 <= std_logic_vector(unsigned(tmp_71_fu_495_p1) + unsigned(tmp_3026_fu_491_p1));
end behav;

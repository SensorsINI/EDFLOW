-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity findStreamMinScale1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    inStream_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    inStream_V_empty_n : IN STD_LOGIC;
    inStream_V_read : OUT STD_LOGIC;
    OF_yStream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    OF_yStream_V_empty_n : IN STD_LOGIC;
    OF_yStream_V_read : OUT STD_LOGIC;
    minStream_V_V_din : OUT STD_LOGIC_VECTOR (14 downto 0);
    minStream_V_V_full_n : IN STD_LOGIC;
    minStream_V_V_write : OUT STD_LOGIC;
    OFStream_V_V_din : OUT STD_LOGIC_VECTOR (5 downto 0);
    OFStream_V_V_full_n : IN STD_LOGIC;
    OFStream_V_V_write : OUT STD_LOGIC );
end;


architecture behav of findStreamMinScale1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv15_7FFF : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal currentMinScale1_V : STD_LOGIC_VECTOR (14 downto 0) := "111111111111111";
    signal inStream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal exitcond_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal OF_yStream_V_blk_n : STD_LOGIC;
    signal minStream_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_s_reg_225 : STD_LOGIC_VECTOR (0 downto 0);
    signal OFStream_V_V_blk_n : STD_LOGIC;
    signal i_fu_114_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_215 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal tmpOF_y_V_fu_120_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmpOF_y_V_reg_220 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compCond_V_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compCond_V_reg_229 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_175_fu_148_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_V_175_reg_234 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Repl2_47_reg_92 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal tmpVal_V_fu_185_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_V_fu_62 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_23_fu_162_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1078_cast_fu_134_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2536_fu_144_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Result_s_fu_178_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    currentMinScale1_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_0 = OFStream_V_V_full_n)) or ((tmp_s_reg_225 = ap_const_lv1_1) and (minStream_V_V_full_n = ap_const_logic_0)))) and (tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                currentMinScale1_V <= ap_const_lv15_7FFF;
            elsif ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (tmp_s_fu_124_p2 = ap_const_lv1_0) and (exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                currentMinScale1_V <= tmp_V_175_fu_148_p3;
            end if; 
        end if;
    end process;

    p_Repl2_47_reg_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_0 = OFStream_V_V_full_n)) or ((tmp_s_reg_225 = ap_const_lv1_1) and (minStream_V_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_Repl2_47_reg_92 <= i_reg_215;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_Repl2_47_reg_92 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    tmp_V_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_0 = OFStream_V_V_full_n)) or ((tmp_s_reg_225 = ap_const_lv1_1) and (minStream_V_V_full_n = ap_const_logic_0)))) and (tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                tmp_V_fu_62 <= tmpVal_V_fu_185_p3;
            elsif ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (compCond_V_fu_138_p2 = ap_const_lv1_1) and (tmp_s_fu_124_p2 = ap_const_lv1_0) and (exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                tmp_V_fu_62 <= p_Result_23_fu_162_p3;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tmp_V_fu_62 <= ap_const_lv6_3F;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                compCond_V_reg_229 <= compCond_V_fu_138_p2;
                tmpOF_y_V_reg_220 <= tmpOF_y_V_fu_120_p1;
                tmp_V_175_reg_234 <= tmp_V_175_fu_148_p3;
                tmp_s_reg_225 <= tmp_s_fu_124_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_reg_215 <= i_fu_114_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, inStream_V_empty_n, OF_yStream_V_empty_n, minStream_V_V_full_n, OFStream_V_V_full_n, ap_CS_fsm_state2, exitcond_fu_108_p2, ap_CS_fsm_state3, tmp_s_reg_225)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (exitcond_fu_108_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not((((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_0 = OFStream_V_V_full_n)) or ((tmp_s_reg_225 = ap_const_lv1_1) and (minStream_V_V_full_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    OFStream_V_V_blk_n_assign_proc : process(OFStream_V_V_full_n, ap_CS_fsm_state3, tmp_s_reg_225)
    begin
        if (((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OFStream_V_V_blk_n <= OFStream_V_V_full_n;
        else 
            OFStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OFStream_V_V_din <= 
        p_Result_s_fu_178_p3 when (compCond_V_reg_229(0) = '1') else 
        tmp_V_fu_62;

    OFStream_V_V_write_assign_proc : process(minStream_V_V_full_n, OFStream_V_V_full_n, ap_CS_fsm_state3, tmp_s_reg_225)
    begin
        if ((not((((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_0 = OFStream_V_V_full_n)) or ((tmp_s_reg_225 = ap_const_lv1_1) and (minStream_V_V_full_n = ap_const_logic_0)))) and (tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            OFStream_V_V_write <= ap_const_logic_1;
        else 
            OFStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    OF_yStream_V_blk_n_assign_proc : process(OF_yStream_V_empty_n, ap_CS_fsm_state2, exitcond_fu_108_p2)
    begin
        if (((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OF_yStream_V_blk_n <= OF_yStream_V_empty_n;
        else 
            OF_yStream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    OF_yStream_V_read_assign_proc : process(inStream_V_empty_n, OF_yStream_V_empty_n, ap_CS_fsm_state2, exitcond_fu_108_p2)
    begin
        if ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            OF_yStream_V_read <= ap_const_logic_1;
        else 
            OF_yStream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_block_state2_assign_proc : process(inStream_V_empty_n, OF_yStream_V_empty_n, exitcond_fu_108_p2)
    begin
                ap_block_state2 <= (((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state3_assign_proc : process(minStream_V_V_full_n, OFStream_V_V_full_n, tmp_s_reg_225)
    begin
                ap_block_state3 <= (((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_0 = OFStream_V_V_full_n)) or ((tmp_s_reg_225 = ap_const_lv1_1) and (minStream_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, inStream_V_empty_n, OF_yStream_V_empty_n, ap_CS_fsm_state2, exitcond_fu_108_p2)
    begin
        if (((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (exitcond_fu_108_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(inStream_V_empty_n, OF_yStream_V_empty_n, ap_CS_fsm_state2, exitcond_fu_108_p2)
    begin
        if ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (exitcond_fu_108_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    compCond_V_fu_138_p2 <= "1" when (signed(inStream_V_dout) < signed(tmp_1078_cast_fu_134_p1)) else "0";
    exitcond_fu_108_p2 <= "1" when (p_Repl2_47_reg_92 = ap_const_lv3_7) else "0";
    i_fu_114_p2 <= std_logic_vector(unsigned(p_Repl2_47_reg_92) + unsigned(ap_const_lv3_1));

    inStream_V_blk_n_assign_proc : process(inStream_V_empty_n, ap_CS_fsm_state2, exitcond_fu_108_p2)
    begin
        if (((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            inStream_V_blk_n <= inStream_V_empty_n;
        else 
            inStream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    inStream_V_read_assign_proc : process(inStream_V_empty_n, OF_yStream_V_empty_n, ap_CS_fsm_state2, exitcond_fu_108_p2)
    begin
        if ((not((((exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_0 = OF_yStream_V_empty_n)) or ((exitcond_fu_108_p2 = ap_const_lv1_0) and (inStream_V_empty_n = ap_const_logic_0)))) and (exitcond_fu_108_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            inStream_V_read <= ap_const_logic_1;
        else 
            inStream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    minStream_V_V_blk_n_assign_proc : process(minStream_V_V_full_n, ap_CS_fsm_state3, tmp_s_reg_225)
    begin
        if (((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            minStream_V_V_blk_n <= minStream_V_V_full_n;
        else 
            minStream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    minStream_V_V_din <= tmp_V_175_reg_234;

    minStream_V_V_write_assign_proc : process(minStream_V_V_full_n, OFStream_V_V_full_n, ap_CS_fsm_state3, tmp_s_reg_225)
    begin
        if ((not((((tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_0 = OFStream_V_V_full_n)) or ((tmp_s_reg_225 = ap_const_lv1_1) and (minStream_V_V_full_n = ap_const_logic_0)))) and (tmp_s_reg_225 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            minStream_V_V_write <= ap_const_logic_1;
        else 
            minStream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_23_fu_162_p3 <= (tmpOF_y_V_fu_120_p1 & p_Repl2_47_reg_92);
    p_Result_s_fu_178_p3 <= (tmpOF_y_V_reg_220 & ap_const_lv3_6);
    tmpOF_y_V_fu_120_p1 <= OF_yStream_V_dout(3 - 1 downto 0);
    tmpVal_V_fu_185_p3 <= 
        p_Result_s_fu_178_p3 when (compCond_V_reg_229(0) = '1') else 
        tmp_V_fu_62;
    tmp_1078_cast_fu_134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(currentMinScale1_V),16));
    tmp_2536_fu_144_p1 <= inStream_V_dout(15 - 1 downto 0);
    tmp_V_175_fu_148_p3 <= 
        tmp_2536_fu_144_p1 when (compCond_V_fu_138_p2(0) = '1') else 
        currentMinScale1_V;
    tmp_s_fu_124_p2 <= "1" when (p_Repl2_47_reg_92 = ap_const_lv3_6) else "0";
end behav;

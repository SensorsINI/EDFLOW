-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity XYTSStreamToRawStream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    streamOut_V_V_TREADY : IN STD_LOGIC;
    xStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    xStreamIn_V_V_TVALID : IN STD_LOGIC;
    xStreamIn_V_V_TREADY : OUT STD_LOGIC;
    yStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    yStreamIn_V_V_TVALID : IN STD_LOGIC;
    yStreamIn_V_V_TREADY : OUT STD_LOGIC;
    tsStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    tsStreamIn_V_V_TVALID : IN STD_LOGIC;
    tsStreamIn_V_V_TREADY : OUT STD_LOGIC;
    polStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    polStreamIn_V_V_TVALID : IN STD_LOGIC;
    polStreamIn_V_V_TREADY : OUT STD_LOGIC;
    custDataStreamIn_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    custDataStreamIn_V_V_TVALID : IN STD_LOGIC;
    custDataStreamIn_V_V_TREADY : OUT STD_LOGIC;
    streamOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    streamOut_V_V_TVALID : OUT STD_LOGIC;
    tsReg_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    tsReg_V_ap_vld : OUT STD_LOGIC;
    glLastTSReg_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    glLastTSReg_V_ap_vld : OUT STD_LOGIC;
    yReg_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    yReg_V_ap_vld : OUT STD_LOGIC;
    glLastYReg_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    glLastYReg_V_ap_vld : OUT STD_LOGIC;
    tsDiffFlgReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    tsDiffFlgReg_V_ap_vld : OUT STD_LOGIC;
    yDiffFlgReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    yDiffFlgReg_V_ap_vld : OUT STD_LOGIC;
    rotateInfoOutReg_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    rotateInfoOutReg_V_ap_vld : OUT STD_LOGIC;
    nonMonTSDiffFlgReg_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    nonMonTSDiffFlgReg_V_ap_vld : OUT STD_LOGIC;
    tsWrappedVal_V : OUT STD_LOGIC_VECTOR (11 downto 0);
    tsWrappedVal_V_ap_vld : OUT STD_LOGIC );
end;


architecture behav of XYTSStreamToRawStream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "XYTSStreamToRawStream,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=5.523000,HLS_SYN_LAT=6,HLS_SYN_TPT=4,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=801,HLS_SYN_LUT=603}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal streamOut_V_V_1_ack_in : STD_LOGIC;
    signal tmp_9_reg_550 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_580 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op57_write_state4 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal xStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal xStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal xStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal xStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal xStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal xStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal xStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal xStreamIn_V_V_0_sel : STD_LOGIC;
    signal xStreamIn_V_V_0_load_A : STD_LOGIC;
    signal xStreamIn_V_V_0_load_B : STD_LOGIC;
    signal xStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal xStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal yStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal yStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal yStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal yStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal yStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal yStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal yStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal yStreamIn_V_V_0_sel : STD_LOGIC;
    signal yStreamIn_V_V_0_load_A : STD_LOGIC;
    signal yStreamIn_V_V_0_load_B : STD_LOGIC;
    signal yStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal yStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal tsStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal tsStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal tsStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal tsStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal tsStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (63 downto 0);
    signal tsStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal tsStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal tsStreamIn_V_V_0_sel : STD_LOGIC;
    signal tsStreamIn_V_V_0_load_A : STD_LOGIC;
    signal tsStreamIn_V_V_0_load_B : STD_LOGIC;
    signal tsStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tsStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal polStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal polStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal polStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal polStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal polStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (7 downto 0);
    signal polStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal polStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal polStreamIn_V_V_0_sel : STD_LOGIC;
    signal polStreamIn_V_V_0_load_A : STD_LOGIC;
    signal polStreamIn_V_V_0_load_B : STD_LOGIC;
    signal polStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal polStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal custDataStreamIn_V_V_0_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal custDataStreamIn_V_V_0_vld_in : STD_LOGIC;
    signal custDataStreamIn_V_V_0_vld_out : STD_LOGIC;
    signal custDataStreamIn_V_V_0_ack_in : STD_LOGIC;
    signal custDataStreamIn_V_V_0_ack_out : STD_LOGIC;
    signal custDataStreamIn_V_V_0_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal custDataStreamIn_V_V_0_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal custDataStreamIn_V_V_0_sel_rd : STD_LOGIC := '0';
    signal custDataStreamIn_V_V_0_sel_wr : STD_LOGIC := '0';
    signal custDataStreamIn_V_V_0_sel : STD_LOGIC;
    signal custDataStreamIn_V_V_0_load_A : STD_LOGIC;
    signal custDataStreamIn_V_V_0_load_B : STD_LOGIC;
    signal custDataStreamIn_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal custDataStreamIn_V_V_0_state_cmp_full : STD_LOGIC;
    signal streamOut_V_V_1_data_in : STD_LOGIC_VECTOR (15 downto 0);
    signal streamOut_V_V_1_data_out : STD_LOGIC_VECTOR (15 downto 0);
    signal streamOut_V_V_1_vld_in : STD_LOGIC;
    signal streamOut_V_V_1_vld_out : STD_LOGIC;
    signal streamOut_V_V_1_ack_out : STD_LOGIC;
    signal streamOut_V_V_1_payload_A : STD_LOGIC_VECTOR (15 downto 0);
    signal streamOut_V_V_1_payload_B : STD_LOGIC_VECTOR (15 downto 0);
    signal streamOut_V_V_1_sel_rd : STD_LOGIC := '0';
    signal streamOut_V_V_1_sel_wr : STD_LOGIC := '0';
    signal streamOut_V_V_1_sel : STD_LOGIC;
    signal streamOut_V_V_1_load_A : STD_LOGIC;
    signal streamOut_V_V_1_load_B : STD_LOGIC;
    signal streamOut_V_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal streamOut_V_V_1_state_cmp_full : STD_LOGIC;
    signal glLastRotateTs_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal glRotateDeltaTs_V : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    signal glLastTS_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal glLastTsWrap_V : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    signal glLastY_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal xStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal yStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal tsStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal polStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal custDataStreamIn_V_V_TDATA_blk_n : STD_LOGIC;
    signal streamOut_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_9_reg_550_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_6_reg_500 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_predicate_op81_write_state6 : BOOLEAN;
    signal ap_predicate_op83_write_state6 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_V_8_reg_507 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_fu_287_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_514 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_301_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_4_reg_519 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_fu_305_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_reg_524 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_309_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_reg_529 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_V_9_reg_534 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_313_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_539 : STD_LOGIC_VECTOR (0 downto 0);
    signal glLastTS_V_load_reg_544 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_9_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_554 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_371_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_reg_560 : STD_LOGIC_VECTOR (11 downto 0);
    signal rev1_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_predicate_op111_write_state7 : BOOLEAN;
    signal ap_predicate_op112_write_state7 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tsRaw_V_fu_430_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_1_fu_438_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_fu_450_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_2_fu_471_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op72_write_state5 : BOOLEAN;
    signal ap_predicate_op74_write_state5 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_Result_3_fu_476_p5 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_p_0171_1_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0144_1_reg_233 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter0_p_2_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_2_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_082_1_reg_265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_p_082_1_reg_265 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_333_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tsWrap_V_fu_291_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_reg_ioackin_tsReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_glLastTSReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_yReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_glLastYReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_nonMonTSDiffFlgReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_tsWrappedVal_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_rotateInfoOutReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_tsDiffFlgReg_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_yDiffFlgReg_V_dummy_ack : STD_LOGIC := '0';
    signal tmp_10_fu_321_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_11_fu_329_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal ult_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_404_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmpWradDiffVal_V_fu_413_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tsRaw_V_1_fu_418_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tsRaw_V_1_cast_fu_426_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_387_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_463_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_glLastTSReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_glLastTSReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_11001)) then 
                        ap_reg_ioackin_glLastTSReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_glLastTSReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_glLastYReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_glLastYReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_11001)) then 
                        ap_reg_ioackin_glLastYReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_glLastYReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_nonMonTSDiffFlgReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_nonMonTSDiffFlgReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_11001)) then 
                        ap_reg_ioackin_nonMonTSDiffFlgReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_nonMonTSDiffFlgReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_rotateInfoOutReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_rotateInfoOutReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_11001)) then 
                        ap_reg_ioackin_rotateInfoOutReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_rotateInfoOutReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_tsDiffFlgReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_tsDiffFlgReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_11001)) then 
                        ap_reg_ioackin_tsDiffFlgReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_tsDiffFlgReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_tsReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_tsReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_11001)) then 
                        ap_reg_ioackin_tsReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_tsReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_tsWrappedVal_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_tsWrappedVal_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_11001)) then 
                        ap_reg_ioackin_tsWrappedVal_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_tsWrappedVal_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_yDiffFlgReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_yDiffFlgReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_11001)) then 
                        ap_reg_ioackin_yDiffFlgReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_yDiffFlgReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_yReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_yReg_V_dummy_ack <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_11001)) then 
                        ap_reg_ioackin_yReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_yReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    custDataStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                custDataStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((custDataStreamIn_V_V_0_ack_out = ap_const_logic_1) and (custDataStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        custDataStreamIn_V_V_0_sel_rd <= not(custDataStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    custDataStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                custDataStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((custDataStreamIn_V_V_0_ack_in = ap_const_logic_1) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        custDataStreamIn_V_V_0_sel_wr <= not(custDataStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    custDataStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                custDataStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((custDataStreamIn_V_V_0_state = ap_const_lv2_2) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_3) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_0) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((custDataStreamIn_V_V_0_state = ap_const_lv2_1) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_3) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_0) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((custDataStreamIn_V_V_0_vld_in = ap_const_logic_0) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((custDataStreamIn_V_V_0_ack_out = ap_const_logic_0) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (custDataStreamIn_V_V_0_state = ap_const_lv2_3)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_1) and (custDataStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((custDataStreamIn_V_V_0_state = ap_const_lv2_2) and (custDataStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    custDataStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    polStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((polStreamIn_V_V_0_ack_out = ap_const_logic_1) and (polStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        polStreamIn_V_V_0_sel_rd <= not(polStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    polStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((polStreamIn_V_V_0_ack_in = ap_const_logic_1) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        polStreamIn_V_V_0_sel_wr <= not(polStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    polStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                polStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((polStreamIn_V_V_0_state = ap_const_lv2_2) and (polStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((polStreamIn_V_V_0_state = ap_const_lv2_3) and (polStreamIn_V_V_0_vld_in = ap_const_logic_0) and (polStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    polStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((polStreamIn_V_V_0_state = ap_const_lv2_1) and (polStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((polStreamIn_V_V_0_state = ap_const_lv2_3) and (polStreamIn_V_V_0_ack_out = ap_const_logic_0) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    polStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((polStreamIn_V_V_0_vld_in = ap_const_logic_0) and (polStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((polStreamIn_V_V_0_ack_out = ap_const_logic_0) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (polStreamIn_V_V_0_state = ap_const_lv2_3)) or ((polStreamIn_V_V_0_state = ap_const_lv2_1) and (polStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((polStreamIn_V_V_0_state = ap_const_lv2_2) and (polStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    polStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    polStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    streamOut_V_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                streamOut_V_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((streamOut_V_V_1_ack_out = ap_const_logic_1) and (streamOut_V_V_1_vld_out = ap_const_logic_1))) then 
                                        streamOut_V_V_1_sel_rd <= not(streamOut_V_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    streamOut_V_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                streamOut_V_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((streamOut_V_V_1_ack_in = ap_const_logic_1) and (streamOut_V_V_1_vld_in = ap_const_logic_1))) then 
                                        streamOut_V_V_1_sel_wr <= not(streamOut_V_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    streamOut_V_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                streamOut_V_V_1_state <= ap_const_lv2_0;
            else
                if ((((streamOut_V_V_1_state = ap_const_lv2_2) and (streamOut_V_V_1_vld_in = ap_const_logic_0)) or ((streamOut_V_V_1_state = ap_const_lv2_3) and (streamOut_V_V_1_vld_in = ap_const_logic_0) and (streamOut_V_V_1_ack_out = ap_const_logic_1)))) then 
                    streamOut_V_V_1_state <= ap_const_lv2_2;
                elsif ((((streamOut_V_V_1_state = ap_const_lv2_1) and (streamOut_V_V_1_ack_out = ap_const_logic_0)) or ((streamOut_V_V_1_state = ap_const_lv2_3) and (streamOut_V_V_1_ack_out = ap_const_logic_0) and (streamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    streamOut_V_V_1_state <= ap_const_lv2_1;
                elsif (((not(((streamOut_V_V_1_vld_in = ap_const_logic_0) and (streamOut_V_V_1_ack_out = ap_const_logic_1))) and not(((streamOut_V_V_1_ack_out = ap_const_logic_0) and (streamOut_V_V_1_vld_in = ap_const_logic_1))) and (streamOut_V_V_1_state = ap_const_lv2_3)) or ((streamOut_V_V_1_state = ap_const_lv2_1) and (streamOut_V_V_1_ack_out = ap_const_logic_1)) or ((streamOut_V_V_1_state = ap_const_lv2_2) and (streamOut_V_V_1_vld_in = ap_const_logic_1)))) then 
                    streamOut_V_V_1_state <= ap_const_lv2_3;
                else 
                    streamOut_V_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    tsStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                tsStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((tsStreamIn_V_V_0_ack_out = ap_const_logic_1) and (tsStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        tsStreamIn_V_V_0_sel_rd <= not(tsStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    tsStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                tsStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((tsStreamIn_V_V_0_ack_in = ap_const_logic_1) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        tsStreamIn_V_V_0_sel_wr <= not(tsStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    tsStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                tsStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((tsStreamIn_V_V_0_state = ap_const_lv2_2) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_3) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_0) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((tsStreamIn_V_V_0_state = ap_const_lv2_1) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_3) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_0) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((tsStreamIn_V_V_0_vld_in = ap_const_logic_0) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((tsStreamIn_V_V_0_ack_out = ap_const_logic_0) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (tsStreamIn_V_V_0_state = ap_const_lv2_3)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_1) and (tsStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((tsStreamIn_V_V_0_state = ap_const_lv2_2) and (tsStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    tsStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    xStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                xStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((xStreamIn_V_V_0_ack_out = ap_const_logic_1) and (xStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        xStreamIn_V_V_0_sel_rd <= not(xStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    xStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                xStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((xStreamIn_V_V_0_ack_in = ap_const_logic_1) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        xStreamIn_V_V_0_sel_wr <= not(xStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    xStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                xStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((xStreamIn_V_V_0_state = ap_const_lv2_2) and (xStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((xStreamIn_V_V_0_state = ap_const_lv2_3) and (xStreamIn_V_V_0_vld_in = ap_const_logic_0) and (xStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    xStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((xStreamIn_V_V_0_state = ap_const_lv2_1) and (xStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((xStreamIn_V_V_0_state = ap_const_lv2_3) and (xStreamIn_V_V_0_ack_out = ap_const_logic_0) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    xStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif ((((xStreamIn_V_V_0_state = ap_const_lv2_1) and (xStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((xStreamIn_V_V_0_state = ap_const_lv2_2) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1)) or (not(((xStreamIn_V_V_0_vld_in = ap_const_logic_0) and (xStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((xStreamIn_V_V_0_ack_out = ap_const_logic_0) and (xStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (xStreamIn_V_V_0_state = ap_const_lv2_3)))) then 
                    xStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    xStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    yStreamIn_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                yStreamIn_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((yStreamIn_V_V_0_ack_out = ap_const_logic_1) and (yStreamIn_V_V_0_vld_out = ap_const_logic_1))) then 
                                        yStreamIn_V_V_0_sel_rd <= not(yStreamIn_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    yStreamIn_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                yStreamIn_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((yStreamIn_V_V_0_ack_in = ap_const_logic_1) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1))) then 
                                        yStreamIn_V_V_0_sel_wr <= not(yStreamIn_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    yStreamIn_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                yStreamIn_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((yStreamIn_V_V_0_state = ap_const_lv2_2) and (yStreamIn_V_V_0_vld_in = ap_const_logic_0)) or ((yStreamIn_V_V_0_state = ap_const_lv2_3) and (yStreamIn_V_V_0_vld_in = ap_const_logic_0) and (yStreamIn_V_V_0_ack_out = ap_const_logic_1)))) then 
                    yStreamIn_V_V_0_state <= ap_const_lv2_2;
                elsif ((((yStreamIn_V_V_0_state = ap_const_lv2_1) and (yStreamIn_V_V_0_ack_out = ap_const_logic_0)) or ((yStreamIn_V_V_0_state = ap_const_lv2_3) and (yStreamIn_V_V_0_ack_out = ap_const_logic_0) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    yStreamIn_V_V_0_state <= ap_const_lv2_1;
                elsif (((not(((yStreamIn_V_V_0_vld_in = ap_const_logic_0) and (yStreamIn_V_V_0_ack_out = ap_const_logic_1))) and not(((yStreamIn_V_V_0_ack_out = ap_const_logic_0) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1))) and (yStreamIn_V_V_0_state = ap_const_lv2_3)) or ((yStreamIn_V_V_0_state = ap_const_lv2_1) and (yStreamIn_V_V_0_ack_out = ap_const_logic_1)) or ((yStreamIn_V_V_0_state = ap_const_lv2_2) and (yStreamIn_V_V_0_vld_in = ap_const_logic_1)))) then 
                    yStreamIn_V_V_0_state <= ap_const_lv2_3;
                else 
                    yStreamIn_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_p_0144_1_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_1) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_p_0144_1_reg_233 <= ap_const_lv12_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_p_0144_1_reg_233 <= p_1_fu_438_p3;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_p_0171_1_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_1) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_p_0171_1_reg_218 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_p_0171_1_reg_218 <= rev1_fu_398_p2;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_p_082_1_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_p_082_1_reg_265 <= ap_const_lv1_1;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_1) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_p_082_1_reg_265 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_p_2_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_s_fu_445_p2 = ap_const_lv1_1) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
                ap_phi_reg_pp0_iter0_p_2_reg_248 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                ap_phi_reg_pp0_iter0_p_2_reg_248 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter1_p_082_1_reg_265 <= ap_phi_reg_pp0_iter0_p_082_1_reg_265;
                ap_phi_reg_pp0_iter1_p_2_reg_248 <= ap_phi_reg_pp0_iter0_p_2_reg_248;
                glLastY_V <= tmp_V_8_reg_507;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((custDataStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                custDataStreamIn_V_V_0_payload_A <= custDataStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((custDataStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                custDataStreamIn_V_V_0_payload_B <= custDataStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_fu_313_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                glLastRotateTs_V <= tsStreamIn_V_V_0_data_out;
                glRotateDeltaTs_V <= tmp_7_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                glLastTS_V <= tsStreamIn_V_V_0_data_out;
                glLastTsWrap_V <= tsStreamIn_V_V_0_data_out(63 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                glLastTS_V_load_reg_544 <= glLastTS_V;
                tmp_4_reg_519 <= tmp_4_fu_301_p1;
                tmp_5_reg_524 <= tmp_5_fu_305_p1;
                tmp_6_reg_529 <= tmp_6_fu_309_p1;
                tmp_8_reg_539 <= custDataStreamIn_V_V_0_data_out(10 downto 10);
                tmp_9_reg_550 <= tmp_9_fu_355_p2;
                tmp_9_reg_550_pp0_iter1_reg <= tmp_9_reg_550;
                tmp_V_6_reg_500 <= tsStreamIn_V_V_0_data_out;
                tmp_V_8_reg_507 <= xStreamIn_V_V_0_data_out;
                tmp_V_9_reg_534 <= custDataStreamIn_V_V_0_data_out;
                tmp_V_reg_514 <= tmp_V_fu_287_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                polStreamIn_V_V_0_payload_A <= polStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((polStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                polStreamIn_V_V_0_payload_B <= polStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((streamOut_V_V_1_load_A = ap_const_logic_1)) then
                streamOut_V_V_1_payload_A <= streamOut_V_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((streamOut_V_V_1_load_B = ap_const_logic_1)) then
                streamOut_V_V_1_payload_B <= streamOut_V_V_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_9_fu_355_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_12_reg_560 <= tmp_12_fu_371_p1;
                tmp_1_reg_554 <= tmp_1_fu_365_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_s_reg_580 <= tmp_s_fu_445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tsStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                tsStreamIn_V_V_0_payload_A <= tsStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tsStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                tsStreamIn_V_V_0_payload_B <= tsStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((xStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                xStreamIn_V_V_0_payload_A <= xStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((xStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                xStreamIn_V_V_0_payload_B <= xStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((yStreamIn_V_V_0_load_A = ap_const_logic_1)) then
                yStreamIn_V_V_0_payload_A <= yStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((yStreamIn_V_V_0_load_B = ap_const_logic_1)) then
                yStreamIn_V_V_0_payload_B <= yStreamIn_V_V_TDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out, ap_block_state6_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out, ap_block_state6_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state6_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter1, streamOut_V_V_1_ack_in)
    begin
                ap_block_pp0_stage2_01001 <= ((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_1_ack_in, ap_block_state3_io, ap_block_state7_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((streamOut_V_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_io))) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, streamOut_V_V_1_ack_in, ap_block_state3_io, ap_block_state7_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((streamOut_V_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state7_io))) or ((ap_const_boolean_1 = ap_block_state3_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(xStreamIn_V_V_0_vld_out, yStreamIn_V_V_0_vld_out, tsStreamIn_V_V_0_vld_out, polStreamIn_V_V_0_vld_out, custDataStreamIn_V_V_0_vld_out)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((xStreamIn_V_V_0_vld_out = ap_const_logic_0) or (custDataStreamIn_V_V_0_vld_out = ap_const_logic_0) or (polStreamIn_V_V_0_vld_out = ap_const_logic_0) or (tsStreamIn_V_V_0_vld_out = ap_const_logic_0) or (yStreamIn_V_V_0_vld_out = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(streamOut_V_V_1_ack_in, tmp_9_reg_550)
    begin
                ap_block_state3_io <= ((tmp_9_reg_550 = ap_const_lv1_0) and (streamOut_V_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(streamOut_V_V_1_ack_in, tmp_9_reg_550, ap_predicate_op57_write_state4)
    begin
                ap_block_state4_io <= (((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op57_write_state4 = ap_const_boolean_1)) or ((tmp_9_reg_550 = ap_const_lv1_0) and (streamOut_V_V_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(streamOut_V_V_1_ack_in, tmp_9_reg_550, ap_predicate_op72_write_state5, ap_predicate_op74_write_state5)
    begin
                ap_block_state5_io <= (((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op74_write_state5 = ap_const_boolean_1)) or ((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op72_write_state5 = ap_const_boolean_1)) or ((tmp_9_reg_550 = ap_const_lv1_0) and (streamOut_V_V_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(streamOut_V_V_1_ack_in, tmp_9_reg_550, ap_predicate_op81_write_state6, ap_predicate_op83_write_state6)
    begin
                ap_block_state6_io <= (((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op83_write_state6 = ap_const_boolean_1)) or ((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op81_write_state6 = ap_const_boolean_1)) or ((tmp_9_reg_550 = ap_const_lv1_0) and (streamOut_V_V_1_ack_in = ap_const_logic_0)));
    end process;

        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(streamOut_V_V_1_ack_in, tmp_9_reg_550_pp0_iter1_reg, ap_predicate_op111_write_state7, ap_predicate_op112_write_state7)
    begin
                ap_block_state7_io <= (((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op112_write_state7 = ap_const_boolean_1)) or ((streamOut_V_V_1_ack_in = ap_const_logic_0) and (ap_predicate_op111_write_state7 = ap_const_boolean_1)) or ((tmp_9_reg_550_pp0_iter1_reg = ap_const_lv1_0) and (streamOut_V_V_1_ack_in = ap_const_logic_0)));
    end process;


    ap_block_state7_pp0_stage2_iter1_assign_proc : process(streamOut_V_V_1_ack_in)
    begin
                ap_block_state7_pp0_stage2_iter1 <= (streamOut_V_V_1_ack_in = ap_const_logic_0);
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op111_write_state7_assign_proc : process(tmp_s_reg_580, tmp_9_reg_550_pp0_iter1_reg)
    begin
                ap_predicate_op111_write_state7 <= ((tmp_9_reg_550_pp0_iter1_reg = ap_const_lv1_1) and (tmp_s_reg_580 = ap_const_lv1_0));
    end process;


    ap_predicate_op112_write_state7_assign_proc : process(tmp_s_reg_580, tmp_9_reg_550_pp0_iter1_reg)
    begin
                ap_predicate_op112_write_state7 <= ((tmp_s_reg_580 = ap_const_lv1_1) and (tmp_9_reg_550_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op57_write_state4_assign_proc : process(tmp_9_reg_550, tmp_s_reg_580)
    begin
                ap_predicate_op57_write_state4 <= ((tmp_s_reg_580 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1));
    end process;


    ap_predicate_op72_write_state5_assign_proc : process(tmp_9_reg_550, tmp_s_reg_580)
    begin
                ap_predicate_op72_write_state5 <= ((tmp_s_reg_580 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1));
    end process;


    ap_predicate_op74_write_state5_assign_proc : process(tmp_9_reg_550, tmp_s_reg_580)
    begin
                ap_predicate_op74_write_state5 <= ((tmp_s_reg_580 = ap_const_lv1_1) and (tmp_9_reg_550 = ap_const_lv1_1));
    end process;


    ap_predicate_op81_write_state6_assign_proc : process(tmp_9_reg_550, tmp_s_reg_580)
    begin
                ap_predicate_op81_write_state6 <= ((tmp_s_reg_580 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1));
    end process;


    ap_predicate_op83_write_state6_assign_proc : process(tmp_9_reg_550, tmp_s_reg_580)
    begin
                ap_predicate_op83_write_state6 <= ((tmp_s_reg_580 = ap_const_lv1_1) and (tmp_9_reg_550 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    custDataStreamIn_V_V_0_ack_in <= custDataStreamIn_V_V_0_state(1);

    custDataStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            custDataStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            custDataStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    custDataStreamIn_V_V_0_data_out_assign_proc : process(custDataStreamIn_V_V_0_payload_A, custDataStreamIn_V_V_0_payload_B, custDataStreamIn_V_V_0_sel)
    begin
        if ((custDataStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            custDataStreamIn_V_V_0_data_out <= custDataStreamIn_V_V_0_payload_B;
        else 
            custDataStreamIn_V_V_0_data_out <= custDataStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    custDataStreamIn_V_V_0_load_A <= (not(custDataStreamIn_V_V_0_sel_wr) and custDataStreamIn_V_V_0_state_cmp_full);
    custDataStreamIn_V_V_0_load_B <= (custDataStreamIn_V_V_0_state_cmp_full and custDataStreamIn_V_V_0_sel_wr);
    custDataStreamIn_V_V_0_sel <= custDataStreamIn_V_V_0_sel_rd;
    custDataStreamIn_V_V_0_state_cmp_full <= '0' when (custDataStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    custDataStreamIn_V_V_0_vld_in <= custDataStreamIn_V_V_TVALID;
    custDataStreamIn_V_V_0_vld_out <= custDataStreamIn_V_V_0_state(0);

    custDataStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, custDataStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            custDataStreamIn_V_V_TDATA_blk_n <= custDataStreamIn_V_V_0_state(0);
        else 
            custDataStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    custDataStreamIn_V_V_TREADY <= custDataStreamIn_V_V_0_state(1);
    glLastTSReg_V <= glLastTS_V_load_reg_544;

    glLastTSReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001, ap_reg_ioackin_glLastTSReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_glLastTSReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glLastTSReg_V_ap_vld <= ap_const_logic_1;
        else 
            glLastTSReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    glLastYReg_V <= glLastY_V;

    glLastYReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001, ap_reg_ioackin_glLastYReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_glLastYReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            glLastYReg_V_ap_vld <= ap_const_logic_1;
        else 
            glLastYReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    nonMonTSDiffFlgReg_V <= ap_phi_reg_pp0_iter0_p_0171_1_reg_218;

    nonMonTSDiffFlgReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001, ap_reg_ioackin_nonMonTSDiffFlgReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_nonMonTSDiffFlgReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            nonMonTSDiffFlgReg_V_ap_vld <= ap_const_logic_1;
        else 
            nonMonTSDiffFlgReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_1_fu_438_p3 <= 
        tmpWradDiffVal_V_fu_413_p2 when (tmp_1_reg_554(0) = '1') else 
        ap_const_lv12_0;
    p_Result_1_fu_450_p3 <= (ap_const_lv4_1 & tmp_5_reg_524);
    p_Result_2_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_463_p4),16));
    p_Result_3_fu_476_p5 <= (ap_const_lv5_D & tmp_V_9_reg_534(10 downto 0));
    p_Result_s_fu_387_p3 <= (ap_const_lv1_1 & tmp_4_reg_519);
    polStreamIn_V_V_0_ack_in <= polStreamIn_V_V_0_state(1);

    polStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            polStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            polStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    polStreamIn_V_V_0_data_out_assign_proc : process(polStreamIn_V_V_0_payload_A, polStreamIn_V_V_0_payload_B, polStreamIn_V_V_0_sel)
    begin
        if ((polStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            polStreamIn_V_V_0_data_out <= polStreamIn_V_V_0_payload_B;
        else 
            polStreamIn_V_V_0_data_out <= polStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    polStreamIn_V_V_0_load_A <= (polStreamIn_V_V_0_state_cmp_full and not(polStreamIn_V_V_0_sel_wr));
    polStreamIn_V_V_0_load_B <= (polStreamIn_V_V_0_state_cmp_full and polStreamIn_V_V_0_sel_wr);
    polStreamIn_V_V_0_sel <= polStreamIn_V_V_0_sel_rd;
    polStreamIn_V_V_0_state_cmp_full <= '0' when (polStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    polStreamIn_V_V_0_vld_in <= polStreamIn_V_V_TVALID;
    polStreamIn_V_V_0_vld_out <= polStreamIn_V_V_0_state(0);

    polStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, polStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            polStreamIn_V_V_TDATA_blk_n <= polStreamIn_V_V_0_state(0);
        else 
            polStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    polStreamIn_V_V_TREADY <= polStreamIn_V_V_0_state(1);
    rev1_fu_398_p2 <= (ult_fu_394_p2 xor ap_const_lv1_1);
    rotateInfoOutReg_V <= (tmp_8_reg_539 & glRotateDeltaTs_V);

    rotateInfoOutReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001, ap_reg_ioackin_rotateInfoOutReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_reg_ioackin_rotateInfoOutReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            rotateInfoOutReg_V_ap_vld <= ap_const_logic_1;
        else 
            rotateInfoOutReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    streamOut_V_V_1_ack_in <= streamOut_V_V_1_state(1);
    streamOut_V_V_1_ack_out <= streamOut_V_V_TREADY;

    streamOut_V_V_1_data_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_9_reg_550, ap_predicate_op57_write_state4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_predicate_op81_write_state6, ap_predicate_op83_write_state6, tsRaw_V_fu_430_p3, p_Result_1_fu_450_p3, p_Result_2_fu_471_p1, ap_predicate_op72_write_state5, ap_predicate_op74_write_state5, p_Result_3_fu_476_p5, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op83_write_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_predicate_op81_write_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            streamOut_V_V_1_data_in <= p_Result_3_fu_476_p5;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op74_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_predicate_op72_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            streamOut_V_V_1_data_in <= p_Result_2_fu_471_p1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_predicate_op57_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            streamOut_V_V_1_data_in <= p_Result_1_fu_450_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            streamOut_V_V_1_data_in <= tsRaw_V_fu_430_p3;
        else 
            streamOut_V_V_1_data_in <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    streamOut_V_V_1_data_out_assign_proc : process(streamOut_V_V_1_payload_A, streamOut_V_V_1_payload_B, streamOut_V_V_1_sel)
    begin
        if ((streamOut_V_V_1_sel = ap_const_logic_1)) then 
            streamOut_V_V_1_data_out <= streamOut_V_V_1_payload_B;
        else 
            streamOut_V_V_1_data_out <= streamOut_V_V_1_payload_A;
        end if; 
    end process;

    streamOut_V_V_1_load_A <= (streamOut_V_V_1_state_cmp_full and not(streamOut_V_V_1_sel_wr));
    streamOut_V_V_1_load_B <= (streamOut_V_V_1_state_cmp_full and streamOut_V_V_1_sel_wr);
    streamOut_V_V_1_sel <= streamOut_V_V_1_sel_rd;
    streamOut_V_V_1_state_cmp_full <= '0' when (streamOut_V_V_1_state = ap_const_lv2_1) else '1';

    streamOut_V_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_9_reg_550, ap_predicate_op57_write_state4, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_predicate_op81_write_state6, ap_predicate_op83_write_state6, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_predicate_op72_write_state5, ap_predicate_op74_write_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op83_write_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_predicate_op81_write_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_predicate_op57_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op74_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op72_write_state5 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            streamOut_V_V_1_vld_in <= ap_const_logic_1;
        else 
            streamOut_V_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    streamOut_V_V_1_vld_out <= streamOut_V_V_1_state(0);
    streamOut_V_V_TDATA <= streamOut_V_V_1_data_out;

    streamOut_V_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, tmp_9_reg_550, tmp_s_reg_580, ap_predicate_op57_write_state4, streamOut_V_V_1_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage0, tmp_9_reg_550_pp0_iter1_reg)
    begin
        if ((((tmp_9_reg_550_pp0_iter1_reg = ap_const_lv1_1) and (tmp_s_reg_580 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_s_reg_580 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_s_reg_580 = ap_const_lv1_1) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_s_reg_580 = ap_const_lv1_1) and (tmp_9_reg_550_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((tmp_9_reg_550_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_predicate_op57_write_state4 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_s_reg_580 = ap_const_lv1_0) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((tmp_s_reg_580 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_550 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_9_reg_550 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            streamOut_V_V_TDATA_blk_n <= streamOut_V_V_1_state(1);
        else 
            streamOut_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    streamOut_V_V_TVALID <= streamOut_V_V_1_state(0);
    tmpWradDiffVal_V_fu_413_p2 <= std_logic_vector(unsigned(tmp_2_fu_404_p4) - unsigned(tmp_12_reg_560));
    tmp_10_fu_321_p1 <= tsStreamIn_V_V_0_data_out(63 - 1 downto 0);
    tmp_11_fu_329_p1 <= glLastRotateTs_V(63 - 1 downto 0);
    tmp_12_fu_371_p1 <= glLastTsWrap_V(12 - 1 downto 0);
    tmp_1_fu_365_p2 <= "1" when (unsigned(tsWrap_V_fu_291_p4) > unsigned(glLastTsWrap_V)) else "0";
    tmp_2_fu_404_p4 <= tmp_V_6_reg_500(26 downto 15);
    tmp_4_fu_301_p1 <= tsStreamIn_V_V_0_data_out(15 - 1 downto 0);
    tmp_5_fu_305_p1 <= xStreamIn_V_V_0_data_out(12 - 1 downto 0);
    tmp_6_fu_309_p1 <= yStreamIn_V_V_0_data_out(12 - 1 downto 0);
    tmp_7_fu_333_p2 <= std_logic_vector(unsigned(tmp_10_fu_321_p1) - unsigned(tmp_11_fu_329_p1));
    tmp_8_fu_313_p3 <= custDataStreamIn_V_V_0_data_out(10 downto 10);
    tmp_9_fu_355_p2 <= "1" when (tsStreamIn_V_V_0_data_out = glLastTS_V) else "0";
    tmp_V_fu_287_p1 <= polStreamIn_V_V_0_data_out(1 - 1 downto 0);
    tmp_fu_463_p4 <= ((ap_const_lv1_1 & tmp_V_reg_514) & tmp_6_reg_529);
    tmp_s_fu_445_p2 <= "1" when (tmp_V_8_reg_507 = glLastY_V) else "0";
    tsDiffFlgReg_V <= ap_phi_reg_pp0_iter1_p_2_reg_248;

    tsDiffFlgReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001, ap_reg_ioackin_tsDiffFlgReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_reg_ioackin_tsDiffFlgReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            tsDiffFlgReg_V_ap_vld <= ap_const_logic_1;
        else 
            tsDiffFlgReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tsRaw_V_1_cast_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tsRaw_V_1_fu_418_p3),16));
    tsRaw_V_1_fu_418_p3 <= (ap_const_lv3_7 & tmpWradDiffVal_V_fu_413_p2);
    tsRaw_V_fu_430_p3 <= 
        tsRaw_V_1_cast_fu_426_p1 when (tmp_1_reg_554(0) = '1') else 
        p_Result_s_fu_387_p3;
    tsReg_V <= tmp_V_6_reg_500;

    tsReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001, ap_reg_ioackin_tsReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_tsReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tsReg_V_ap_vld <= ap_const_logic_1;
        else 
            tsReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tsStreamIn_V_V_0_ack_in <= tsStreamIn_V_V_0_state(1);

    tsStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tsStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            tsStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    tsStreamIn_V_V_0_data_out_assign_proc : process(tsStreamIn_V_V_0_payload_A, tsStreamIn_V_V_0_payload_B, tsStreamIn_V_V_0_sel)
    begin
        if ((tsStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            tsStreamIn_V_V_0_data_out <= tsStreamIn_V_V_0_payload_B;
        else 
            tsStreamIn_V_V_0_data_out <= tsStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    tsStreamIn_V_V_0_load_A <= (tsStreamIn_V_V_0_state_cmp_full and not(tsStreamIn_V_V_0_sel_wr));
    tsStreamIn_V_V_0_load_B <= (tsStreamIn_V_V_0_state_cmp_full and tsStreamIn_V_V_0_sel_wr);
    tsStreamIn_V_V_0_sel <= tsStreamIn_V_V_0_sel_rd;
    tsStreamIn_V_V_0_state_cmp_full <= '0' when (tsStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    tsStreamIn_V_V_0_vld_in <= tsStreamIn_V_V_TVALID;
    tsStreamIn_V_V_0_vld_out <= tsStreamIn_V_V_0_state(0);

    tsStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, tsStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tsStreamIn_V_V_TDATA_blk_n <= tsStreamIn_V_V_0_state(0);
        else 
            tsStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tsStreamIn_V_V_TREADY <= tsStreamIn_V_V_0_state(1);
    tsWrap_V_fu_291_p4 <= tsStreamIn_V_V_0_data_out(63 downto 15);
    tsWrappedVal_V <= ap_phi_reg_pp0_iter0_p_0144_1_reg_233;

    tsWrappedVal_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001, ap_reg_ioackin_tsWrappedVal_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_tsWrappedVal_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tsWrappedVal_V_ap_vld <= ap_const_logic_1;
        else 
            tsWrappedVal_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ult_fu_394_p2 <= "1" when (unsigned(glLastTS_V_load_reg_544) < unsigned(tmp_V_6_reg_500)) else "0";
    xStreamIn_V_V_0_ack_in <= xStreamIn_V_V_0_state(1);

    xStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            xStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            xStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    xStreamIn_V_V_0_data_out_assign_proc : process(xStreamIn_V_V_0_payload_A, xStreamIn_V_V_0_payload_B, xStreamIn_V_V_0_sel)
    begin
        if ((xStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            xStreamIn_V_V_0_data_out <= xStreamIn_V_V_0_payload_B;
        else 
            xStreamIn_V_V_0_data_out <= xStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    xStreamIn_V_V_0_load_A <= (xStreamIn_V_V_0_state_cmp_full and not(xStreamIn_V_V_0_sel_wr));
    xStreamIn_V_V_0_load_B <= (xStreamIn_V_V_0_state_cmp_full and xStreamIn_V_V_0_sel_wr);
    xStreamIn_V_V_0_sel <= xStreamIn_V_V_0_sel_rd;
    xStreamIn_V_V_0_state_cmp_full <= '0' when (xStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    xStreamIn_V_V_0_vld_in <= xStreamIn_V_V_TVALID;
    xStreamIn_V_V_0_vld_out <= xStreamIn_V_V_0_state(0);

    xStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, xStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            xStreamIn_V_V_TDATA_blk_n <= xStreamIn_V_V_0_state(0);
        else 
            xStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    xStreamIn_V_V_TREADY <= xStreamIn_V_V_0_state(1);
    yDiffFlgReg_V <= ap_phi_reg_pp0_iter1_p_082_1_reg_265;

    yDiffFlgReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001, ap_reg_ioackin_yDiffFlgReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_reg_ioackin_yDiffFlgReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            yDiffFlgReg_V_ap_vld <= ap_const_logic_1;
        else 
            yDiffFlgReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    yReg_V <= tmp_V_8_reg_507;

    yReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001, ap_reg_ioackin_yReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_yReg_V_dummy_ack = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            yReg_V_ap_vld <= ap_const_logic_1;
        else 
            yReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    yStreamIn_V_V_0_ack_in <= yStreamIn_V_V_0_state(1);

    yStreamIn_V_V_0_ack_out_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            yStreamIn_V_V_0_ack_out <= ap_const_logic_1;
        else 
            yStreamIn_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    yStreamIn_V_V_0_data_out_assign_proc : process(yStreamIn_V_V_0_payload_A, yStreamIn_V_V_0_payload_B, yStreamIn_V_V_0_sel)
    begin
        if ((yStreamIn_V_V_0_sel = ap_const_logic_1)) then 
            yStreamIn_V_V_0_data_out <= yStreamIn_V_V_0_payload_B;
        else 
            yStreamIn_V_V_0_data_out <= yStreamIn_V_V_0_payload_A;
        end if; 
    end process;

    yStreamIn_V_V_0_load_A <= (yStreamIn_V_V_0_state_cmp_full and not(yStreamIn_V_V_0_sel_wr));
    yStreamIn_V_V_0_load_B <= (yStreamIn_V_V_0_state_cmp_full and yStreamIn_V_V_0_sel_wr);
    yStreamIn_V_V_0_sel <= yStreamIn_V_V_0_sel_rd;
    yStreamIn_V_V_0_state_cmp_full <= '0' when (yStreamIn_V_V_0_state = ap_const_lv2_1) else '1';
    yStreamIn_V_V_0_vld_in <= yStreamIn_V_V_TVALID;
    yStreamIn_V_V_0_vld_out <= yStreamIn_V_V_0_state(0);

    yStreamIn_V_V_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter0, yStreamIn_V_V_0_state, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            yStreamIn_V_V_TDATA_blk_n <= yStreamIn_V_V_0_state(0);
        else 
            yStreamIn_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    yStreamIn_V_V_TREADY <= yStreamIn_V_V_0_state(1);
end behav;
